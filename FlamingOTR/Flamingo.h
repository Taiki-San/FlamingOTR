//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Typedef'd Structures

//typedef struct {
//    id _field1;
//    unsigned short _field2;
//} CDStruct_6a59ab51;

// Ambiguous groups
typedef struct {
    unsigned int didAddBuddy:1;
} CDStruct_84801727;

#pragma mark -

//
// File: /Applications/Flamingo.app/Contents/Resources/Flamingo.app/Contents/MacOS/Flamingo
// UUID: C0B982D0-1C3B-35F2-8C48-8206FBC99F0B
//
//                           Arch: x86_64
//                 Source version: 0.0.0.0.0
//       Minimum Mac OS X version: 10.8.0
//                    SDK version: 10.10.0
//
// Objective-C Garbage Collection: Unsupported
//
//                       Run path: @loader_path/../Frameworks
//                               = /Applications/Flamingo.app/Contents/Resources/Flamingo.app/Contents/Frameworks
//

@class FGOAccountProvidersViewController;
@class FGOAccount;
@class FGOAddBuddyViewController;
@class FGOAddPopoverViewController;
@class FGOTextView;
@class FGORosterHandle;
@class FGOChatMessage;
@class FGOChatFileTransferManager;
@class FGOIMServiceFileTransfer;
@class FGOChatConversation;
@class FGORosterHandleName;
@class FGOChatTextView;

@protocol FGOAccountProvidersViewControllerDelegate <NSObject>
- (void)accountProvidersViewController:(FGOAccountProvidersViewController *)arg1 didAddAccount:(FGOAccount *)arg2;
@end

@protocol FGOAddBuddyViewControllerDelegate <NSObject>

@optional
- (void)addBuddyViewController:(FGOAddBuddyViewController *)arg1 didAddBuddyWithAccount:(FGOAccount *)arg2 handle:(NSString *)arg3 firstName:(NSString *)arg4 lastName:(NSString *)arg5;
@end

@protocol FGOAddPopoverViewControllerDelegate <NSObject>

@optional
- (void)addPopoverViewController:(FGOAddPopoverViewController *)arg1 didAddBuddyWithAccount:(FGOAccount *)arg2 handle:(NSString *)arg3 firstName:(NSString *)arg4 lastName:(NSString *)arg5;
@end

@protocol FGOChatContentViewTextFinding <NSObject>
- (NSTextView *)textFindingTextView;
@end

@protocol FGOPseudoManagedObject <NSObject>

@optional
+ (NSString *)entityName;
- (void)fgo_deleteAndSave:(BOOL)arg1;
- (void)fgo_refreshAndMerge:(BOOL)arg1;
- (NSManagedObjectID *)fgo_permanentObjectID;
- (NSURL *)fgo_permanentURI;
- (NSManagedObjectContext *)managedObjectContext;
@end

@protocol FGOSeparatorViewController <NSObject>
- (BTRImageView *)separatorImageView;
@end

@protocol FGOTextViewDelegate <NSTextViewDelegate>

@optional
- (void)textView:(FGOTextView *)arg1 pastedImage:(NSImage *)arg2;
- (void)textViewInsertedNewline:(FGOTextView *)arg1 ignoringFieldEditor:(BOOL)arg2;
- (void)textViewInsertedTab:(FGOTextView *)arg1;
@end

@protocol FGOChatConversation <FGOPseudoManagedObject, NSObject>
+ (NSString *)inverseMessagesRelationshipKeypath;
@property(retain, nonatomic) NSOrderedSet *messages;
@property(retain, nonatomic) FGORosterHandle *handle;

@optional
@property(readonly, nonatomic) FGOChatMessage *preferredLastMessage;
@property(readonly, nonatomic) FGOChatMessage *lastMessage;
@property(readonly, nonatomic) FGOChatMessage *lastRealMessage;
- (RACSignal *)fetchLastMessagesImmediately:(unsigned long long)arg1 beforeDate:(NSDate *)arg2 groupingType:(long long)arg3;
- (RACSignal *)fetchLastMessages:(unsigned long long)arg1 beforeDate:(NSDate *)arg2 groupingType:(long long)arg3;
@end

@protocol FGOChatFileTransferManagerDelegate <NSObject>

@optional
- (void)fileTransferManager:(FGOChatFileTransferManager *)arg1 didReceiveOfferForFileTransfer:(FGOIMServiceFileTransfer *)arg2;
@end

@protocol FGOChatMessageTextFinding <NSObject>
- (NSString *)textFindingString;
@end

@protocol FGOChatMessage <NSObject, FGOPseudoManagedObject, FGOChatMessageTextFinding>
@property(readonly, nonatomic) Class cellClass;
@property(readonly, nonatomic) Class viewClass;
@property(readonly, nonatomic) Class displayViewClass;
@property(retain, nonatomic) FGOChatConversation *conversation;
@property(retain, nonatomic) FGORosterHandleName *handleName;
@property(readonly, nonatomic) BOOL automaticallyGenerated;
@property(nonatomic) BOOL readValue;
@property(nonatomic) NSNumber *read;
@property(nonatomic) BOOL sentValue;
@property(retain, nonatomic) NSNumber *sent;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) NSString *string;
@property(retain, nonatomic) NSAttributedString *attributedString;
@end

@protocol FGOChatTableCellAnimation <NSObject>
- (void)rewind;
- (RACSignal *)playAnimated:(BOOL)arg1 animateLine:(BOOL)arg2;
@end

@protocol FGOChatTextViewDelegate <FGOTextViewDelegate>

@optional
- (void)textViewResignedFirstResponder:(FGOChatTextView *)arg1;
- (void)textViewBecameFirstResponder:(FGOChatTextView *)arg1;
- (void)textViewFindAction:(FGOChatTextView *)arg1;
@end

@protocol FGOFileTransferXPC <NSObject>
- (void)uploadFileWithBookmarkData:(NSData *)arg1 reply:(void (^)(NSString *, NSError *))arg2;
- (void)authenticateWithEmail:(NSString *)arg1 password:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
@end

@class FGOCloudAppItem;

@protocol FGOCloudAppXPC <FGOFileTransferXPC>
- (void)fetchInformationForItemAtURL:(NSURL *)arg1 reply:(void (^)(FGOCloudAppItem *, NSError *))arg2;
- (void)uploadFileWithBookmarkData:(NSData *)arg1 reply:(void (^)(NSString *, NSError *))arg2;
- (void)authenticateWithEmail:(NSString *)arg1 password:(NSString *)arg2 reply:(void (^)(NSError *))arg3;
@end

@class FGOEmojiViewController;

@protocol FGOEmojiViewControllerDelegate <NSObject>

@optional
- (void)emojiViewController:(FGOEmojiViewController *)arg1 selectedEmojiWithString:(NSString *)arg2;
@end

@protocol FGOFileTransferApplication <NSObject>
- (void)fileUpload:(NSString *)arg1 failedWithError:(NSError *)arg2;
- (void)fileUpload:(NSString *)arg1 receivedURL:(NSURL *)arg2;
- (void)fileUpload:(NSString *)arg1 receivedProgress:(double)arg2;
@end

@class FGOFileTransferPrefAuthWindowController;

@protocol FGOFileTransferPrefAuthWindowControllerDelegate <NSObject>

@optional
- (void)fileTransferPrefAuthWindowControllerDidCancel:(FGOFileTransferPrefAuthWindowController *)arg1;
- (void)fileTransferPrefAuthWindowControllerDidAuthenticate:(FGOFileTransferPrefAuthWindowController *)arg1;
@end

@protocol FGOFileTransferService <NSObject>
+ (NSString *)name;
+ (NSURL *)host;
- (BOOL)isAuthenticated;
- (RACSignal *)transferFileAtURL:(NSURL *)arg1;
@end

@class FGOHistoryConversationsViewController;
@class FGOHistoryConversation;
@class FGOHistoryHandlesViewController;
@class FGOHistoryHandle;

@protocol FGOHistoryConversationsViewControllerDelegate <NSObject>
- (void)historyConversationsViewController:(FGOHistoryConversationsViewController *)arg1 didSelectConversation:(FGOHistoryConversation *)arg2;
@end

@protocol FGOHistoryHandlesViewControllerDelegate <NSObject>
- (void)historyHandlesViewController:(FGOHistoryHandlesViewController *)arg1 didSelectHandle:(FGOHistoryHandle *)arg2;
@end

@protocol FGOIMServiceClientDelegate;
@class FGOIMServiceHandle;
@class FGOIMServiceAccount;
@class FGOIMServiceMessage;
@class FGOIMServiceVCard;
@class FGOIMServicePresence;

@protocol FGOIMServiceClient <NSObject>
@property(readonly, nonatomic) BOOL supportsRegistration;
@property(readonly, nonatomic, getter=isSecure) BOOL secure;
@property(readonly, nonatomic, getter=isDisconnected) BOOL disconnected;
@property(readonly, nonatomic, getter=isConnecting) BOOL connecting;
@property(readonly, nonatomic, getter=isConnected) BOOL connected;
@property(nonatomic) id <FGOIMServiceClientDelegate> delegate;
@property(readonly, nonatomic) FGOIMServiceAccount *account;
- (RACSignal *)rejectAuthorizationRequestFromHandle:(FGOIMServiceHandle *)arg1;
- (RACSignal *)acceptAuthorizationRequestFromHandle:(FGOIMServiceHandle *)arg1;
- (RACSignal *)removeHandle:(FGOIMServiceHandle *)arg1;
- (RACSignal *)addHandle:(FGOIMServiceHandle *)arg1;
- (RACSignal *)rejectOfferForFileTransfer:(FGOIMServiceFileTransfer *)arg1;
- (RACSignal *)acceptOfferForFileTransfer:(FGOIMServiceFileTransfer *)arg1;
- (RACSignal *)sendOfferForFileTransfer:(FGOIMServiceFileTransfer *)arg1;
- (RACSignal *)retrieveCapabilitiesForHandle:(FGOIMServiceHandle *)arg1;
- (RACSignal *)sendMessage:(FGOIMServiceMessage *)arg1;
- (RACSignal *)retrieveAccountVCard;
- (RACSignal *)retrieveVCardForHandle:(FGOIMServiceHandle *)arg1;
- (RACSignal *)updateAccountVCard:(FGOIMServiceVCard *)arg1;
- (RACSignal *)updatePresence:(FGOIMServicePresence *)arg1;
- (RACSignal *)registerWithPassword:(NSString *)arg1;
- (RACSignal *)authenticate;
- (RACSignal *)connect;
- (RACSignal *)logout;
- (RACSignal *)login;
- (id)initWithAccount:(FGOIMServiceAccount *)arg1;
@end

@class FGOIMServiceRoster;

@protocol FGOIMServiceClientDelegate <NSObject>

@optional
- (void)client:(id <FGOIMServiceClient>)arg1 didReceiveOfferForTransfer:(FGOIMServiceFileTransfer *)arg2;
- (void)client:(id <FGOIMServiceClient>)arg1 didReceiveAuthorizationRequestFromHandle:(FGOIMServiceHandle *)arg2;
- (void)client:(id <FGOIMServiceClient>)arg1 didReceiveMessage:(FGOIMServiceMessage *)arg2;
- (void)client:(id <FGOIMServiceClient>)arg1 didUpdateRoster:(FGOIMServiceRoster *)arg2;
- (void)client:(id <FGOIMServiceClient>)arg1 didReceivePresence:(FGOIMServicePresence *)arg2;
- (void)client:(id <FGOIMServiceClient>)arg1 didReceiveError:(NSError *)arg2;
- (void)clientDidConnect:(id <FGOIMServiceClient>)arg1;
- (void)client:(id <FGOIMServiceClient>)arg1 didDisconnectWithError:(NSError *)arg2;
@end

@protocol FGOImageChatMessage

@optional
@property(retain, nonatomic) NSImage *cachedImage;
@property(readonly, nonatomic) NSImage *image;
@end

@class FGOMessagesTextFinderClient;
@class FGOMessagesTextFinderClient;

@protocol FGOMessagesTextFinderClientDelegate <NSObject>
- (NSIndexSet *)textFinderClientIndexesOfVisibleMessages:(FGOMessagesTextFinderClient *)arg1;
- (void)textFinderClient:(FGOMessagesTextFinderClient *)arg1 scrollToMessageIndex:(unsigned long long)arg2;
- (NSTextView *)textFinderClient:(FGOMessagesTextFinderClient *)arg1 textViewForMessageIndex:(unsigned long long)arg2;
@end

@protocol FGONameInformation <NSObject>
- (NSString *)lastName;
- (NSString *)firstName;
@end

@class FGOOAuth2KeyIdentifier;
@class FGOOAuth2Provider;
@class FGOOAuth2KeyStorage;
@class FGOOAuth2KeyIdentifier;

@protocol FGOOAuth2KeyStorageDelegate <NSObject>
- (NSWindow *)oAuth2KeyStorage:(FGOOAuth2KeyStorage *)arg1 parentWindowForIdentifier:(FGOOAuth2KeyIdentifier *)arg2;
- (FGOOAuth2Provider *)oAuth2KeyStorage:(FGOOAuth2KeyStorage *)arg1 providerInstanceForIdentifier:(FGOOAuth2KeyIdentifier *)arg2;
@end

@class FGOOAuth2WindowController;
@class FGOOAuth2Key;

@protocol FGOOAuth2WindowControllerDelegate <NSObject>

@optional
- (void)oAuth2Controller:(FGOOAuth2WindowController *)arg1 failedWithError:(NSError *)arg2;
- (void)oAuth2Controller:(FGOOAuth2WindowController *)arg1 receivedOAuth2Key:(FGOOAuth2Key *)arg2;
@end

@protocol FGOPictureDataObject <NSObject>
- (RACSignal *)generateGenericAvatarImage;
- (void)setPictureData:(id)arg1;
- (id)pictureData;
- (void)setRawPictureData:(NSData *)arg1;
- (NSData *)rawPictureData;
@end

@protocol FGOTransferableMessage <NSObject>
+ (id)insertMessageForFileTransferAtURL:(NSURL *)arg1 toHandleName:(FGORosterHandleName *)arg2 inConversation:(FGOChatConversation *)arg3;
@end

@protocol FGOVideoChatMessage
- (NSImage *)thumbnailImage;
- (NSImage *)retinaThumbnailImage;

@optional
@property(readonly, nonatomic) NSURL *localVideoURL;
@end

@class FGOXMPPEditPriorityWindowController;

@protocol FGOXMPPEditPriorityWindowControllerDelegate <NSObject>

@optional
- (void)xmppEditPriorityWindowControllerDidCancel:(FGOXMPPEditPriorityWindowController *)arg1;
- (void)xmppEditPriorityWindowControllerDidEditPriority:(FGOXMPPEditPriorityWindowController *)arg1;
@end

@class FGOXMPPLoginRegisterWindowController;

@protocol FGOXMPPLoginRegisterDelegate <NSObject>
- (void)xmppLoginRegisterWindowControllerDidCancel:(FGOXMPPLoginRegisterWindowController *)arg1;
- (void)xmppLoginRegisterWindowController:(FGOXMPPLoginRegisterWindowController *)arg1 loginSuccessfulWithKey:(FGOOAuth2Key *)arg2 account:(FGOIMServiceAccount *)arg3;
@end

@protocol MASPreferencesViewController <NSObject>
@property(readonly, nonatomic) NSString *toolbarItemLabel;
@property(readonly, nonatomic) NSImage *toolbarItemImage;
@property(readonly, nonatomic) NSString *identifier;

@optional
@property(readonly, nonatomic) BOOL hasResizableHeight;
@property(readonly, nonatomic) BOOL hasResizableWidth;
- (NSView *)initialKeyView;
- (void)viewDidDisappear;
- (void)viewWillAppear;
@end

@protocol QLPreviewItem <NSObject>
@property(readonly) NSURL *previewItemURL;

@optional
@property(readonly) id previewItemDisplayState;
@property(readonly) NSString *previewItemTitle;
@end

@class QLPreviewPanel;

@protocol QLPreviewPanelDataSource
- (id <QLPreviewItem>)previewPanel:(QLPreviewPanel *)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(QLPreviewPanel *)arg1;
@end

@protocol QLPreviewPanelDelegate <NSWindowDelegate>

@optional
- (id)previewPanel:(QLPreviewPanel *)arg1 transitionImageForPreviewItem:(id <QLPreviewItem>)arg2 contentRect:(struct CGRect *)arg3;
- (struct CGRect)previewPanel:(QLPreviewPanel *)arg1 sourceFrameOnScreenForPreviewItem:(id <QLPreviewItem>)arg2;
- (BOOL)previewPanel:(QLPreviewPanel *)arg1 handleEvent:(NSEvent *)arg2;
@end

@interface ABAddressBook (FGOConvenience)
- (id)fgo_searchResultForElements:(id)arg1;
@end

@interface ABAddressBook (FGOThreading)
+ (void)fgo_performBackgroundAddressBookBlock:(CDUnknownBlockType)arg1;
@end

@interface ABPerson (FGOConvenience)
+ (id)fgo_personWithHandleName:(id)arg1 addressBook:(id)arg2;
+ (id)fgo_personWithVCard:(id)arg1 addressBook:(id)arg2;
- (void)fgo_addInstantMessagingUsername:(id)arg1 serviceID:(id)arg2;
@end

@interface ABPerson (FGONameInformation) <FGONameInformation>
- (id)lastName;
- (id)firstName;

@end

@interface ABSearchElement (FGOSearchAdditions)
+ (id)fgo_serviceKeyForIdentifier:(id)arg1;
+ (id)fgo_searchElementForIMServiceHandle:(id)arg1 serviceIdentifier:(id)arg2;
+ (id)fgo_searchElementForFirstName:(id)arg1 lastName:(id)arg2;
@end

@interface ACAccountStore (FGOFacebookAdditions)
- (id)fgo_fetchAllFacebookAccounts;
@end

@interface AFHTTPClient (RACSupport)
- (id)rac_deletePath:(id)arg1 parameters:(id)arg2;
- (id)rac_putPath:(id)arg1 parameters:(id)arg2;
- (id)rac_postPath:(id)arg1 parameters:(id)arg2;
- (id)rac_getPath:(id)arg1 parameters:(id)arg2;
@end

@interface AFHTTPRequestOperation (RACSupport)
+ (id)rac_downloadRequestWithURL:(id)arg1;
@end

@interface AFImageRequestOperation (RACSupport)
+ (id)rac_imageRequestWithURL:(id)arg1 processingBlock:(CDUnknownBlockType)arg2;
@end

@interface AVAssetImageGenerator (RACSupport)
+ (id)rac_generateThumbnailForVideoURL:(id)arg1;
@end

@interface BTRButton (RACSupport)
@property(readonly, nonatomic) RACSignal *rac_backgroundImageSizeSignal;
@end

@interface CAAnimation (FGOConvenience)
+ (id)fgo_frameOriginSpringAnimationFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2;
+ (id)fgo_scaleSpringEntranceAnimation;
+ (id)fgo_frameOriginAnimationFrom:(struct CGPoint)arg1 to:(struct CGPoint)arg2 duration:(double)arg3;
+ (id)fgo_alphaValueAnimationFrom:(double)arg1 to:(double)arg2 duration:(double)arg3;
@end

@interface CALayer (FGOConvenience)
- (void)fgo_setAnchorPointPreservingFrame:(struct CGPoint)arg1;
@end

@interface CATransaction (RACAnimationSupport)
+ (id)rac_animate:(CDUnknownBlockType)arg1 withConfiguration:(CDUnknownBlockType)arg2;
+ (id)rac_animate:(CDUnknownBlockType)arg1 duration:(double)arg2 functionName:(id)arg3;
+ (id)rac_animate:(CDUnknownBlockType)arg1 duration:(double)arg2;
+ (id)rac_animate:(CDUnknownBlockType)arg1;
@end

@interface CallingCodeInfo : NSObject
{
    NSSet *_countries;
    NSString *_callingCode;
    NSMutableArray *_trunkPrefixes;
    NSMutableArray *_intlPrefixes;
    NSMutableArray *_ruleSets;
    NSMutableArray *_formatStrings;
}

@property(retain, nonatomic) NSMutableArray *formatStrings; // @synthesize formatStrings=_formatStrings;
@property(retain, nonatomic) NSMutableArray *ruleSets; // @synthesize ruleSets=_ruleSets;
@property(retain, nonatomic) NSMutableArray *intlPrefixes; // @synthesize intlPrefixes=_intlPrefixes;
@property(retain, nonatomic) NSMutableArray *trunkPrefixes; // @synthesize trunkPrefixes=_trunkPrefixes;
@property(retain, nonatomic) NSString *callingCode; // @synthesize callingCode=_callingCode;
@property(retain, nonatomic) NSSet *countries; // @synthesize countries=_countries;
- (id)description;
- (BOOL)isValidPhoneNumber:(id)arg1;
- (id)format:(id)arg1;
- (id)matchingTrunkCode:(id)arg1;
- (id)matchingAccessCode:(id)arg1;

@end

@interface CountlyConnectionQueue : NSObject
{
    NSString *_appKey;
    NSString *_appHost;
    NSURLConnection *_connection;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSURLConnection *connection; // @synthesize connection=_connection;
@property(copy, nonatomic) NSString *appHost; // @synthesize appHost=_appHost;
@property(copy, nonatomic) NSString *appKey; // @synthesize appKey=_appKey;
- (void)dealloc;
- (void)connection:(id)arg1 didFailWithError:(id)arg2;
- (void)connectionDidFinishLoading:(id)arg1;
- (void)recordEvents:(id)arg1;
- (void)endSessionWithDuration:(int)arg1;
- (void)updateSessionWithDuration:(int)arg1;
- (void)beginSession;
- (void)tick;

@end

@interface CountlyDB : NSObject
{
}

+ (id)sharedInstance;
- (id)persistentStoreCoordinator;
- (id)managedObjectModel;
- (id)managedObjectContext;
- (id)applicationDocumentsDirectory;
- (void)saveContext;
- (unsigned long long)getQueueCount;
- (unsigned long long)getEventCount;
- (id)getQueue;
- (id)getEvents;
- (void)removeFromQueue:(id)arg1;
- (void)addToQueue:(id)arg1;
- (void)deleteEvent:(id)arg1;
- (void)createEvent:(id)arg1 count:(double)arg2 sum:(double)arg3 segmentation:(id)arg4 timestamp:(double)arg5;

@end

@interface CountlyDeviceInfo : NSObject
{
}

+ (id)metrics;
+ (id)appVersion;
+ (id)locale;
+ (id)resolution;
+ (id)carrier;
+ (id)osVersion;
+ (id)osName;
+ (id)device;
+ (id)udid;

@end

@interface CountlyEvent : NSObject
{
    int _count;
    NSString *_key;
    NSDictionary *_segmentation;
    double _sum;
    double _timestamp;
}

+ (id)objectWithManagedObject:(id)arg1;
@property(nonatomic) double timestamp; // @synthesize timestamp=_timestamp;
@property(nonatomic) double sum; // @synthesize sum=_sum;
@property(nonatomic) int count; // @synthesize count=_count;
@property(retain, nonatomic) NSDictionary *segmentation; // @synthesize segmentation=_segmentation;
@property(copy, nonatomic) NSString *key; // @synthesize key=_key;
- (id)serializedData;
- (void)dealloc;

@end

@interface CountlyEventQueue : NSObject
{
}

- (void)recordEvent:(id)arg1 segmentation:(id)arg2 count:(int)arg3 sum:(double)arg4;
- (void)recordEvent:(id)arg1 segmentation:(id)arg2 count:(int)arg3;
- (void)recordEvent:(id)arg1 count:(int)arg2 sum:(double)arg3;
- (void)recordEvent:(id)arg1 count:(int)arg2;
- (id)events;
- (unsigned long long)count;
- (void)dealloc;

@end

@interface Countly_OpenUDID : NSObject
{
}

+ (void)setOptOut:(BOOL)arg1;
+ (id)valueWithError:(id *)arg1;
+ (id)value;
+ (id)_generateFreshOpenUDID;
+ (id)_getDictFromPasteboard:(id)arg1;
+ (void)_setDict:(id)arg1 forPasteboard:(id)arg2;

@end

@interface Countly : NSObject
{
	double unsentSessionLength;
	NSTimer *timer;
	double lastTime;
	BOOL isSuspended;
	CountlyEventQueue *eventQueue;
}

+ (id)sharedInstance;
- (void)willTerminateCallBack:(id)arg1;
- (void)willEnterForegroundCallBack:(id)arg1;
- (void)didEnterBackgroundCallBack:(id)arg1;
- (void)dealloc;
- (void)exit;
- (void)resume;
- (void)suspend;
- (void)onTimer:(id)arg1;
- (void)recordEvent:(id)arg1 segmentation:(id)arg2 count:(int)arg3 sum:(double)arg4;
- (void)recordEvent:(id)arg1 segmentation:(id)arg2 count:(int)arg3;
- (void)recordEvent:(id)arg1 count:(int)arg2 sum:(double)arg3;
- (void)recordEvent:(id)arg1 count:(int)arg2;
- (void)startOnCloudWithAppKey:(id)arg1;
- (void)start:(id)arg1 withHost:(id)arg2;
- (id)init;

@end

@interface DescriptionString : NSString
{
}

- (unsigned long long)length;
- (void)getCharacters:(unsigned short *)arg1 range:(struct _NSRange)arg2;
- (unsigned short)characterAtIndex:(unsigned long long)arg1;

@end

@interface FGOWindowController : NSWindowController
{
}

- (void)beginSheetModalForWindow:(id)arg1;
- (id)init;

@end

@class FGOHyperlinkLabel;

@interface FGOAboutWindowController : FGOWindowController
{
    BTRLabel *_versionLabel;
    FGOHyperlinkLabel *_christianLabel;
    FGOHyperlinkLabel *_indragieLabel;
    FGOHyperlinkLabel *_flamingoformacLabel;
    FGOHyperlinkLabel *_flamingoimLabel;
    FGOHyperlinkLabel *_acknowledgementsLabel;
}

@property(nonatomic) __weak FGOHyperlinkLabel *acknowledgementsLabel; // @synthesize acknowledgementsLabel=_acknowledgementsLabel;
@property(nonatomic) __weak FGOHyperlinkLabel *flamingoimLabel; // @synthesize flamingoimLabel=_flamingoimLabel;
@property(nonatomic) __weak FGOHyperlinkLabel *flamingoformacLabel; // @synthesize flamingoformacLabel=_flamingoformacLabel;
@property(nonatomic) __weak FGOHyperlinkLabel *indragieLabel; // @synthesize indragieLabel=_indragieLabel;
@property(nonatomic) __weak FGOHyperlinkLabel *christianLabel; // @synthesize christianLabel=_christianLabel;
@property(nonatomic) __weak BTRLabel *versionLabel; // @synthesize versionLabel=_versionLabel;
- (void)awakeFromNib;

@end

@interface FGOGuardedManagedObject : NSManagedObject
{
}

- (void)willChangeValueForKey:(id)arg1;

@end

@class FGOAccountPictureData;
@class FGOMessagingService;

@interface _FGOAccount : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)rosterRequestsSet;
- (id)handleNamesSet;
- (void)setPrimitivePresencePriorityValue:(short)arg1;
- (short)primitivePresencePriorityValue;
@property short presencePriorityValue;
- (void)setPrimitiveOrderValue:(short)arg1;
- (short)primitiveOrderValue;
@property short orderValue;
- (void)setPrimitiveEnabledValue:(BOOL)arg1;
- (BOOL)primitiveEnabledValue;
@property BOOL enabledValue;
- (void)setPrimitiveDeactivatedValue:(BOOL)arg1;
- (BOOL)primitiveDeactivatedValue;
@property BOOL deactivatedValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *acAccountID; // @dynamic acAccountID;
@property(retain, nonatomic) NSNumber *deactivated; // @dynamic deactivated;
@property(retain, nonatomic) NSNumber *enabled; // @dynamic enabled;
@property(retain, nonatomic) NSSet *handleNames; // @dynamic handleNames;
@property(retain, nonatomic) FGOOAuth2KeyIdentifier *keyIdentifier; // @dynamic keyIdentifier;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSNumber *order; // @dynamic order;
@property(retain, nonatomic) FGOAccountPictureData *originalPictureData; // @dynamic originalPictureData;
@property(retain, nonatomic) FGOAccountPictureData *pictureData; // @dynamic pictureData;
@property(retain, nonatomic) NSString *pictureHash; // @dynamic pictureHash;
@property(retain, nonatomic) NSNumber *presencePriority; // @dynamic presencePriority;
@property(retain, nonatomic) NSSet *rosterRequests; // @dynamic rosterRequests;
@property(retain, nonatomic) FGOMessagingService *service; // @dynamic service;
@property(retain, nonatomic) NSString *username; // @dynamic username;

@end

@interface FGOAccount : _FGOAccount <FGOPictureDataObject>
{
}

+ (id)insertAccountForIMServiceAttributes:(id)arg1 oAuth2Key:(id)arg2;
+ (id)fetchAllAccountsImmediately:(BOOL)arg1 withPictureData:(BOOL)arg2 includeDeactivated:(BOOL)arg3;
+ (id)keyPathsForValuesAffectingSanitizedUsername;
+ (id)keyPathsForValuesAffectingDomainStrippedUsername;
+ (id)keyPathsForValuesAffectingLastName;
+ (id)keyPathsForValuesAffectingFirstName;
+ (id)keyPathsForValuesAffectingRawOriginalPictureData;
+ (id)keyPathsForValuesAffectingRawPictureData;
- (id)fetchRequestWithHandle:(id)arg1;
- (id)fetchHandleNamesWithUsers:(id)arg1;
- (id)fetchHandleNameWithUser:(id)arg1;
- (id)fetchHandleNamesWithNames:(id)arg1;
- (id)fetchHandleNameWithName:(id)arg1;
- (id)fetchAuthenticatedIMServiceAccount;
@property(readonly, nonatomic) NSString *uniqueIdentifier;
@property(readonly, nonatomic) NSString *sanitizedUsername;
@property(readonly, nonatomic) NSString *domainStrippedUsername;
@property(readonly, nonatomic) NSString *lastName;
@property(readonly, nonatomic) NSString *firstName;
@property(retain, nonatomic) NSData *rawOriginalPictureData;
@property(retain, nonatomic) NSData *rawPictureData;
- (id)generateGenericAvatarImage;
- (void)awakeFromInsert;

@end

// Remaining properties

@class FGODatedChatConversation;

@interface _FGOChatMessage : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveSentValue:(BOOL)arg1;
- (BOOL)primitiveSentValue;
@property BOOL sentValue;
- (void)setPrimitiveSearchDocumentIDValue:(long long)arg1;
- (long long)primitiveSearchDocumentIDValue;
@property long long searchDocumentIDValue;
- (void)setPrimitiveReadValue:(BOOL)arg1;
- (BOOL)primitiveReadValue;
@property BOOL readValue;
- (void)setPrimitiveGroupingTypeValue:(short)arg1;
- (short)primitiveGroupingTypeValue;
@property short groupingTypeValue;
- (void)setPrimitiveDeliveryFailedValue:(BOOL)arg1;
- (BOOL)primitiveDeliveryFailedValue;
@property BOOL deliveryFailedValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGOChatConversation *conversation; // @dynamic conversation;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(retain, nonatomic) FGODatedChatConversation *datedConversation; // @dynamic datedConversation;
@property(retain, nonatomic) NSNumber *deliveryFailed; // @dynamic deliveryFailed;
@property(retain, nonatomic) NSNumber *groupingType; // @dynamic groupingType;
@property(retain, nonatomic) FGORosterHandleName *handleName; // @dynamic handleName;
@property(retain, nonatomic) NSString *htmlContents; // @dynamic htmlContents;
@property(retain, nonatomic) NSNumber *read; // @dynamic read;
@property(retain, nonatomic) NSNumber *searchDocumentID; // @dynamic searchDocumentID;
@property(retain, nonatomic) NSNumber *sent; // @dynamic sent;
@property(retain, nonatomic) NSString *string; // @dynamic string;

@end

@interface FGOChatMessage : _FGOChatMessage <FGOChatMessage, FGOChatMessageTextFinding>
{
    BOOL _downloading;
    double _progress;
    NSError *_error;
    CDUnknownBlockType _retryBlock;
}

+ (id)keyPathsForValuesAffectingDisplayViewClass;
+ (id)humanReadableType;
+ (id)fileDeletionKeypaths;
@property(copy, nonatomic) CDUnknownBlockType retryBlock; // @synthesize retryBlock=_retryBlock;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic, getter=isDownloading) BOOL downloading; // @synthesize downloading=_downloading;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(readonly, nonatomic) NSUserNotification *userNotification;
- (void)cancel;
- (BOOL)retry;
- (void)endDownload;
- (void)beginDownload;
- (id)textFindingString;
@property(readonly, nonatomic) Class displayViewClass;
@property(readonly, nonatomic) Class viewClass;
@property(readonly, nonatomic) Class cellClass;
@property(readonly, nonatomic) BOOL automaticallyGenerated;
@property(retain, nonatomic) NSAttributedString *attributedString;
- (void)setPrimitiveAttributedString:(id)arg1;
- (void)cleanupOldDatedConversation:(id)arg1;
- (void)resetDatedConversation;
- (void)setDatedConversation:(id)arg1;
@property(retain, nonatomic) NSDate *date;
@property(retain, nonatomic) FGOChatConversation *conversation;
- (void)deleteFileData;
- (void)prepareForDeletion;
- (void)didTurnIntoFault;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) FGORosterHandleName *handleName;
@property(nonatomic) NSNumber *read;
@property(retain, nonatomic) NSNumber *sent;
@property(retain, nonatomic) NSString *string;
@property(readonly) Class superclass;

@end

@interface _FGOAccountChatMessage : FGOChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *email; // @dynamic email;
@property(retain, nonatomic) NSString *serviceName; // @dynamic serviceName;

@end

@interface FGOAccountChatMessage : _FGOAccountChatMessage
{
}

+ (id)insertAccountMessageForHandleName:(id)arg1 inConversation:(id)arg2;
- (BOOL)automaticallyGenerated;
- (Class)cellClass;
- (void)setAttributesFromHandleName:(id)arg1;

@end

@interface FGOChatMessageID : NSManagedObjectID
{
}

@end

@interface FGOAccountChatMessageID : FGOChatMessageID
{
}

@end

@interface FGOAccountID : NSManagedObjectID
{
}

@end

@interface _FGOPictureData : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSData *pictureData; // @dynamic pictureData;

@end

@interface FGOPictureData : _FGOPictureData
{
}

+ (id)insertPictureDataWithData:(id)arg1 inManagedObjectContext:(id)arg2;

@end

@interface _FGOAccountPictureData : FGOPictureData
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGOAccount *account; // @dynamic account;
@property(retain, nonatomic) FGOAccount *originalAccount; // @dynamic originalAccount;

@end

@interface FGOAccountPictureData : _FGOAccountPictureData
{
}

@end

@interface FGOPictureDataID : NSManagedObjectID
{
}

@end

@interface FGOAccountPictureDataID : FGOPictureDataID
{
}

@end

@interface FGOAccountProvider : NSObject
{
    NSString *_name;
    NSImage *_icon;
    NSImage *_largeIcon;
    long long _identifier;
}

+ (id)xmppProvider;
+ (id)facebookProvider;
+ (id)googleTalkProvider;
+ (id)allProviders;
@property(readonly, nonatomic) long long identifier; // @synthesize identifier=_identifier;
@property(readonly, nonatomic) NSImage *largeIcon; // @synthesize largeIcon=_largeIcon;
@property(readonly, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) FGOOAuth2Provider *oAuth2Provider;
- (id)initWithName:(id)arg1 icon:(id)arg2 largeIcon:(id)arg3 identifier:(long long)arg4;

@end

@interface FGOLayeredTableCellView : NSTableCellView
{
    BOOL _selected;
    NSColor *_layerBackgroundColor;
}

+ (double)rowHeight;
+ (id)reuseIdentifier;
@property(retain, nonatomic) NSColor *layerBackgroundColor; // @synthesize layerBackgroundColor=_layerBackgroundColor;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (void)prepareForReuse;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOLayeredTableCellView;

@end

@interface FGOHoveringTableCellView : FGOLayeredTableCellView
{
    BOOL _hovering;
}

@property(nonatomic) BOOL hovering; // @synthesize hovering=_hovering;
- (void)prepareForReuse;

@end

@interface FGOAccountProviderTableCellView : FGOHoveringTableCellView
{
}

- (void)awakeFromNib;

@end

@interface FGOLayeredTableRowView : NSTableRowView
{
}

- (long long)draggingDestinationFeedbackStyle;
- (long long)selectionHighlightStyle;
- (void)setSelected:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOLayeredTableRowView;

@end

@interface FGOHoveringTableRowView : FGOLayeredTableRowView
{
    BOOL _hovering;
}

@property(nonatomic) BOOL hovering; // @synthesize hovering=_hovering;

@end

@interface FGOAccountProviderTableRowView : FGOHoveringTableRowView
{
}

+ (id)separatorImage;
+ (id)selectedBackgroundImage;
+ (id)hoverBackgroundImage;
- (id)currentBackgroundImage;
- (void)drawBackgroundInRect:(struct CGRect)arg1;

@end

@interface FGOViewController : NSViewController
{
}

+ (id)viewController;
- (id)init;

@end

@class FGOLayeredTableView;
@class FGOOAuth2WebWindowController;

@interface FGOAccountProvidersViewController : FGOViewController <FGOOAuth2WindowControllerDelegate, FGOXMPPLoginRegisterDelegate, NSTableViewDataSource, NSTableViewDelegate>
{
    BOOL _awokenFromNib;
    BTRLabel *_chooseLabel;
    FGOLayeredTableView *_tableView;
    id <FGOAccountProvidersViewControllerDelegate> _delegate;
    NSArray *_providers;
    FGOOAuth2WebWindowController *_oAuth2Controller;
    FGOXMPPLoginRegisterWindowController *_xmppController;
}

@property(retain, nonatomic) FGOXMPPLoginRegisterWindowController *xmppController; // @synthesize xmppController=_xmppController;
@property(retain, nonatomic) FGOOAuth2WebWindowController *oAuth2Controller; // @synthesize oAuth2Controller=_oAuth2Controller;
@property(readonly, nonatomic) NSArray *providers; // @synthesize providers=_providers;
@property(nonatomic) id <FGOAccountProvidersViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak FGOLayeredTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak BTRLabel *chooseLabel; // @synthesize chooseLabel=_chooseLabel;
- (void)addAccountForKey:(id)arg1 serviceAttributes:(id)arg2;
- (void)oAuth2Controller:(id)arg1 receivedOAuth2Key:(id)arg2;
- (void)oAuth2Controller:(id)arg1 failedWithError:(id)arg2;
- (void)xmppLoginRegisterWindowControllerDidCancel:(id)arg1;
- (void)xmppLoginRegisterWindowController:(id)arg1 loginSuccessfulWithKey:(id)arg2 account:(id)arg3;
- (void)openXMPPSheet;
- (void)openOAuthSheetForProvider:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOAccountProvidersViewController;
- (void)awakeFromNib;

@end

// Remaining properties

@class FGOAccountsViewController;

@interface FGOAccountsPrefViewController : FGOViewController <MASPreferencesViewController>
{
    FGOAccountsViewController *_accountsViewController;
    FGOAccountProvidersViewController *_providersViewController;
}

@property(retain, nonatomic) FGOAccountProvidersViewController *providersViewController; // @synthesize providersViewController=_providersViewController;
@property(retain, nonatomic) FGOAccountsViewController *accountsViewController; // @synthesize accountsViewController=_accountsViewController;
@property(readonly, nonatomic) NSString *toolbarItemLabel;
@property(readonly, nonatomic) NSImage *toolbarItemImage;
@property(readonly, nonatomic) NSString *identifier;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) BOOL hasResizableHeight;
@property(readonly, nonatomic) BOOL hasResizableWidth;
@property(readonly) Class superclass;

@end

@interface FGOAccountsViewController : FGOViewController <NSTableViewDelegate, NSMenuDelegate, FGOXMPPEditPriorityWindowControllerDelegate>
{
    BOOL _awokenFromNib;
    FGOXMPPEditPriorityWindowController *_editPriorityWindowController;
    NSArrayController *_arrayController;
    FGOLayeredTableView *_tableView;
}

@property(nonatomic) __weak FGOLayeredTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSArrayController *arrayController; // @synthesize arrayController=_arrayController;
@property(retain, nonatomic) FGOXMPPEditPriorityWindowController *editPriorityWindowController; // @synthesize editPriorityWindowController=_editPriorityWindowController;
- (void)menuNeedsUpdate:(id)arg1;
- (void)xmppEditPriorityWindowControllerDidCancel:(id)arg1;
- (void)xmppEditPriorityWindowControllerDidEditPriority:(id)arg1;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (void)showEditPresencePriorityPanelForAccount:(id)arg1;
- (void)deleteAccountAtIndex:(unsigned long long)arg1;
- (void)deleteAccount:(id)arg1;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (void)awakeFromNib;

@end

// Remaining properties

@interface FGOAddAccountCardViewController : FGOAccountProvidersViewController <FGOAccountProvidersViewControllerDelegate>
{
    BTRLabel *_titleLabel;
    BTRLabel *_descriptionLabel;
}

@property(nonatomic) __weak BTRLabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(nonatomic) __weak BTRLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
- (long long)cellPositionForRowIndex:(long long)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)accountProvidersViewController:(id)arg1 didAddAccount:(id)arg2;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)commonInitForFGOAddAccountCardViewController;

@end

// Remaining properties

@interface FGOAddAccountTableCellView : FGOLayeredTableCellView
{
    long long _cellPosition;
    BTRImageView *_iconImageView;
    BTRImageView *_arrowImageView;
}

+ (id)keyPathsForValuesAffectingCurrentYInset;
@property(nonatomic) __weak BTRImageView *arrowImageView; // @synthesize arrowImageView=_arrowImageView;
@property(nonatomic) __weak BTRImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(nonatomic) long long cellPosition; // @synthesize cellPosition=_cellPosition;
@property(readonly, nonatomic) double currentYInset;
- (void)awakeFromNib;

@end

@class RBLResizableImage;

@interface FGOAddAccountTableRowView : FGOLayeredTableRowView
{
    long long _cellPosition;
}

+ (double)heightForPosition:(long long)arg1;
+ (id)bottomCellActiveImage;
+ (id)middleCellActiveImage;
+ (id)topCellActiveImage;
+ (id)bottomCellImage;
+ (id)middleCellImage;
+ (id)topCellImage;
@property(nonatomic) long long cellPosition; // @synthesize cellPosition=_cellPosition;
@property(readonly, nonatomic) struct CGRect currentSeparatorRect;
@property(readonly, nonatomic) RBLResizableImage *currentCellImage;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)commonInitForFGOAddAccountTableRowView;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FGOAddBuddyPopUpButton : BTRPopUpButton
{
}

- (struct CGRect)labelFrame;
- (struct CGRect)imageFrame;
- (struct CGRect)arrowFrame;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOAddBuddyPopUpButton;

@end

@interface FGOAddBuddySeparatorLineView : BTRView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FGOAddBuddyViewController : FGOViewController <NSMenuDelegate>
{
    CDStruct_84801727 _delegateFlags;
    id <FGOAddBuddyViewControllerDelegate> _delegate;
    BTRPopUpButton *_accountPopUpButton;
    BTRTextField *_handleField;
    BTRTextField *_firstNameField;
    BTRTextField *_lastNameField;
    BTRButton *_addButton;
    BTRButton *_clearButton;
}

+ (void)styleControls:(id)arg1;
@property(nonatomic) __weak BTRButton *clearButton; // @synthesize clearButton=_clearButton;
@property(nonatomic) __weak BTRButton *addButton; // @synthesize addButton=_addButton;
@property(nonatomic) __weak BTRTextField *lastNameField; // @synthesize lastNameField=_lastNameField;
@property(nonatomic) __weak BTRTextField *firstNameField; // @synthesize firstNameField=_firstNameField;
@property(nonatomic) __weak BTRTextField *handleField; // @synthesize handleField=_handleField;
@property(nonatomic) __weak BTRPopUpButton *accountPopUpButton; // @synthesize accountPopUpButton=_accountPopUpButton;
@property(nonatomic) id <FGOAddBuddyViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)resetEmailPlaceholder;
- (void)controlTextDidChange:(id)arg1;
- (void)FGOAddBuddyViewController_configureButtons;
- (void)FGOAddBuddyViewController_configureFields;
- (void)loadView;

@end

// Remaining properties

@class FGOHelveticaButton;
@class FGORequestsViewController;

@interface FGOAddPopoverViewController : FGOViewController <FGOAddBuddyViewControllerDelegate>
{
    CDStruct_84801727 _delegateFlags;
    id <FGOAddPopoverViewControllerDelegate> _delegate;
    NSArray *_requests;
    FGOAddBuddyViewController *_addBuddyViewController;
    FGORequestsViewController *_requestsViewController;
    BTRImageView *_tabImageView;
    FGOHelveticaButton *_leftButton;
    FGOHelveticaButton *_rightButton;
    NSTabView *_tabView;
}

@property(nonatomic) __weak NSTabView *tabView; // @synthesize tabView=_tabView;
@property(nonatomic) __weak FGOHelveticaButton *rightButton; // @synthesize rightButton=_rightButton;
@property(nonatomic) __weak FGOHelveticaButton *leftButton; // @synthesize leftButton=_leftButton;
@property(nonatomic) __weak BTRImageView *tabImageView; // @synthesize tabImageView=_tabImageView;
@property(readonly, nonatomic) FGORequestsViewController *requestsViewController; // @synthesize requestsViewController=_requestsViewController;
@property(readonly, nonatomic) FGOAddBuddyViewController *addBuddyViewController; // @synthesize addBuddyViewController=_addBuddyViewController;
@property(retain, nonatomic) NSArray *requests; // @synthesize requests=_requests;
@property(nonatomic) id <FGOAddPopoverViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)setActiveTabIndex:(unsigned long long)arg1;
- (void)embedView:(id)arg1 inTabViewItemAtIndex:(unsigned long long)arg2;
- (void)addBuddyViewController:(id)arg1 didAddBuddyWithAccount:(id)arg2 handle:(id)arg3 firstName:(id)arg4 lastName:(id)arg5;
- (void)FGOAddPopoverViewController_configureSubViewControllers;
- (void)FGOAddPopoverViewController_configureTabs;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGOAddPopoverViewController;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;

@end

@interface FGOAddressBookBlockTrampoline : NSObject
{
    CDUnknownBlockType _addressBookBlock;
    CDUnknownBlockType _completionBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(readonly, copy, nonatomic) CDUnknownBlockType addressBookBlock; // @synthesize addressBookBlock=_addressBookBlock;
- (void)execute;
- (id)initWithAddressBookBlock:(CDUnknownBlockType)arg1 completionBlock:(CDUnknownBlockType)arg2;

@end

@interface FGOAddressBookWatcher : NSObject
{
}

+ (id)sharedWatcher;
- (void)startWatching;

@end

@interface FGOAlertBlockWrapper : NSObject
{
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void)alertDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;

@end

@interface FGOAnalytics : NSObject
{
}

+ (void)recordFileTransferWithServiceName:(id)arg1;
+ (void)recordMessageSent:(BOOL)arg1 withType:(id)arg2;
+ (void)recordAccountAddedForServiceName:(id)arg1;
+ (BOOL)analyticsEnabled;
+ (void)startSession;

@end

@interface FGOAppStoreWindowController : FGOWindowController
{
}

+ (void)configureCustomTrafficLightsForWindow:(id)arg1;
+ (void)configureWindow:(id)arg1 auxiliary:(BOOL)arg2;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (id)initWithWindow:(id)arg1;
- (id)init;

// Remaining properties
@property(retain) INAppStoreWindow *window; // @dynamic window;

@end

@interface FGOAttributedStringToHTMLValueTransformer : NSValueTransformer
{
}

+ (id)textShadow;
+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface FGOAuxiliaryViewController : INDockableViewController <FGOSeparatorViewController>
{
    BOOL _windowIsAnimating;
    id _willAnimateNotificationToken;
    id _didAnimateNotificationToken;
    BTRImageView *_separatorImageView;
    NSButton *_closeButton;
}

@property(nonatomic) __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) __weak BTRImageView *separatorImageView; // @synthesize separatorImageView=_separatorImageView;
@property(retain, nonatomic) id didAnimateNotificationToken; // @synthesize didAnimateNotificationToken=_didAnimateNotificationToken;
@property(retain, nonatomic) id willAnimateNotificationToken; // @synthesize willAnimateNotificationToken=_willAnimateNotificationToken;
@property(nonatomic) BOOL windowIsAnimating; // @synthesize windowIsAnimating=_windowIsAnimating;
- (void)viewControllerDidAttach;
- (void)viewControllerWillDetach;
- (void)activate;
- (void)close:(id)arg1;
- (void)executeBlockAfterWindowAnimationCompletes:(CDUnknownBlockType)arg1 delay:(double)arg2;
- (void)registerWindowControllerNotificationObservers;
- (void)unregisterWindowControllerNotificationObservers;
- (void)loadView;
- (void)dealloc;
- (void)commonInitForFGOAuxiliaryViewController;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property(retain) BTRView *view; // @dynamic view;

@end

@interface FGOPreference : NSObject
{
    RACSignal *_valueSignal;
    NSString *_userDefaultsKeypath;
    NSImage *_icon;
    NSString *_title;
}

+ (id)preferenceWithUserDefaultsKeypath:(id)arg1;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(readonly, copy, nonatomic) NSString *userDefaultsKeypath; // @synthesize userDefaultsKeypath=_userDefaultsKeypath;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
@property(retain, nonatomic) id objectValue;
@property(readonly, nonatomic) RACSignal *valueSignal; // @synthesize valueSignal=_valueSignal;

@end

@interface FGOBooleanPreference : FGOPreference
{
    NSArray *_dependentPreferences;
    FGOBooleanPreference *_parentPreference;
}

+ (id)preferenceWithUserDefaultsKeypath:(id)arg1 dependentPreferences:(id)arg2;
@property(readonly, nonatomic) __weak FGOBooleanPreference *parentPreference; // @synthesize parentPreference=_parentPreference;
@property(readonly, nonatomic) NSArray *dependentPreferences; // @synthesize dependentPreferences=_dependentPreferences;
@property(nonatomic) BOOL boolValue;

@end

@interface FGOBorderlessWindow : NSPanel
{
}

- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)hasShadow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface FGOCardViewController : FGOViewController
{
    NSImage *_cardImage;
    NSString *_cardTitle;
    NSString *_cardDescription;
    BTRLabel *_titleLabel;
    BTRLabel *_descriptionLabel;
    BTRImageView *_imageView;
}

+ (id)viewControllerWithImage:(id)arg1 title:(id)arg2 description:(id)arg3;
@property(nonatomic) __weak BTRImageView *imageView; // @synthesize imageView=_imageView;
@property(nonatomic) __weak BTRLabel *descriptionLabel; // @synthesize descriptionLabel=_descriptionLabel;
@property(nonatomic) __weak BTRLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(copy, nonatomic) NSString *cardDescription; // @synthesize cardDescription=_cardDescription;
@property(copy, nonatomic) NSString *cardTitle; // @synthesize cardTitle=_cardTitle;
@property(readonly, nonatomic) NSImage *cardImage; // @synthesize cardImage=_cardImage;
- (void)loadView;

@end

@interface FGOChatAccountTableCellBackgroundView : BTRView
{
    NSImage *_backgroundImage;
}

- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatAccountTableCellBackgroundView;

@end

@class FGOChatLineImageView;

@interface FGOChatTableCellView : FGOLayeredTableCellView
{
    NSTableView *_tableView;
    unsigned long long _rowIndex;
    FGOChatLineImageView *_lineImageView;
}

@property(nonatomic) __weak FGOChatLineImageView *lineImageView; // @synthesize lineImageView=_lineImageView;
@property(nonatomic) unsigned long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(nonatomic) __weak NSTableView *tableView; // @synthesize tableView=_tableView;
- (void)setLineVisible:(BOOL)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)awakeFromNib;

@end

@interface FGOChatAccountTableCellView : FGOChatTableCellView <FGOChatTableCellAnimation>
{
    BOOL _played;
    BTRImageView *_iconImageView;
}

+ (double)rowHeight;
@property(nonatomic) __weak BTRImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(nonatomic) BOOL played; // @synthesize played=_played;
- (void)rewind;
- (id)playAnimated:(BOOL)arg1 animateLine:(BOOL)arg2;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatAccountTableCellView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
\
@end

@interface FGOChatAttributedTextView : BTRView <FGOTextViewDelegate>
{
    BOOL _sent;
    BOOL _errored;
    NSTextView *_textView;
    NSAttributedString *_attributedString;
    NSRegularExpression *_emphasisRegularExpression;
    NSAttributedString *_displayAttributedString;
}

+ (id)emphasisTextAttributes;
+ (id)processAttributedString:(id)arg1 emphasisRegularExpression:(id)arg2 sent:(BOOL)arg3 errored:(BOOL)arg4;
+ (struct CGSize)intrinsicContentSizeForString:(id)arg1 withFont:(id)arg2 maximumWidth:(double)arg3;
@property(retain, nonatomic) NSAttributedString *displayAttributedString; // @synthesize displayAttributedString=_displayAttributedString;
@property(retain, nonatomic) NSRegularExpression *emphasisRegularExpression; // @synthesize emphasisRegularExpression=_emphasisRegularExpression;
@property(nonatomic) BOOL errored; // @synthesize errored=_errored;
@property(nonatomic) BOOL sent; // @synthesize sent=_sent;
@property(retain, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
@property(retain, nonatomic) NSTextView *textView; // @synthesize textView=_textView;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)layoutTextView;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)FGOChatAttributedTextView_subscribeKVOSignals;
- (void)FGOChatAttributedTextView_configureViews;
- (void)commonInitForFGOChatAttributedTextView;

@end

// Remaining properties

@class FGOChatContentView;
@class FGOCircularImageView;
@class FGOStaticImageView;

@interface FGOChatBubbleTableCellView : FGOChatTableCellView <FGOChatTableCellAnimation>
{
    BOOL _hasChatNib;
    BOOL _played;
    FGOChatContentView *_contentView;
    NSManagedObject<FGOPictureDataObject> *_avatarImageObject;
    NSRegularExpression *_emphasisRegularExpression;
    FGOCircularImageView *_avatarImageView;
    FGOStaticImageView *_bubbleImageView;
    BTRView *_bubbleContainerView;
    RACCompoundDisposable *_contentViewKVODisposable;
}

+ (void)removeCachedCellHeightsForMessages:(id)arg1;
+ (double)cellHeightForMessage:(id)arg1 width:(double)arg2;
+ (struct CGRect)alignFrame:(struct CGRect)arg1 toContentSize:(struct CGSize)arg2;
+ (id)avatarScaleAnimation;
+ (id)bubbleScaleAnimation;
+ (id)dateFormatter;
+ (id)timeFormatter;
@property(retain, nonatomic) RACCompoundDisposable *contentViewKVODisposable; // @synthesize contentViewKVODisposable=_contentViewKVODisposable;
@property(nonatomic) BOOL played; // @synthesize played=_played;
@property(retain, nonatomic) BTRView *bubbleContainerView; // @synthesize bubbleContainerView=_bubbleContainerView;
@property(nonatomic) __weak FGOStaticImageView *bubbleImageView; // @synthesize bubbleImageView=_bubbleImageView;
@property(nonatomic) __weak FGOCircularImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(retain, nonatomic) NSRegularExpression *emphasisRegularExpression; // @synthesize emphasisRegularExpression=_emphasisRegularExpression;
@property(retain, nonatomic) NSManagedObject<FGOPictureDataObject> *avatarImageObject; // @synthesize avatarImageObject=_avatarImageObject;
@property(nonatomic) BOOL hasChatNib; // @synthesize hasChatNib=_hasChatNib;
@property(retain, nonatomic) FGOChatContentView *contentView; // @synthesize contentView=_contentView;
- (void)prepareForReuse;
- (void)dequeueContentViewForClass:(Class)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)rewind;
- (id)playAnimated:(BOOL)arg1 animateLine:(BOOL)arg2;
- (void)tearDownContentViewKVOObservation;
- (void)setUpContentViewKVOObservation;
- (void)FGOChatBubbleTableCellView_configureBindings;
- (void)awakeFromNib;

@end

// Remaining properties

@interface FGOChatContentView : BTRView
{
    BOOL _cellHasChatNib;
    id <FGOChatMessage> _message;
    NSRegularExpression *_emphasisRegularExpression;
}

+ (id)cachedCalculations;
+ (double)maximumContentWidthForContainerSize:(struct CGSize)arg1;
+ (struct NSEdgeInsets)contentInset;
+ (BOOL)showBubbleBackground;
+ (BOOL)accountForBubbleNibWidthDuringLayout;
+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (void)removeCachedContentSizesForMessages:(id)arg1;
+ (struct CGSize)contentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
@property(retain, nonatomic) NSRegularExpression *emphasisRegularExpression; // @synthesize emphasisRegularExpression=_emphasisRegularExpression;
@property(nonatomic) BOOL cellHasChatNib; // @synthesize cellHasChatNib=_cellHasChatNib;
@property(retain, nonatomic) id <FGOChatMessage> message; // @synthesize message=_message;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (struct CGSize)contentSizeForContainerSize:(struct CGSize)arg1;
- (void)prepareForReuse;

@end

@interface FGOChatContentViewAttributes : NSObject
{
}

+ (id)boldMessageFont;
+ (id)messageFont;
+ (id)whiteLinkTextColor;
+ (id)whiteTextShadow;
+ (id)whiteBackgroundColor;
+ (id)whiteTextColor;
+ (id)redBackgroundColor;
+ (id)blueBackgroundColor;
+ (id)redTextShadow;
+ (id)blueTextShadow;
+ (id)blueTextColor;

@end

@interface FGOChatContentViewCalculation : MTLModel
{
    Class _viewClass;
    struct CGSize _contentSize;
    struct CGSize _containerSize;
}

+ (id)calculationWithContentSize:(struct CGSize)arg1 viewClass:(Class)arg2 containerSize:(struct CGSize)arg3;
@property(readonly, nonatomic) struct CGSize containerSize; // @synthesize containerSize=_containerSize;
@property(readonly, nonatomic) Class viewClass; // @synthesize viewClass=_viewClass;
@property(readonly, nonatomic) struct CGSize contentSize; // @synthesize contentSize=_contentSize;

@end

@interface FGOChatContentViewQueue : NSObject
{
    NSMutableDictionary *_views;
}

+ (id)sharedInstance;
- (void)queueReusableContentView:(id)arg1;
- (id)dequeueReusableContentViewForClass:(Class)arg1;
- (id)init;

@end

@interface _FGOChatConversation : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)messagesSet;
- (void)setPrimitiveUnreadCountValue:(short)arg1;
- (short)primitiveUnreadCountValue;
@property short unreadCountValue;
- (void)setPrimitiveActiveValue:(BOOL)arg1;
- (BOOL)primitiveActiveValue;
@property BOOL activeValue;
- (id)objectID;
- (void)removeMessagesObject:(id)arg1;
- (void)addMessagesObject:(id)arg1;
- (void)removeMessages:(id)arg1;
- (void)addMessages:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSNumber *active; // @dynamic active;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(retain, nonatomic) FGORosterHandle *handle; // @dynamic handle;
@property(retain, nonatomic) NSOrderedSet *messages; // @dynamic messages;
@property(retain, nonatomic) NSNumber *unreadCount; // @dynamic unreadCount;

@end

@interface FGOChatConversation : _FGOChatConversation <FGOChatConversation>
{
}

+ (id)inverseMessagesRelationshipKeypath;
+ (id)fetchUnreadConversationsImmediately;
+ (id)fetchActiveConversations;
+ (id)insertConversationForHandle:(id)arg1;
- (void)prepareForDeletion;
- (void)markMessagesRead:(id)arg1;
- (id)insertChatMessageWithEntityName:(id)arg1 string:(id)arg2 sent:(BOOL)arg3 handleName:(id)arg4;
- (id)addChatMessagesFromString:(id)arg1 sent:(BOOL)arg2 handleName:(id)arg3;
- (id)sendExistingMessage:(id)arg1 withState:(long long)arg2 toHandleName:(id)arg3;
- (id)sendMessage:(id)arg1 withState:(long long)arg2 toHandleName:(id)arg3;
- (void)awakeFromInsert;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) FGORosterHandle *handle;
@property(readonly, nonatomic) FGOChatMessage *lastMessage;
@property(readonly, nonatomic) FGOChatMessage *lastRealMessage;
@property(retain, nonatomic) NSOrderedSet *messages;
@property(readonly, nonatomic) FGOChatMessage *preferredLastMessage;
@property(readonly) Class superclass;

@end

@interface FGOChatConversationID : NSManagedObjectID
{
}

@end

@interface FGOChatConversation_ProtocolMethodContainer : NSObject <FGOChatConversation>
{
}

+ (id)keyPathsForValuesAffectingPreferredLastMessage;
+ (id)keyPathsForValuesAffectingLastRealMessage;
+ (id)keyPathsForValuesAffectingLastMessage;
+ (id)inverseMessagesRelationshipKeypath;
+ (void)load;
- (id)fetchRequestForMessages:(unsigned long long)arg1 beforeDate:(id)arg2 groupingType:(long long)arg3;
- (id)fetchLastMessagesImmediately:(unsigned long long)arg1 beforeDate:(id)arg2 groupingType:(long long)arg3;
- (id)fetchLastMessages:(unsigned long long)arg1 beforeDate:(id)arg2 groupingType:(long long)arg3;
@property(readonly, nonatomic) FGOChatMessage *preferredLastMessage;
@property(readonly, nonatomic) FGOChatMessage *lastRealMessage;
@property(readonly, nonatomic) FGOChatMessage *lastMessage;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) FGORosterHandle *handle; // @dynamic handle;
@property(retain, nonatomic) NSOrderedSet *messages; // @dynamic messages;
@property(readonly) Class superclass;

@end

@interface FGOChatIconTextTableCellView : FGOChatTableCellView <FGOChatTableCellAnimation>
{
    BOOL _played;
    BTRImageView *_iconImageView;
}

+ (double)rowHeight;
+ (id)boldTextAttributes;
+ (id)standardTextAttributes;
+ (id)commonTextAttributes;
@property(nonatomic) BOOL played; // @synthesize played=_played;
@property(nonatomic) __weak BTRImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
- (void)rewind;
- (id)playAnimated:(BOOL)arg1 animateLine:(BOOL)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) Class superclass;
@property __weak BTRLabel *textField; // @dynamic textField;

@end

@interface FGOChatDateTableCellView : FGOChatIconTextTableCellView
{
}

+ (id)dateFormatter;
+ (id)dateStringFromDate:(id)arg1 withFormat:(long long)arg2;
- (void)awakeFromNib;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGODateTableCellView;

@end

@interface FGOChatEndpointTableCellView : FGOChatTableCellView <FGOChatTableCellAnimation>
{
    BOOL _played;
    BTRImageView *_iconImageView;
}

+ (double)rowHeight;
@property(nonatomic) __weak BTRImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(nonatomic) BOOL played; // @synthesize played=_played;
- (void)rewind;
- (id)playAnimated:(BOOL)arg1 animateLine:(BOOL)arg2;
- (void)awakeFromNib;

@end

// Remaining properties

@interface FGOChatFileStorage : NSObject
{
    NSObject<OS_dispatch_queue> *_ioQueue;
    NSDateFormatter *_folderDateFormatter;
}

+ (id)sharedInstance;
- (id)URLForIdentifier:(id)arg1;
- (void)deleteDataForIdentifier:(id)arg1;
- (id)readDataForIdentifier:(id)arg1;
- (void)createParentDirectoryForURL:(id)arg1;
- (void)copyFileAtURL:(id)arg1 toSubpath:(id)arg2;
- (void)writeData:(id)arg1 toSubpath:(id)arg2;
- (id)writeMetadata:(id)arg1 extension:(id)arg2 service:(id)arg3 username:(id)arg4 tag:(id)arg5;
- (id)subpathForFileName:(id)arg1 parentName:(id)arg2;
- (id)writeLocalFileURL:(id)arg1;
- (id)writeThumbnailFileData:(id)arg1 fileName:(id)arg2;
- (id)writeFileData:(id)arg1 fileName:(id)arg2;
- (id)init;

@end

@interface FGOChatFileTransferManager : NSObject
{
    BOOL _supportsIMFileTransfer;
    FGOChatConversation *_conversation;
    FGORosterHandleName *_handleName;
    id <FGOChatFileTransferManagerDelegate> _delegate;
    FGOIMServiceHandle *_IMHandle;
}

+ (Class)fileChatMessageClassForFileName:(id)arg1;
@property(nonatomic) BOOL supportsIMFileTransfer; // @synthesize supportsIMFileTransfer=_supportsIMFileTransfer;
@property(retain, nonatomic) FGOIMServiceHandle *IMHandle; // @synthesize IMHandle=_IMHandle;
@property(nonatomic) id <FGOChatFileTransferManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) FGORosterHandleName *handleName; // @synthesize handleName=_handleName;
@property(readonly, nonatomic) FGOChatConversation *conversation; // @synthesize conversation=_conversation;
- (void)rejectOfferForFileTransfer:(id)arg1;
- (id)acceptOfferForFileTransfer:(id)arg1;
- (id)messageForFileTransferAtURL:(id)arg1 transferMethod:(long long)arg2;
@property(readonly, nonatomic) long long supportedMethods;
- (void)FGOChatFileTransferManager_subscribeKVOSignals;
- (void)FGOChatFileTransferManager_subscribeConnectionSignals;
- (id)initWithConversation:(id)arg1;

@end

@interface FGOChatHoverImageView : BTRView <QLPreviewPanelDataSource, QLPreviewPanelDelegate, NSDraggingSource>
{
    NSImage *_image;
    NSURL *_remoteURL;
    NSURL *_localURL;
    NSImage *_providerIconImage;
    NSImage *_highlightedProviderIconImage;
    BTRImageView *_imageView;
    BTRImageView *_overlayImageView;
    BTRButton *_quickLookButton;
    BTRButton *_providerButton;
    BTRView *_hoverOverlayView;
    NSTrackingArea *_trackingArea;
    NSArray *_bindingDisposables;
}

+ (id)photoBubbleOverlayImage;
@property(retain, nonatomic) NSArray *bindingDisposables; // @synthesize bindingDisposables=_bindingDisposables;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property(readonly, nonatomic) BTRView *hoverOverlayView; // @synthesize hoverOverlayView=_hoverOverlayView;
@property(readonly, nonatomic) BTRButton *providerButton; // @synthesize providerButton=_providerButton;
@property(readonly, nonatomic) BTRButton *quickLookButton; // @synthesize quickLookButton=_quickLookButton;
@property(readonly, nonatomic) BTRImageView *overlayImageView; // @synthesize overlayImageView=_overlayImageView;
@property(readonly, nonatomic) BTRImageView *imageView; // @synthesize imageView=_imageView;
@property(retain, nonatomic) NSImage *highlightedProviderIconImage; // @synthesize highlightedProviderIconImage=_highlightedProviderIconImage;
@property(retain, nonatomic) NSImage *providerIconImage; // @synthesize providerIconImage=_providerIconImage;
@property(retain, nonatomic) NSURL *localURL; // @synthesize localURL=_localURL;
@property(retain, nonatomic) NSURL *remoteURL; // @synthesize remoteURL=_remoteURL;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
- (id)previewItemTitle;
- (id)previewItemURL;
- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (void)openImage;
- (void)toggleQuickLook;
- (id)quickLookMenuItem;
- (id)openImageMenuItem;
- (id)copyImageMenuItem;
- (id)openURLMenuItem;
- (id)copyURLMenuItem;
- (id)menuForEvent:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)updateTrackingAreas;
- (void)dealloc;
- (void)removeBindingDisposables;
- (void)bindToImageMessageWithKeyPath:(id)arg1 onObject:(id)arg2;
- (void)FGOChatHoverImageView_configureLayout;
- (void)FGOChatHoverImageView_configureActions;
- (void)FGOChatHoverImageView_configureBindings;
- (void)FGOChatHoverImageView_configureViews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatHoverImageView;

@end

// Remaining properties

@interface FGOChatLineImageView : BTRImageView
{
}

+ (void)initialize;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatLineImageView;

@end

@class FGOChatListUnreadLabel;

@interface FGOChatListTableCellView : FGOHoveringTableCellView
{
    BOOL _composing;
    FGOCircularImageView *_avatarImageView;
    BTRLabel *_messageLabel;
    FGOChatListUnreadLabel *_unreadLabel;
    BTRImageView *_composingImageView;
    NSButton *_closeButton;
}

+ (double)rowHeight;
+ (id)unreadBackgroundImage;
+ (id)selectedTextShadow;
+ (id)textShadow;
+ (id)subTextColor;
+ (id)nameTextColor;
+ (id)messageSelectedTextColor;
@property(nonatomic) __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) __weak BTRImageView *composingImageView; // @synthesize composingImageView=_composingImageView;
@property(nonatomic) __weak FGOChatListUnreadLabel *unreadLabel; // @synthesize unreadLabel=_unreadLabel;
@property(nonatomic) __weak BTRLabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(nonatomic) __weak FGOCircularImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(nonatomic, getter=isComposing) BOOL composing; // @synthesize composing=_composing;
- (BOOL)isOpaque;
- (void)setHovering:(BOOL)arg1;
- (void)configureWithSelectedState:(BOOL)arg1;
- (void)FGOChatListTableCellView_configureBindings;
- (void)FGOChatListTableCellView_configureInterface;
- (void)awakeFromNib;

@end

@interface FGOChatListTableRowView : FGOHoveringTableRowView
{
    BOOL _evenRow;
}

@property(nonatomic) BOOL evenRow; // @synthesize evenRow=_evenRow;
- (BOOL)isOpaque;
- (id)selectedCellImage;
- (id)evenCellImage;
- (id)oddCellImage;
- (id)currentBackgroundImage;
- (void)drawBackgroundInRect:(struct CGRect)arg1;

@end

@interface FGOChatListUnreadLabel : BTRView
{
    unsigned long long _unreadCount;
    double _labelVerticalInset;
    BTRImageView *_backgroundImageView;
    BTRLabel *_numberLabel;
}

@property(readonly, nonatomic) BTRLabel *numberLabel; // @synthesize numberLabel=_numberLabel;
@property(readonly, nonatomic) BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(nonatomic) double labelVerticalInset; // @synthesize labelVerticalInset=_labelVerticalInset;
@property(nonatomic) unsigned long long unreadCount; // @synthesize unreadCount=_unreadCount;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatListUnreadLabel;

@end

@class FGOMainWindowController;

@interface FGOChatListViewController : FGOViewController <NSPopoverDelegate, NSTableViewDataSource, NSTableViewDelegate, NSUserNotificationCenterDelegate, NSMenuDelegate>
{
    BOOL _didReceiveDoubleClick;
    BOOL _ignoreSelectionChange;
    NSTimer *_doubleClickTimer;
    NSMutableDictionary *_viewControllerMap;
    NSMutableSet *_composingHandleObjectIDs;
    NSMenu *_conversationsMenu;
    NSArray *_conversations;
    FGOLayeredTableView *_tableView;
}

@property(nonatomic) __weak FGOLayeredTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSArray *conversations; // @synthesize conversations=_conversations;
@property(nonatomic) __weak NSMenu *conversationsMenu; // @synthesize conversationsMenu=_conversationsMenu;
- (id)nextConversationViewControllerForController:(id)arg1;
- (void)activateNextConversationViewControllerForController:(id)arg1;
- (void)removeConversationViewController:(id)arg1;
- (void)replaceViewController:(id)arg1 with:(id)arg2;
- (void)replaceSingleViewControllerWithController:(id)arg1;
- (void)addWindowedViewController:(id)arg1;
- (void)addConcurrentViewController:(id)arg1;
- (void)displayConversationViewController:(id)arg1 displayType:(long long)arg2;
- (void)selectHandle:(id)arg1 forComposeViewController:(id)arg2;
- (id)newComposeViewControllerForConversation:(id)arg1;
- (id)newChatViewControllerForConversation:(id)arg1;
- (id)chatViewControllerForConversation:(id)arg1 createIfNeeded:(BOOL)arg2;
- (id)viewControllerForConversation:(id)arg1;
- (id)existingViewControllerForConversation:(id)arg1;
- (void)removeViewControllerFromMap:(id)arg1;
- (void)setViewController:(id)arg1 forConversation:(id)arg2;
- (BOOL)handleIsComposing:(id)arg1;
- (void)setComposing:(BOOL)arg1 forHandle:(id)arg2;
- (void)playReceivedMessageSound;
- (void)postNotificationsForMessages:(id)arg1;
- (void)updateChatViewController:(id)arg1 withMessages:(id)arg2 forHandleName:(id)arg3 sent:(BOOL)arg4;
- (void)updateWithMessage:(id)arg1 forHandleName:(id)arg2;
- (void)addConversationsObjects:(id)arg1;
- (void)removeObjectFromConversationsAtIndex:(unsigned long long)arg1;
- (void)insertObject:(id)arg1 inConversationsAtIndex:(unsigned long long)arg2;
- (void)refreshTotalUnreadDockBadge;
- (void)moveConversationToTop:(id)arg1;
- (void)selectRowForConversationAtIndex:(unsigned long long)arg1;
- (void)selectRowForConversation:(id)arg1;
- (void)activateConversationAtIndex:(unsigned long long)arg1;
- (void)activateConversation:(id)arg1;
- (void)removeConversation:(id)arg1;
- (void)closeConversationAtIndex:(unsigned long long)arg1;
- (void)closeConversation:(id)arg1;
- (void)fetchActiveConversations;
- (unsigned long long)conversationIndexForRosterHandle:(id)arg1;
- (id)conversationForHandle:(id)arg1;
- (void)createAndActivateNewConversation;
- (void)addConversation:(id)arg1 atIndex:(unsigned long long)arg2;
- (id)conversationForHandle:(id)arg1 createIfNeeded:(BOOL)arg2;
- (void)createOrActivateConversationForHandle:(id)arg1;
- (void)mutateConversationsWithBlock:(CDUnknownBlockType)arg1;
- (void)moveUp:(id)arg1;
- (void)moveDown:(id)arg1;
- (id)openNewColumMenuItemForConversation:(id)arg1;
- (id)openNewWindowMenuItemForConversation:(id)arg1;
- (id)removeConversationMenuItem;
- (void)menuNeedsUpdate:(id)arg1;
- (void)performBlockIgnoringSelection:(CDUnknownBlockType)arg1;
- (void)configureCellView:(id)arg1 row:(long long)arg2;
- (void)configureRowView:(id)arg1 row:(long long)arg2;
- (void)openChatForSelectedRow;
- (void)tableViewDoubleClick:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)configureAllAvailableRows;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
@property(readonly, nonatomic) FGOMainWindowController *mainWindowController;
- (void)FGOChatListViewController_configureTableView;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)sendMessageResponse:(id)arg1 toHandleNameURI:(id)arg2 conversation:(id)arg3;
- (void)FGOChatListViewController_registerNotificationObservers;
- (void)FGOChatListViewController_subscribeConnectionSignals;
- (void)commonInitForFGOChatListViewController;

@end

// Remaining properties

@interface FGOChatPlaceholderCellView : FGOChatTableCellView
{
}

- (void)setLineVisible:(BOOL)arg1 animated:(BOOL)arg2;

@end

@interface FGOChatPresenceTableCellView : FGOChatIconTextTableCellView
{
}

+ (id)dateFormatter;
- (void)awakeFromNib;

@end

@interface FGOChatPresenceView : BTRView
{
    NSImage *_statusImage;
    NSString *_handleName;
    FGOIMServicePresence *_presence;
}

@property(retain, nonatomic) FGOIMServicePresence *presence; // @synthesize presence=_presence;
@property(copy, nonatomic) NSString *handleName; // @synthesize handleName=_handleName;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatPresenceView;

@end

@interface FGOProgressIndicator : BTRView
{
    double _total;
    double _progress;
    BTRImageView *_backgroundImageView;
    BTRImageView *_progressImageView;
}

@property(readonly, nonatomic) BTRImageView *progressImageView; // @synthesize progressImageView=_progressImageView;
@property(readonly, nonatomic) BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(nonatomic) double total; // @synthesize total=_total;
- (void)incrementProgressBy:(double)arg1;
@property(readonly, nonatomic) RACSignal *progressFrame;
@property(readonly, nonatomic) RACSignal *backgroundFrame;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOProgressIndiciator;

@end

@interface FGOChatProgressIndicator : FGOProgressIndicator
{
    long long _color;
}

+ (id)progressImage;
+ (id)whiteBackgroundImage;
+ (id)blueBackgroundImage;
@property(nonatomic) long long color; // @synthesize color=_color;
- (id)progressFrame;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatProgressIndicator;

@end

@interface FGOChatRange : NSObject
{
    NSString *_string;
    Class _messageClass;
    struct _NSRange _range;
}

@property(readonly, nonatomic) Class messageClass; // @synthesize messageClass=_messageClass;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, copy, nonatomic) NSString *string; // @synthesize string=_string;
- (long long)compare:(id)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;
- (id)initWithString:(id)arg1 range:(struct _NSRange)arg2 class:(Class)arg3;

@end

@interface FGOChatReceivedMessageCellView : FGOChatBubbleTableCellView
{
}

+ (id)niblessBackgroundImage;
+ (id)backgroundImage;
+ (id)backgroundImageWithNib:(BOOL)arg1;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setHasChatNib:(BOOL)arg1;
- (void)awakeFromNib;

@end

@interface FGOChatRegularExpression : NSObject
{
    NSRegularExpression *_expression;
    Class _messageClass;
}

@property(readonly, nonatomic) Class messageClass; // @synthesize messageClass=_messageClass;
@property(readonly, nonatomic) NSRegularExpression *expression; // @synthesize expression=_expression;
- (id)description;
- (id)initWithPattern:(id)arg1 messageClass:(Class)arg2;

@end

@interface FGOChatSearchDatabase : NSObject
{
    struct __SKIndex *_index;
}

+ (id)sharedInstance;
- (BOOL)saveChanges;
- (id)searchMessagesMatching:(id)arg1;
- (void)removeConversation:(id)arg1;
- (void)removeMessagesForDocumentIDs:(id)arg1;
- (void)removeMessage:(id)arg1;
- (void)addMessage:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FGOChatSentMessageCellView : FGOChatBubbleTableCellView
{
}

+ (id)errorNiblessBackgroundImage;
+ (id)errorBackgroundImage;
+ (id)niblessBackgroundImage;
+ (id)backgroundImage;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)awakeFromNib;

@end

@interface FGOChatTableCellPendingAnimation : NSObject
{
    BOOL _animateLine;
}

+ (id)pendingAnimationAnimatingLine:(BOOL)arg1;
@property(nonatomic) BOOL animateLine; // @synthesize animateLine=_animateLine;

@end

@interface FGOChatTableRowView : FGOLayeredTableRowView
{
}

- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatTableRowView;

@end

@interface FGOLayeredTableView : NSTableView
{
    struct {
        unsigned int pressedReturn:1;
    } _fgoDelegateFlags;
    BOOL _showPlaceholder;
    double _headerInset;
    NSString *_placeholderString;
    double _placeholderOffset;
    BTRLabel *_placeholderLabel;
    NSAttributedString *_placeholderAttributedString;
}

@property(retain, nonatomic) NSAttributedString *placeholderAttributedString; // @synthesize placeholderAttributedString=_placeholderAttributedString;
@property(retain, nonatomic) BTRLabel *placeholderLabel; // @synthesize placeholderLabel=_placeholderLabel;
@property(nonatomic) BOOL showPlaceholder; // @synthesize showPlaceholder=_showPlaceholder;
@property(nonatomic) double placeholderOffset; // @synthesize placeholderOffset=_placeholderOffset;
@property(copy, nonatomic) NSString *placeholderString; // @synthesize placeholderString=_placeholderString;
@property(nonatomic) double headerInset; // @synthesize headerInset=_headerInset;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)setBackgroundColor:(id)arg1;
- (void)resetBackgroundColors;
- (void)viewDidMoveToSuperview;
- (void)drawContextMenuHighlightForRow:(int)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOLayeredTableView;

@end

@interface FGOInfiniteTableView : FGOLayeredTableView
{
    BOOL _registeredNotifications;
    CDUnknownBlockType _infiniteScrollingHandler;
    double _infiniteScrollingInsetRatio;
    long long _infiniteScrollingState;
}

+ (BOOL)isCompatibleWithResponsiveScrolling;
@property(nonatomic) long long infiniteScrollingState; // @synthesize infiniteScrollingState=_infiniteScrollingState;
@property(nonatomic) double infiniteScrollingInsetRatio; // @synthesize infiniteScrollingInsetRatio=_infiniteScrollingInsetRatio;
@property(copy, nonatomic) CDUnknownBlockType infiniteScrollingHandler; // @synthesize infiniteScrollingHandler=_infiniteScrollingHandler;
- (void)triggerInfiniteScrollHandlerIfNeeded;
- (void)scrollWheel:(id)arg1;
- (void)viewDidMoveToSuperview;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOInfiniteTableView;

@end

@interface FGOChatTableView : FGOInfiniteTableView
{
    NSResponder *_activationView;
    BTRImageView *_lineImageView;
}

@property(retain, nonatomic) BTRImageView *lineImageView; // @synthesize lineImageView=_lineImageView;
@property(retain, nonatomic) NSResponder *activationView; // @synthesize activationView=_activationView;
- (void)setLineVisible:(BOOL)arg1 animated:(BOOL)arg2;
- (void)mouseDown:(id)arg1;

@end

@interface FGOTextView : NSTextView <NSTextStorageDelegate>
{
    struct {
        unsigned int textViewInsertedTab:1;
        unsigned int textViewInsertedNewline:1;
        unsigned int textViewPastedImage:1;
    } _fgoDelegateFlags;
    NSString *_placeholderText;
    NSColor *_placeholderColor;
    NSColor *_placeholderFont;
}

@property(retain, nonatomic) NSColor *placeholderFont; // @synthesize placeholderFont=_placeholderFont;
@property(retain, nonatomic) NSColor *placeholderColor; // @synthesize placeholderColor=_placeholderColor;
@property(copy, nonatomic) NSString *placeholderText; // @synthesize placeholderText=_placeholderText;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
@property(readonly, nonatomic) unsigned long long numberOfLines;
- (void)copy:(id)arg1;
- (void)textStorageWillProcessEditing:(id)arg1;
- (id)readablePasteboardTypes;
- (BOOL)readSelectionFromPasteboard:(id)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)insertTab:(id)arg1;
- (void)drawViewBackgroundInRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOTextView;

@end

// Remaining properties

@interface FGOChatTextView : FGOTextView
{
}

- (void)keyDown:(id)arg1;
- (void)dealloc;
- (BOOL)resignFirstResponder;
- (void)windowDidBecomeKey:(id)arg1;
- (BOOL)becomeFirstResponder;
- (BOOL)readSelectionFromPasteboard:(id)arg1;

@end

@interface FGOChatUnreadButton : BTRButton
{
    unsigned long long _unreadCount;
}

+ (id)formattedStringForCount:(unsigned long long)arg1;
+ (id)textAttributes;
+ (struct CGSize)sizeToFit;
+ (id)backgroundImageActive;
+ (id)backgroundImage;
@property(nonatomic) unsigned long long unreadCount; // @synthesize unreadCount=_unreadCount;
- (struct CGRect)labelFrame;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOChatUnreadButton;

@end

@interface FGOChatUserHeaderView : BTRView
{
    BOOL _sent;
    BOOL _showSeparator;
    NSImage *_avatarImage;
    NSString *_fullName;
    NSString *_username;
    NSURL *_remoteURL;
    BTRImageView *_separatorImageView;
    BTRImageView *_circleOverlayImageView;
    BTRImageView *_avatarImageView;
    BTRLabel *_usernameLabel;
    BTRLabel *_fullNameLabel;
    BTRButton *_providerButton;
    NSMutableDictionary *_sentStateImages;
    NSMutableDictionary *_receivedStateImages;
}

+ (double)separatorHeight;
@property(retain, nonatomic) NSMutableDictionary *receivedStateImages; // @synthesize receivedStateImages=_receivedStateImages;
@property(retain, nonatomic) NSMutableDictionary *sentStateImages; // @synthesize sentStateImages=_sentStateImages;
@property(retain, nonatomic) BTRButton *providerButton; // @synthesize providerButton=_providerButton;
@property(retain, nonatomic) BTRLabel *fullNameLabel; // @synthesize fullNameLabel=_fullNameLabel;
@property(retain, nonatomic) BTRLabel *usernameLabel; // @synthesize usernameLabel=_usernameLabel;
@property(retain, nonatomic) BTRImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(retain, nonatomic) BTRImageView *circleOverlayImageView; // @synthesize circleOverlayImageView=_circleOverlayImageView;
@property(retain, nonatomic) BTRImageView *separatorImageView; // @synthesize separatorImageView=_separatorImageView;
@property(nonatomic) BOOL showSeparator; // @synthesize showSeparator=_showSeparator;
@property(nonatomic) BOOL sent; // @synthesize sent=_sent;
@property(retain, nonatomic) NSURL *remoteURL; // @synthesize remoteURL=_remoteURL;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(retain, nonatomic) NSImage *avatarImage; // @synthesize avatarImage=_avatarImage;
- (id)profileTextSpacing;
- (void)FGOChatUserHeaderView_configureLayout;
- (BOOL)isFlipped;
@property(readonly, nonatomic) double intrinsicHeight;
- (void)setProviderIconImage:(id)arg1 forControlState:(unsigned long long)arg2 sent:(BOOL)arg3;
- (void)FGOChatUserHeaderView_configureBindings;
- (void)resetViewAttributes;
- (void)FGOChatUserHeaderView_configureViews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOChatUserHeaderView;

@end

@interface FGOConversationViewController : FGOAuxiliaryViewController
{
    id <FGOChatConversation> _conversation;
    FGOChatListViewController *_chatListViewController;
}

@property(readonly, nonatomic) FGOChatListViewController *chatListViewController; // @synthesize chatListViewController=_chatListViewController;
@property(readonly, nonatomic) id <FGOChatConversation> conversation; // @synthesize conversation=_conversation;
- (void)close:(id)arg1;
- (id)initWithConversation:(id)arg1 chatListViewController:(id)arg2;

@end

@class INDSequentialTextSelectionManager;

@interface FGOMessagesViewController : FGOConversationViewController <FGOMessagesTextFinderClientDelegate, NSTextFinderBarContainer, NSTableViewDataSource, NSTableViewDelegate>
{
    NSMutableDictionary *_pendingAnimations;
    NSMutableIndexSet *_pendingHeightUpdateIndexes;
    BOOL _lineVisible;
    BOOL _findBarVisible;
    BOOL _hasLoadedAllMessages;
    BOOL _shouldShowLine;
    NSView *_findBarView;
    long long _groupingTypeFilter;
    CDUnknownBlockType _filterBlock;
    unsigned long long _fetchBatchSize;
    NSRegularExpression *_emphasisRegularExpression;
    FGOChatTableView *_tableView;
    NSArray *_messages;
    NSTextFinder *_textFinder;
    double _footerPlaceholderHeight;
    INDSequentialTextSelectionManager *_selectionManager;
    FGOMessagesTextFinderClient *_textFinderClient;
    BTRView *_findBarContainerView;
    struct CGRect _oldViewFrame;
}

@property(retain, nonatomic) BTRView *findBarContainerView; // @synthesize findBarContainerView=_findBarContainerView;
@property(retain, nonatomic) FGOMessagesTextFinderClient *textFinderClient; // @synthesize textFinderClient=_textFinderClient;
@property(readonly, nonatomic) INDSequentialTextSelectionManager *selectionManager; // @synthesize selectionManager=_selectionManager;
@property(nonatomic) struct CGRect oldViewFrame; // @synthesize oldViewFrame=_oldViewFrame;
@property(nonatomic) BOOL shouldShowLine; // @synthesize shouldShowLine=_shouldShowLine;
@property(nonatomic) BOOL hasLoadedAllMessages; // @synthesize hasLoadedAllMessages=_hasLoadedAllMessages;
@property(nonatomic) double footerPlaceholderHeight; // @synthesize footerPlaceholderHeight=_footerPlaceholderHeight;
@property(retain, nonatomic) NSTextFinder *textFinder; // @synthesize textFinder=_textFinder;
@property(retain, nonatomic) NSArray *messages; // @synthesize messages=_messages;
@property(nonatomic) __weak FGOChatTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSRegularExpression *emphasisRegularExpression; // @synthesize emphasisRegularExpression=_emphasisRegularExpression;
@property(nonatomic) unsigned long long fetchBatchSize; // @synthesize fetchBatchSize=_fetchBatchSize;
@property(copy, nonatomic) CDUnknownBlockType filterBlock; // @synthesize filterBlock=_filterBlock;
@property(nonatomic) long long groupingTypeFilter; // @synthesize groupingTypeFilter=_groupingTypeFilter;
@property(getter=isFindBarVisible) BOOL findBarVisible; // @synthesize findBarVisible=_findBarVisible;
@property(retain) NSView *findBarView; // @synthesize findBarView=_findBarView;
@property(nonatomic) BOOL lineVisible; // @synthesize lineVisible=_lineVisible;
- (long long)messageIndexForTableViewIndex:(long long)arg1;
- (long long)tableViewIndexForMessageIndex:(long long)arg1;
- (BOOL)rowIsPlaceholderRow:(long long)arg1;
- (unsigned long long)defaultAnimationOptions;
- (void)removeTableRowsAtIndexes:(id)arg1 animated:(BOOL)arg2;
- (void)insertTableRowsAtIndexes:(id)arg1 animated:(BOOL)arg2;
- (void)performTableViewUpdate:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2 animated:(BOOL)arg3;
- (void)setLineVisible:(BOOL)arg1 animated:(BOOL)arg2;
- (id)filterMessages:(id)arg1;
- (void)mutateMessagesWithBlock:(CDUnknownBlockType)arg1;
- (void)fetchAdditionalMessagesWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)fetchInitialMessages;
- (void)removeMessages:(id)arg1 animated:(BOOL)arg2;
- (void)removeMessagesAtIndexes:(id)arg1 animated:(BOOL)arg2;
- (void)insertMessages:(id)arg1 atIndex:(unsigned long long)arg2 animated:(BOOL)arg3;
- (void)insertMessages:(id)arg1 atIndexes:(id)arg2 animated:(BOOL)arg3;
- (void)replaceMessage:(id)arg1 withMessage:(id)arg2;
- (unsigned long long)indexOfMessageByBinarySearch:(id)arg1;
- (void)scrollToMessage:(id)arg1 animated:(BOOL)arg2;
- (void)scrollToRect:(struct CGRect)arg1 animated:(BOOL)arg2;
- (void)scrollToRowAtIndex:(unsigned long long)arg1 animated:(BOOL)arg2;
- (void)scrollToBottomAnimated:(BOOL)arg1;
- (void)recalculateHeightsForVisibleRows;
- (void)invalidateRowHeights;
- (void)viewFrameDidChange:(id)arg1;
- (void)viewControllerDidAttach;
- (id)playAnimationForMessage:(id)arg1;
- (void)removePendingAnimationForMessage:(id)arg1;
- (id)pendingAnimationForMessage:(id)arg1;
- (void)setPendingAnimation:(id)arg1 forMessage:(id)arg2;
- (void)tableView:(id)arg1 didRemoveRowView:(id)arg2 forRow:(long long)arg3;
- (void)tableView:(id)arg1 didAddRowView:(id)arg2 forRow:(long long)arg3;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)bubbleCellViewForRowIndex:(long long)arg1;
- (void)liveUpdateEmphasisRegularExpression;
- (void)configureAllPlaceholderCellViews;
- (void)configurePlaceholderCellView:(id)arg1 row:(long long)arg2;
- (id)placeholderCellViewForRowIndex:(long long)arg1;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)addMessages:(id)arg1 animated:(BOOL)arg2;
- (id)loadTableViewNib;
- (void)willFaultConversation;
- (void)dealloc;
- (void)textSizePreferenceChanged:(long long)arg1;
- (struct CGRect)textFinderScrollViewFrame;
- (struct CGRect)textFinderFindBarFrame;
- (id)textFinderParentView;
- (id)layoutRectsForFindBar;
- (id)contentView;
- (void)findBarViewDidChangeHeight;
- (id)textFinderTextViewForMessageIndex:(unsigned long long)arg1;
- (id)textFinderTextViewForMessage:(id)arg1;
- (id)textFinderClientIndexesOfVisibleMessages:(id)arg1;
- (void)textFinderClient:(id)arg1 scrollToMessageIndex:(unsigned long long)arg2;
- (id)textFinderClient:(id)arg1 textViewForMessageIndex:(unsigned long long)arg2;
- (void)performTextFinderAction:(id)arg1;
- (void)FGOMessagesViewController_registerNotificationObservers;
- (void)configureTextFinder;
- (void)loadView;
- (id)initWithConversation:(id)arg1 groupingTypeFilter:(long long)arg2 filterBlock:(CDUnknownBlockType)arg3 fetchBatchSize:(unsigned long long)arg4;
- (id)initWithConversation:(id)arg1 chatListViewController:(id)arg2;
- (void)commonInitWithFetchBatchSize:(unsigned long long)arg1 groupingTypeFilter:(long long)arg2 filterBlock:(CDUnknownBlockType)arg3;

@end

// Remaining properties

@class FGOGradientView;

@interface FGOChatViewController : FGOMessagesViewController <FGOChatFileTransferManagerDelegate, FGOChatTextViewDelegate, NSTableViewDataSource, NSTableViewDelegate, NSPopoverDelegate, FGOEmojiViewControllerDelegate>
{
    BOOL _handleIsComposing;
    BOOL _lockScrollPositionToBottom;
    BOOL _unreadButtonVisible;
    FGORosterHandleName *_handleName;
    FGOIMServicePresence *_presence;
    FGOChatFileTransferManager *_transferManager;
    RACCompoundDisposable *_conversationDisposables;
    long long _lastComposingState;
    FGOChatUnreadButton *_unreadButton;
    NSDate *_dateSinceLastDateMessage;
    unsigned long long _messageCountSinceLastDateMessage;
    NSPopover *_emojiPopover;
    NSDictionary *_textAttributes;
    FGOChatPresenceView *_presenceView;
    BTRImageView *_fieldBackgroundView;
    FGOChatTextView *_textView;
    BTRView *_footerContainerView;
    BTRButton *_switchButton;
    BTRButton *_emojiButton;
    FGOGradientView *_gradientView;
    struct CGRect _previousVisibleRect;
}

+ (id)buttonAccountIconForHandleName:(id)arg1;
+ (id)menuAccountIconForHandleName:(id)arg1;
+ (id)chatFieldBackgroundImage;
@property(nonatomic) __weak FGOGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(nonatomic) __weak BTRButton *emojiButton; // @synthesize emojiButton=_emojiButton;
@property(nonatomic) __weak BTRButton *switchButton; // @synthesize switchButton=_switchButton;
@property(nonatomic) __weak BTRView *footerContainerView; // @synthesize footerContainerView=_footerContainerView;
@property(nonatomic) FGOChatTextView *textView; // @synthesize textView=_textView;
@property(nonatomic) __weak BTRImageView *fieldBackgroundView; // @synthesize fieldBackgroundView=_fieldBackgroundView;
@property(nonatomic) __weak FGOChatPresenceView *presenceView; // @synthesize presenceView=_presenceView;
@property(retain, nonatomic) NSDictionary *textAttributes; // @synthesize textAttributes=_textAttributes;
@property(retain, nonatomic) NSPopover *emojiPopover; // @synthesize emojiPopover=_emojiPopover;
@property(nonatomic) unsigned long long messageCountSinceLastDateMessage; // @synthesize messageCountSinceLastDateMessage=_messageCountSinceLastDateMessage;
@property(retain, nonatomic) NSDate *dateSinceLastDateMessage; // @synthesize dateSinceLastDateMessage=_dateSinceLastDateMessage;
@property(nonatomic) struct CGRect previousVisibleRect; // @synthesize previousVisibleRect=_previousVisibleRect;
@property(nonatomic) BOOL unreadButtonVisible; // @synthesize unreadButtonVisible=_unreadButtonVisible;
@property(nonatomic) BOOL lockScrollPositionToBottom; // @synthesize lockScrollPositionToBottom=_lockScrollPositionToBottom;
@property(retain, nonatomic) FGOChatUnreadButton *unreadButton; // @synthesize unreadButton=_unreadButton;
@property(nonatomic) long long lastComposingState; // @synthesize lastComposingState=_lastComposingState;
@property(retain, nonatomic) RACCompoundDisposable *conversationDisposables; // @synthesize conversationDisposables=_conversationDisposables;
@property(retain, nonatomic) FGOChatFileTransferManager *transferManager; // @synthesize transferManager=_transferManager;
@property(nonatomic) BOOL handleIsComposing; // @synthesize handleIsComposing=_handleIsComposing;
@property(retain, nonatomic) FGOIMServicePresence *presence; // @synthesize presence=_presence;
@property(retain, nonatomic) FGORosterHandleName *handleName; // @synthesize handleName=_handleName;
- (void)markReadMessages;
- (void)fileTransferManager:(id)arg1 didReceiveOfferForFileTransfer:(id)arg2;
- (id)temporaryFilePathForImage:(id)arg1;
- (id)messageForFileTransferAtURL:(id)arg1 withTransferMethod:(long long)arg2 deleteAfterSending:(BOOL)arg3;
- (void)showFileTransferUnavailableAlertWithDirectConnection:(BOOL)arg1;
- (void)sendMessagesForFileTransferURLs:(id)arg1 deleteAfterSending:(BOOL)arg2;
- (void)resetDateMessageThresholds;
- (void)resetPreferredHandleName;
- (void)fixOrderingForMessages:(id)arg1;
- (void)showMessages:(id)arg1;
- (void)addMessages:(id)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) FGORosterHandle *handle;
- (void)activate;
- (unsigned long long)indexOfComposeMessage;
- (void)viewControllerDidAttach;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (id)animateEntranceForMessage:(id)arg1;
- (void)queueAnimatedMessage:(id)arg1 animateLine:(BOOL)arg2;
- (id)insertDateMessageAndShowFullDate:(BOOL)arg1;
- (id)insertAccountMessageForHandleName:(id)arg1;
- (id)insertPresenceMessageForPreviousPresence:(id)arg1 current:(id)arg2;
- (void)setComposingMessageVisible:(BOOL)arg1;
- (void)showMessageFailureAlertForError:(id)arg1;
- (id)sendMessage:(id)arg1 state:(long long)arg2;
- (id)subscribeToMessageSendSignal:(id)arg1;
- (id)sendMessageFromTextView;
- (void)textViewFindAction:(id)arg1;
- (void)textView:(id)arg1 pastedImage:(id)arg2;
- (void)textViewInsertedNewline:(id)arg1 ignoringFieldEditor:(BOOL)arg2;
- (void)textViewInsertedTab:(id)arg1;
- (void)textViewBecameFirstResponder:(id)arg1;
- (void)fixTextViewLineHeight;
- (void)layoutTextView;
- (void)textDidChange:(id)arg1;
@property(readonly, nonatomic) NSMenu *accountSwitchingMenu;
- (void)emojiViewController:(id)arg1 selectedEmojiWithString:(id)arg2;
- (void)popoverDidClose:(id)arg1;
- (void)openEmojiPanel;
- (struct CGRect)textFinderFindBarFrame;
- (void)updateTextViewFrameAnimated:(BOOL)arg1;
- (void)willFaultConversation;
- (void)reloadTextViewTypingAttributesForOption:(long long)arg1;
- (void)textSizePreferenceChanged:(long long)arg1;
- (void)FGOChatViewController_configureUnreadButton;
- (void)FGOChatViewController_configureKVOSignals;
- (void)FGOChatViewController_configureBindingsNotifications;
- (void)FGOChatViewController_configureTableView;
- (void)FGOChatViewController_configureFooter;
- (void)setInitialDateSinceLastDateMessage;
- (void)setInitialHandleName;
- (void)loadView;
- (id)initWithConversation:(id)arg1 chatListViewController:(id)arg2;

// Remaining properties
@property(readonly, nonatomic) FGOChatConversation *conversation; // @dynamic conversation;
@end

@interface FGOCircularImageView : BTRView
{
    NSImage *_image;
    NSImage *_circleImage;
    FGOStaticImageView *_overlayImageView;
    FGOStaticImageView *_photoImageView;
    NSValue *_imageInsetsValue;
}

+ (id)keyPathsForValuesAffectingImageInsets;
@property(retain, nonatomic) NSValue *imageInsetsValue; // @synthesize imageInsetsValue=_imageInsetsValue;
@property(readonly, nonatomic) FGOStaticImageView *photoImageView; // @synthesize photoImageView=_photoImageView;
@property(readonly, nonatomic) FGOStaticImageView *overlayImageView; // @synthesize overlayImageView=_overlayImageView;
@property(retain, nonatomic) NSImage *circleImage; // @synthesize circleImage=_circleImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(nonatomic) struct NSEdgeInsets imageInsets;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOCircularImageView;

@end

@interface _FGOFileChatMessage : FGOChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveFileTypeValue:(short)arg1;
- (short)primitiveFileTypeValue;
@property short fileTypeValue;
- (void)setPrimitiveFileSizeValue:(long long)arg1;
- (long long)primitiveFileSizeValue;
@property long long fileSizeValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *fileName; // @dynamic fileName;
@property(retain, nonatomic) NSNumber *fileSize; // @dynamic fileSize;
@property(retain, nonatomic) NSNumber *fileType; // @dynamic fileType;
@property(retain, nonatomic) NSString *mimeType; // @dynamic mimeType;
@property(retain, nonatomic) NSString *retinaThumbnailStorageIdentifier; // @dynamic retinaThumbnailStorageIdentifier;
@property(retain, nonatomic) NSString *storageIdentifier; // @dynamic storageIdentifier;
@property(retain, nonatomic) NSString *thumbnailStorageIdentifier; // @dynamic thumbnailStorageIdentifier;
@property(retain, nonatomic) NSString *urlString; // @dynamic urlString;

@end

@interface FGOFileChatMessage : _FGOFileChatMessage <QLPreviewItem>
{
    long long _fileTransferState;
    NSURL *_transferURL;
    RACSignal *_transferSignal;
    id <FGOFileTransferService> _transferService;
    RACCompoundDisposable *_transferDisposable;
    NSImage *_cachedThumbnailImage;
    long long _cachedThumbnailScale;
    NSValue *_cachedThumbnailSizeValue;
}

+ (id)fileDeletionKeypaths;
+ (id)keyPathsForValuesAffectingRetinaThumbnailImage;
+ (id)keyPathsForValuesAffectingCachedThumbnailImage;
+ (id)keyPathsForValuesAffectingURL;
+ (id)keyPathsForValuesAffectingFileURL;
+ (id)keyPathsForValuesAffectingFileData;
+ (id)fileTransferFailedError;
+ (id)insertMessageForFileTransferWithRemoteSignal:(id)arg1 fromHandleName:(id)arg2 inConversation:(id)arg3;
+ (id)insertMessageForFileTransferAtURL:(id)arg1 toHandleName:(id)arg2 withService:(id)arg3 inConversation:(id)arg4;
@property(retain, nonatomic) NSValue *cachedThumbnailSizeValue; // @synthesize cachedThumbnailSizeValue=_cachedThumbnailSizeValue;
@property(nonatomic) long long cachedThumbnailScale; // @synthesize cachedThumbnailScale=_cachedThumbnailScale;
@property(retain, nonatomic) NSImage *cachedThumbnailImage; // @synthesize cachedThumbnailImage=_cachedThumbnailImage;
@property(retain, nonatomic) RACCompoundDisposable *transferDisposable; // @synthesize transferDisposable=_transferDisposable;
@property(retain, nonatomic) id <FGOFileTransferService> transferService; // @synthesize transferService=_transferService;
@property(retain, nonatomic) RACSignal *transferSignal; // @synthesize transferSignal=_transferSignal;
@property(retain, nonatomic) NSURL *transferURL; // @synthesize transferURL=_transferURL;
@property(nonatomic) long long fileTransferState; // @synthesize fileTransferState=_fileTransferState;
@property(readonly) NSString *previewItemTitle;
@property(readonly) NSURL *previewItemURL;
- (id)generateVideoThumbnailImageWithSourceData:(id)arg1;
- (id)generateThumbnailImagesWithSourceImage:(id)arg1;
- (id)setThumbnailImageWithSourceImage:(id)arg1;
- (void)setFileTypeWithFileName:(id)arg1;
- (id)setDataWithLocalFileURL:(id)arg1 deleteAfterCopying:(BOOL)arg2;
- (id)setData:(id)arg1 forFilename:(id)arg2;
@property(readonly, nonatomic) struct CGSize thumbnailSize;
- (id)thumbnailStorageIdentifierForScale:(long long)arg1;
- (void)cacheThumbnailImageForScale:(long long)arg1;
- (id)thumbnailImageForScale:(long long)arg1;
@property(readonly, nonatomic) NSImage *retinaThumbnailImage;
@property(readonly, nonatomic) NSImage *thumbnailImage;
- (void)setThumbnailStorageIdentifier:(id)arg1;
@property(readonly, nonatomic) NSImage *URLHighlightedImage;
@property(readonly, nonatomic) NSImage *URLImage;
- (void)setUrlString:(id)arg1;
@property(retain, nonatomic) NSURL *URL;
@property(readonly, nonatomic) NSURL *fileURL;
@property(readonly, nonatomic) NSData *fileData;
- (Class)viewClass;
- (id)userNotification;
- (void)endDownload;
- (void)setFileTransferStateWithError:(id)arg1;
- (BOOL)beginTransfer;
- (void)beginIncomingTransfer;
- (void)beginOutgoingTransfer;
- (void)dealloc;
- (void)prepareForDeletion;
- (void)cleanupFileTransferState;
- (void)didTurnIntoFault;
- (void)awakeFromInsert;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) id previewItemDisplayState;
@property(readonly) Class superclass;

@end

@interface _FGOCloudAppChatMessage : FGOFileChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveCloudAppTypeValue:(short)arg1;
- (short)primitiveCloudAppTypeValue;
@property short cloudAppTypeValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *cloudAppType; // @dynamic cloudAppType;

@end

@class FGOCloudAppFileTransferService;

@interface FGOCloudAppChatMessage : _FGOCloudAppChatMessage <FGOImageChatMessage, FGOVideoChatMessage, FGOTransferableMessage>
{
    NSImage *_cachedImage;
}

+ (id)humanReadableType;
+ (id)insertMessageForFileTransferAtURL:(id)arg1 toHandleName:(id)arg2 inConversation:(id)arg3;
@property(retain, nonatomic) NSImage *cachedImage; // @synthesize cachedImage=_cachedImage;
- (id)cloudAppFetchSignal;
- (void)beginCloudAppDownload;
- (id)setDataWithLocalFileURL:(id)arg1 deleteAfterCopying:(BOOL)arg2;
- (void)didTurnIntoFault;
- (id)URLHighlightedImage;
- (id)URLImage;
- (void)setCloudAppType:(id)arg1;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSImage *image;
@property(readonly, nonatomic) NSURL *localVideoURL;
@property(readonly) Class superclass;

@end

@interface FGOFileChatMessageID : FGOChatMessageID
{
}

@end

@interface FGOCloudAppChatMessageID : FGOFileChatMessageID
{
}

@end

@class FGOXPCFileTransferCredentials;

@interface FGOXPCFileTransferService : NSObject <FGOFileTransferApplication, FGOFileTransferService>
{
    NSMutableDictionary *_transfers;
    BOOL _authenticated;
    BOOL _resumed;
    FGOXPCFileTransferCredentials *_storedCredentials;
    NSXPCConnection *_connection;
}

+ (id)errorOverrides;
+ (id)name;
+ (id)host;
@property(retain, nonatomic) NSMutableDictionary *transfers; // @synthesize transfers=_transfers;
@property(retain, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic, getter=isResumed) BOOL resumed; // @synthesize resumed=_resumed;
@property(nonatomic, getter=isAuthenticated) BOOL authenticated; // @synthesize authenticated=_authenticated;
@property(retain, nonatomic) FGOXPCFileTransferCredentials *storedCredentials; // @synthesize storedCredentials=_storedCredentials;
- (void)resumeConnectionIfNeeded;
- (id)substitutedErrorForError:(id)arg1;
- (id)transferFileAtURL:(id)arg1;
- (void)fileUpload:(id)arg1 failedWithError:(id)arg2;
- (void)fileUpload:(id)arg1 receivedURL:(id)arg2;
- (void)fileUpload:(id)arg1 receivedProgress:(double)arg2;
- (id)uploadFileAtURL:(id)arg1;
- (id)authenticateWithCredentials:(id)arg1;
- (void)dealloc;
- (id)initWithXPCServiceName:(id)arg1 remoteObjectInterface:(id)arg2;

@end

// Remaining properties

@interface FGOCloudAppFileTransferService : FGOXPCFileTransferService
{
}

+ (id)name;
+ (id)host;
+ (id)errorOverrides;
- (id)init;

@end

@interface FGOCloudAppItem : MTLModel <NSSecureCoding>
{
    NSURL *_cloudAppURL;
    NSURL *_downloadURL;
    NSURL *_iconURL;
    NSString *_filename;
    NSString *_mimeType;
    long long _viewCount;
    long long _itemType;
}

+ (BOOL)supportsSecureCoding;
@property(nonatomic) long long itemType; // @synthesize itemType=_itemType;
@property(nonatomic) long long viewCount; // @synthesize viewCount=_viewCount;
@property(copy, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(copy, nonatomic) NSString *filename; // @synthesize filename=_filename;
@property(retain, nonatomic) NSURL *iconURL; // @synthesize iconURL=_iconURL;
@property(retain, nonatomic) NSURL *downloadURL; // @synthesize downloadURL=_downloadURL;
@property(retain, nonatomic) NSURL *cloudAppURL; // @synthesize cloudAppURL=_cloudAppURL;

@end

@interface FGOColorTestView : NSView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FGOComposeSearchField : BTRTextField
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOComposeSearchField;

@end

@class FGOMenu;

@interface FGOComposeViewController : FGOConversationViewController
{
    NSArray *_handles;
    NSArray *_menuItems;
    FGOMenu *_fgo_menu;
    BTRImageView *_barImageView;
    BTRTextField *_queryField;
    BTRLabel *_titleLabel;
    NSString *_searchQuery;
}

@property(copy, nonatomic) NSString *searchQuery; // @synthesize searchQuery=_searchQuery;
@property(nonatomic) __weak BTRLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(nonatomic) __weak BTRTextField *queryField; // @synthesize queryField=_queryField;
@property(nonatomic) __weak BTRImageView *barImageView; // @synthesize barImageView=_barImageView;
@property(retain, nonatomic) FGOMenu *fgo_menu; // @synthesize fgo_menu=_fgo_menu;
@property(retain, nonatomic) NSArray *menuItems; // @synthesize menuItems=_menuItems;
@property(retain, nonatomic) NSArray *handles; // @synthesize handles=_handles;
- (id)control:(id)arg1 textView:(id)arg2 completions:(id)arg3 forPartialWordRange:(struct _NSRange)arg4 indexOfSelectedItem:(long long *)arg5;
- (BOOL)control:(id)arg1 textView:(id)arg2 doCommandBySelector:(SEL)arg3;
- (void)controlTextDidChange:(id)arg1;
- (void)activate;
- (id)menuImageForPresence:(id)arg1;
- (id)menuItemForHandleName:(id)arg1;
- (id)menuItemsForHandle:(id)arg1;
- (void)showMenuWithItems:(id)arg1;
- (void)FGOComposeViewController_subscribeKVOSignals;
- (void)loadView;

@end

@interface FGOComposingChatContentView : FGOChatContentView
{
    BTRImageView *_bubbleImageView;
}

+ (struct CGSize)contentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (BOOL)showBubbleBackground;
+ (BOOL)accountForBubbleNibWidthDuringLayout;
- (void)setCellHasChatNib:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOComposingChatContentView;

@end

@interface FGOComposingChatMessage : NSObject <FGOPseudoManagedObject, FGOChatMessage>
{
    NSAttributedString *_attributedString;
    NSString *_string;
    NSDate *_date;
    NSNumber *_sent;
    NSNumber *_read;
    FGORosterHandleName *_handleName;
    FGOChatConversation *_conversation;
}

+ (id)composingChatMessageSent:(BOOL)arg1 handleName:(id)arg2 conversation:(id)arg3;
@property(retain, nonatomic) FGOChatConversation *conversation; // @synthesize conversation=_conversation;
@property(retain, nonatomic) FGORosterHandleName *handleName; // @synthesize handleName=_handleName;
@property(nonatomic) NSNumber *read; // @synthesize read=_read;
@property(retain, nonatomic) NSNumber *sent; // @synthesize sent=_sent;
@property(retain, nonatomic) NSDate *date; // @synthesize date=_date;
@property(retain, nonatomic) NSString *string; // @synthesize string=_string;
@property(retain, nonatomic) NSAttributedString *attributedString; // @synthesize attributedString=_attributedString;
- (id)fgo_permanentURI;
@property(readonly, nonatomic) Class cellClass;
@property(readonly, nonatomic) Class displayViewClass;
@property(readonly, nonatomic) Class viewClass;
- (id)textFindingString;
@property(readonly, nonatomic) BOOL automaticallyGenerated;
@property(nonatomic) BOOL sentValue;
@property(nonatomic) BOOL readValue;
- (id)init;

@end

// Remaining properties

@class FGOConnectionButtonAnimationView;

@interface FGOConnectionButton : BTRButton
{
    long long _connectionState;
    FGOConnectionButtonAnimationView *_animationView;
}

@property(readonly, nonatomic) FGOConnectionButtonAnimationView *animationView; // @synthesize animationView=_animationView;
@property(readonly, nonatomic) long long connectionState; // @synthesize connectionState=_connectionState;
- (id)setConnectionState:(long long)arg1 animated:(BOOL)arg2;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOConnectionButton;

@end

@interface FGOConnectionButtonAnimationView : BTRView
{
    CALayer *_imageLayer;
}

+ (id)scaleDownAnimation;
+ (id)scaleUpAnimation;
+ (id)rotationAnimation;
@property(readonly, nonatomic) CALayer *imageLayer; // @synthesize imageLayer=_imageLayer;
- (id)scaleAnimationSignalForImage:(id)arg1;
- (id)swapImageWithImage:(id)arg1 transition:(long long)arg2;
- (void)endRotationAnimation;
- (void)startRotationAnimation;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOConnectionButtonAnimationView;

@end

@interface FGOConnectionStatus : MTLModel
{
    NSString *_username;
    NSString *_serviceName;
    NSImage *_icon;
    long long _statusType;
    NSString *_localizedStatus;
    FGOAccount *_account;
    NSError *_error;
}

+ (id)localizedStatusForType:(long long)arg1;
+ (id)statusWithIMServiceConnectionStatus:(id)arg1;
@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) FGOAccount *account; // @synthesize account=_account;
@property(readonly, copy, nonatomic) NSString *localizedStatus; // @synthesize localizedStatus=_localizedStatus;
@property(readonly, nonatomic) long long statusType; // @synthesize statusType=_statusType;
@property(readonly, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(readonly, copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface FGOConnectionTableCellView : FGOLayeredTableCellView
{
    FGOConnectionButton *_connectionButton;
    CDUnknownBlockType _connectionBlock;
    BTRImageView *_iconImageView;
    BTRLabel *_usernameLabel;
    BTRLabel *_statusLabel;
}

+ (double)rowHeight;
@property(nonatomic) __weak BTRLabel *statusLabel; // @synthesize statusLabel=_statusLabel;
@property(nonatomic) __weak BTRLabel *usernameLabel; // @synthesize usernameLabel=_usernameLabel;
@property(nonatomic) __weak BTRImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(copy, nonatomic) CDUnknownBlockType connectionBlock; // @synthesize connectionBlock=_connectionBlock;
@property(nonatomic) __weak FGOConnectionButton *connectionButton; // @synthesize connectionButton=_connectionButton;
- (id)textFieldPadding;
- (id)usernameStatusSpacing;
- (id)statusEdgeMargin;
- (void)FGOConnectionTableCellView_configureLayout;
- (void)FGOConnectionTableCellView_configureBindings;
- (void)FGOConnectionTableCellView_configureViews;
- (void)awakeFromNib;

@end

@interface FGOSeparatorTableRowView : FGOHoveringTableRowView
{
    BOOL _fgo_drawSeparator;
    double _fgo_separatorInset;
    NSColor *_fgo_separatorColor;
}

@property(nonatomic) BOOL fgo_drawSeparator; // @synthesize fgo_drawSeparator=_fgo_drawSeparator;
@property(retain, nonatomic) NSColor *fgo_separatorColor; // @synthesize fgo_separatorColor=_fgo_separatorColor;
@property(nonatomic) double fgo_separatorInset; // @synthesize fgo_separatorInset=_fgo_separatorInset;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOSeparatorTableRowView;

@end

@interface FGOConnectionTableRowView : FGOSeparatorTableRowView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOConnectionTableRowView;

@end

@interface FGOTableViewController : FGOViewController <NSTableViewDataSource, NSTableViewDelegate>
{
    FGOLayeredTableView *_tableView;
    NSArray *_objects;
}

@property(retain, nonatomic) NSArray *objects; // @synthesize objects=_objects;
@property(nonatomic) __weak FGOLayeredTableView *tableView; // @synthesize tableView=_tableView;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)configureAllAvailableRows;
- (void)configureCellView:(id)arg1 forRow:(long long)arg2;
- (void)configureRowView:(id)arg1 forRow:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (Class)cellViewClassForRow:(long long)arg1;
- (Class)rowViewClassForRow:(long long)arg1;
- (unsigned long long)animationOptions;
- (void)mutateObjects:(CDUnknownBlockType)arg1 sort:(BOOL)arg2;
- (id)sortDescriptors;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGOTableViewController;

@end

// Remaining properties

@interface FGOConnectionsViewController : FGOTableViewController
{
    NSDictionary *_connectionStatuses;
    BTRImageView *_backgroundImageView;
}

+ (id)keyPathsForValuesAffectingIntrinsicContentHeight;
@property(nonatomic) __weak BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(retain, nonatomic) NSDictionary *connectionStatuses; // @synthesize connectionStatuses=_connectionStatuses;
@property(readonly, nonatomic) double intrinsicContentHeight;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)configureRowView:(id)arg1 forRow:(long long)arg2;
- (void)configureCellView:(id)arg1 forRow:(long long)arg2;
- (unsigned long long)animationOptions;
- (Class)cellViewClassForRow:(long long)arg1;
- (Class)rowViewClassForRow:(long long)arg1;
- (unsigned long long)indexOfStatusForAccount:(id)arg1;
- (void)reloadCellForAccount:(id)arg1;
- (void)removeStatusForAccount:(id)arg1;
- (void)addStatus:(id)arg1;
- (void)addPlaceholderStatusForAccount:(id)arg1;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGOConnectionsViewController;

@end

@interface _FGODateChatMessage : FGOChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveShowFullDateValue:(BOOL)arg1;
- (BOOL)primitiveShowFullDateValue;
@property BOOL showFullDateValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *showFullDate; // @dynamic showFullDate;

@end

@interface FGODateChatMessage : _FGODateChatMessage
{
}

+ (id)insertDateMessageShowingFullDate:(BOOL)arg1 handleName:(id)arg2 inConversation:(id)arg3;
- (BOOL)automaticallyGenerated;
- (Class)cellClass;

@end

@interface FGODateChatMessageID : FGOChatMessageID
{
}

@end

@interface _FGODatedChatConversation : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)messagesSet;
- (void)setPrimitiveHasContentsValue:(BOOL)arg1;
- (BOOL)primitiveHasContentsValue;
@property BOOL hasContentsValue;
- (id)objectID;
- (void)removeMessagesObject:(id)arg1;
- (void)addMessagesObject:(id)arg1;
- (void)removeMessages:(id)arg1;
- (void)addMessages:(id)arg1;

// Remaining properties
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(retain, nonatomic) FGORosterHandle *handle; // @dynamic handle;
@property(retain, nonatomic) NSNumber *hasContents; // @dynamic hasContents;
@property(retain, nonatomic) NSOrderedSet *messages; // @dynamic messages;

@end

@interface FGODatedChatConversation : _FGODatedChatConversation <FGOChatConversation>
{
}

+ (id)inverseMessagesRelationshipKeypath;
+ (id)datedConversationForDate:(id)arg1 handle:(id)arg2 inManagedObjectContext:(id)arg3;
- (void)prepareForDeletion;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(retain, nonatomic) FGORosterHandle *handle;
@property(readonly, nonatomic) FGOChatMessage *lastMessage;
@property(readonly, nonatomic) FGOChatMessage *lastRealMessage;
@property(retain, nonatomic) NSOrderedSet *messages;
@property(readonly, nonatomic) FGOChatMessage *preferredLastMessage;
@property(readonly) Class superclass;

@end

@interface FGODatedChatConversationID : NSManagedObjectID
{
}

@end

@interface FGODirectConnectionFileTransferService : NSObject <FGOFileTransferService>
{
    FGOAccount *_account;
    FGOIMServiceHandle *_IMHandle;
}

+ (id)name;
+ (id)host;
@property(readonly, nonatomic) FGOIMServiceHandle *IMHandle; // @synthesize IMHandle=_IMHandle;
@property(readonly, nonatomic) FGOAccount *account; // @synthesize account=_account;
- (BOOL)isAuthenticated;
- (id)transferFileAtURL:(id)arg1;
- (id)initWithAccount:(id)arg1 IMHandle:(id)arg2;

@end

// Remaining properties

@interface _FGODropboxChatMessage : FGOFileChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

@end

@interface FGODropboxChatMessage : _FGODropboxChatMessage <FGOImageChatMessage>
{
}

+ (id)humanReadableType;
- (void)didTurnIntoFault;
- (void)beginDropboxDownload;
- (id)dropboxDirectURLForURL:(id)arg1;
- (id)URLHighlightedImage;
- (id)URLImage;
- (void)setTypeWithURL:(id)arg1;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;

// Remaining properties
@property(retain, nonatomic) NSImage *cachedImage;
@property(readonly, nonatomic) NSImage *image;

@end

@interface FGODropboxChatMessageID : FGOFileChatMessageID
{
}

@end

@interface _FGODroplrChatMessage : FGOFileChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveDroplrTypeValue:(short)arg1;
- (short)primitiveDroplrTypeValue;
@property short droplrTypeValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *droplrType; // @dynamic droplrType;

@end

@interface FGODroplrChatMessage : _FGODroplrChatMessage <FGOImageChatMessage, FGOTransferableMessage, FGOVideoChatMessage>
{
    NSImage *_cachedImage;
}

+ (id)droplrDirectURLForURL:(id)arg1;
+ (id)contentDispositionFilenameFromResponse:(id)arg1;
+ (id)humanReadableType;
+ (id)insertMessageForFileTransferAtURL:(id)arg1 toHandleName:(id)arg2 inConversation:(id)arg3;
@property(retain, nonatomic) NSImage *cachedImage; // @synthesize cachedImage=_cachedImage;
- (void)setTypeWithURL:(id)arg1;
- (void)beginDroplrDownload;
- (id)setDataWithLocalFileURL:(id)arg1 deleteAfterCopying:(BOOL)arg2;
- (void)didTurnIntoFault;
- (id)URLHighlightedImage;
- (id)URLImage;
- (void)setDroplrType:(id)arg1;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSImage *image;
@property(readonly, nonatomic) NSURL *localVideoURL;
@property(readonly) Class superclass;

@end

@interface FGODroplrChatMessageID : FGOFileChatMessageID
{
}

@end

@interface FGODroplrFileTransferService : FGOXPCFileTransferService <FGOFileTransferService>
{
}

+ (id)name;
+ (id)host;
- (id)init;

@end

// Remaining properties

@interface FGOEmojiCategory : MTLModel
{
    NSArray *_characters;
    NSString *_name;
}

+ (id)recentsCategory;
+ (id)categoryWithName:(id)arg1 stringArray:(id)arg2;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(retain, nonatomic) NSArray *characters; // @synthesize characters=_characters;

@end

@interface FGOEmojiCharacter : MTLModel
{
    NSString *_string;
}

+ (id)characterWithString:(id)arg1;
@property(readonly, copy, nonatomic) NSString *string; // @synthesize string=_string;

@end

@interface FGOEmojiCollection : NSObject
{
}

+ (id)symbolsCategory;
+ (id)placesCategory;
+ (id)objectsCategory;
+ (id)natureCategory;
+ (id)peopleCategory;
+ (id)recentsCategory;
+ (void)initialize;

@end

@interface FGOEmojiCollectionView : NSCollectionView
{
}

- (id)newItemForRepresentedObject:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOEmojiCollectionView;

@end

@interface FGOEmojiPrototypeView : NSView
{
    BOOL _selected;
}

@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOEmojiPrototypeView;

@end

@interface FGOEmojiPrototypeViewController : NSCollectionViewItem
{
    FGOEmojiPrototypeView *_backgroundView;
}

+ (id)prototype;
@property(nonatomic) __weak FGOEmojiPrototypeView *backgroundView; // @synthesize backgroundView=_backgroundView;
- (void)loadView;

@end

@interface FGOEmojiViewController : FGOViewController <NSCollectionViewDelegate>
{
    struct {
        unsigned int selectedEmoji:1;
    } _delegateFlags;
    id <FGOEmojiViewControllerDelegate> _delegate;
    NSArray *_buttons;
    long long _selectedTag;
    BTRButton *_recentButton;
    BTRButton *_peopleButton;
    BTRButton *_natureButton;
    BTRButton *_objectsButton;
    BTRButton *_placesButton;
    BTRButton *_symbolsButton;
    BTRImageView *_verticalSeparatorImageView;
    BTRImageView *_horizontalSeparatorImageView;
    FGOEmojiCollectionView *_collectionView;
}

@property(nonatomic) __weak FGOEmojiCollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(nonatomic) __weak BTRImageView *horizontalSeparatorImageView; // @synthesize horizontalSeparatorImageView=_horizontalSeparatorImageView;
@property(nonatomic) __weak BTRImageView *verticalSeparatorImageView; // @synthesize verticalSeparatorImageView=_verticalSeparatorImageView;
@property(nonatomic) __weak BTRButton *symbolsButton; // @synthesize symbolsButton=_symbolsButton;
@property(nonatomic) __weak BTRButton *placesButton; // @synthesize placesButton=_placesButton;
@property(nonatomic) __weak BTRButton *objectsButton; // @synthesize objectsButton=_objectsButton;
@property(nonatomic) __weak BTRButton *natureButton; // @synthesize natureButton=_natureButton;
@property(nonatomic) __weak BTRButton *peopleButton; // @synthesize peopleButton=_peopleButton;
@property(nonatomic) __weak BTRButton *recentButton; // @synthesize recentButton=_recentButton;
@property(nonatomic) long long selectedTag; // @synthesize selectedTag=_selectedTag;
@property(readonly, nonatomic) NSArray *buttons; // @synthesize buttons=_buttons;
@property(nonatomic) id <FGOEmojiViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)FGOEmojiViewController_configureCollectionView;
- (void)FGOEmojiViewController_configureFooter;
- (void)loadView;

@end

// Remaining properties

@interface _FGOEndpointChatMessage : FGOChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

@end

@interface FGOEndpointChatMessage : _FGOEndpointChatMessage
{
}

+ (id)insertInConversation:(id)arg1 handleName:(id)arg2;
- (BOOL)automaticallyGenerated;
- (Class)cellClass;

@end

@interface FGOEndpointChatMessageID : FGOChatMessageID
{
}

@end

@interface FGOErrorChatContentView : FGOChatContentView <FGOChatContentViewTextFinding>
{
    FGOChatAttributedTextView *_textView;
    BTRButton *_retryButton;
    BTRButton *_cancelButton;
}

+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (struct NSEdgeInsets)contentInset;
@property(readonly, nonatomic) BTRButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(readonly, nonatomic) BTRButton *retryButton; // @synthesize retryButton=_retryButton;
@property(readonly, nonatomic) FGOChatAttributedTextView *textView; // @synthesize textView=_textView;
- (id)textFindingTextView;
- (void)FGOErrorChatContentView_configureLayout;
- (void)FGOErrorChatContentView_configureBindings;
- (void)FGOErrorChatContentView_configureViews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOErrorChatContentView;

@end

// Remaining properties

@interface FGOErrorReporter : NSObject
{
}

+ (id)reporter;
+ (void)load;
- (void)report:(id)arg1;
@property(readonly, nonatomic) NSString *latestLogContents;

@end

@interface FGOVideoChatOption : MTLModel
{
    NSString *_title;
}

+ (id)icon;
+ (id)humanReadableName;
+ (id)menuItemForOption:(id)arg1 isSubmenuItem:(BOOL)arg2;
+ (id)parentMenuItemForServiceClass:(Class)arg1 submenu:(id)arg2;
+ (id)faceTimeMenuItemForEmails:(id)arg1 phones:(id)arg2;
+ (id)optionMenuItemsForHandle:(id)arg1;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
- (void)startVideoChat;
- (id)initWithTitle:(id)arg1;

@end

@interface FGOFaceTimeVideoChatOption : FGOVideoChatOption
{
    NSString *_target;
}

+ (id)icon;
+ (id)humanReadableName;
@property(readonly, copy, nonatomic) NSString *target; // @synthesize target=_target;
- (void)startVideoChat;
- (id)initWithTitle:(id)arg1 target:(id)arg2 isPhone:(BOOL)arg3;

@end

@class FGOIMServiceAttributes;

@interface FGOOAuth2Provider : NSObject
{
    NSString *_state;
    NSString *_clientID;
    NSString *_clientSecret;
    NSString *_scope;
}

+ (Class)authenticationWindowClass;
+ (BOOL)parsesHTMLTitle;
+ (id)serviceName;
+ (id)redirectURI;
+ (id)baseURL;
+ (id)reachabilityHost;
+ (id)fgo_facebookProvider;
+ (id)fgo_googleProviderWithLoginHint:(id)arg1;
@property(readonly, copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(readonly, copy, nonatomic) NSString *scope; // @synthesize scope=_scope;
@property(readonly, copy, nonatomic) NSString *clientSecret; // @synthesize clientSecret=_clientSecret;
@property(readonly, copy, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
- (id)extraneousOAuthURLParameters;
- (id)authorizationCodeByParsingRedirect:(id)arg1 state:(id *)arg2 error:(id *)arg3;
- (id)requestKeyForRefreshToken:(id)arg1;
- (id)requestKeyForAuthorizationCode:(id)arg1;
@property(readonly, nonatomic) NSURL *targetURL;
- (id)initWithClientID:(id)arg1 clientSecret:(id)arg2 scope:(id)arg3;
@property(readonly, nonatomic) FGOIMServiceAttributes *fgo_IMServiceAttributes;

@end

@interface FGOFacebookOAuth2Provider : FGOOAuth2Provider
{
}

+ (id)reachabilityHost;
+ (id)serviceName;
+ (BOOL)parsesHTMLTitle;
+ (id)redirectURI;
+ (id)baseURL;
- (id)authorizationCodeByParsingRedirect:(id)arg1 state:(id *)arg2 error:(id *)arg3;
- (id)requestKeyForRefreshToken:(id)arg1;
- (id)requestKeyForAuthorizationCode:(id)arg1;
- (id)extraneousOAuthURLParameters;
- (id)initWithClientID:(id)arg1 clientSecret:(id)arg2 scope:(id)arg3;

@end

@interface FGOQuickLookChatContentView : FGOChatContentView <QLPreviewPanelDataSource, QLPreviewPanelDelegate>
{
}

- (id)previewPanel:(id)arg1 previewItemAtIndex:(long long)arg2;
- (long long)numberOfPreviewItemsInPreviewPanel:(id)arg1;
- (struct CGRect)previewPanel:(id)arg1 sourceFrameOnScreenForPreviewItem:(id)arg2;
- (BOOL)becomeFirstResponder;
- (BOOL)acceptsFirstResponder;
- (void)endPreviewPanelControl:(id)arg1;
- (void)beginPreviewPanelControl:(id)arg1;
- (BOOL)acceptsPreviewPanelControl:(id)arg1;
- (struct CGRect)quickLookSourceFrame;
- (void)toggleQuickLook:(id)arg1;

@end

// Remaining properties

@class FGOFileLabel;

@interface FGOFileChatContentView : FGOQuickLookChatContentView
{
    BTRButton *_quicklookButton;
    BTRButton *_downloadButton;
    FGOFileLabel *_fileNameLabel;
}

+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (struct NSEdgeInsets)contentInset;
@property(readonly, nonatomic) FGOFileLabel *fileNameLabel; // @synthesize fileNameLabel=_fileNameLabel;
@property(readonly, nonatomic) BTRButton *downloadButton; // @synthesize downloadButton=_downloadButton;
@property(readonly, nonatomic) BTRButton *quicklookButton; // @synthesize quicklookButton=_quicklookButton;
- (id)saveFileMenuItem;
- (id)openFileMenuItem;
- (id)copyURLMenuItem;
- (id)menuForEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGRect)quickLookSourceFrame;
- (void)FGOFileChatContentView_configureLayout;
- (void)saveFile;
- (void)openFile;
- (void)FGOFileChatContentView_configureActions;
- (void)FGOFileChatContentView_configureBindings;
- (void)FGOFileChatContentView_configureViews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOFileChatContentView;

@end

@interface FGOFileLabel : BTRLabel
{
}

- (BOOL)acceptsFirstResponder;
- (id)hitTest:(struct CGPoint)arg1;

@end

@interface FGOFileTransferPrefAuthWindowController : FGOWindowController
{
    struct {
        unsigned int didAuthenticate:1;
        unsigned int didCancel:1;
    } _delegateFlags;
    id <FGOFileTransferPrefAuthWindowControllerDelegate> _delegate;
    long long _option;
    FGOXPCFileTransferService *_service;
    NSTextField *_titleLabel;
    NSTextField *_emailField;
    NSSecureTextField *_passwordField;
    NSProgressIndicator *_progressIndicator;
    NSButton *_loginButton;
}

@property(nonatomic) __weak NSButton *loginButton; // @synthesize loginButton=_loginButton;
@property(nonatomic) __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(nonatomic) __weak NSSecureTextField *passwordField; // @synthesize passwordField=_passwordField;
@property(nonatomic) __weak NSTextField *emailField; // @synthesize emailField=_emailField;
@property(nonatomic) __weak NSTextField *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(readonly, nonatomic) FGOXPCFileTransferService *service; // @synthesize service=_service;
@property(readonly, nonatomic) long long option; // @synthesize option=_option;
@property(nonatomic) id <FGOFileTransferPrefAuthWindowControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)login:(id)arg1;
- (void)cancel:(id)arg1;
- (void)awakeFromNib;
- (id)initWithFileTransferOption:(long long)arg1;

@end

@class FGOFileTransferPrefButtonBackgroundView;

@interface FGOFileTransferPrefButton : BTRButton
{
    int _corners;
    FGOFileTransferPrefButtonBackgroundView *_backgroundView;
    BTRImageView *_accessoryImageView;
}

+ (Class)controlContentClass;
@property(readonly, nonatomic) BTRImageView *accessoryImageView; // @synthesize accessoryImageView=_accessoryImageView;
@property(nonatomic) int corners; // @synthesize corners=_corners;
@property(readonly, nonatomic) FGOFileTransferPrefButtonBackgroundView *backgroundView; // @synthesize backgroundView=_backgroundView;
- (void)layout;
- (struct CGRect)accessoryFrame;
- (struct CGRect)labelFrame;
- (struct CGRect)imageFrame;
- (void)handleStateChange;
@property(readonly, nonatomic) NSImage *currentAccessoryImage;
- (void)setAccessoryImage:(id)arg1 forControlState:(unsigned long long)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOFileTransferPrefButton;

@end

@interface FGOFileTransferPrefButtonBackgroundView : BTRView
{
    BOOL _selected;
    BOOL _highlighted;
    int _corners;
}

@property(nonatomic) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) BOOL selected; // @synthesize selected=_selected;
@property(nonatomic) int corners; // @synthesize corners=_corners;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOFileTransferPrefButtonBackgroundView;

@end

@interface FGOFileTransferPrefButtonControlContent : BTRControlContent
{
    NSImage *_accessoryImage;
}

@property(retain, nonatomic) NSImage *accessoryImage; // @synthesize accessoryImage=_accessoryImage;

@end

@interface FGOFileTransferPrefCheckboxButton : FGOFileTransferPrefButton
{
}

- (void)mouseUp:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOFileTransferPrefCheckboxButton;

@end

@interface FGOFileTransferPrefEditWindowController : FGOWindowController
{
    long long _option;
    CDUnknownBlockType _responseBlock;
    NSString *_name;
    NSString *_username;
    NSTextField *_nameLabel;
    NSTextField *_infoLabel;
}

@property(nonatomic) __weak NSTextField *infoLabel; // @synthesize infoLabel=_infoLabel;
@property(nonatomic) __weak NSTextField *nameLabel; // @synthesize nameLabel=_nameLabel;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(copy, nonatomic) CDUnknownBlockType responseBlock; // @synthesize responseBlock=_responseBlock;
@property(readonly, nonatomic) long long option; // @synthesize option=_option;
- (void)response:(id)arg1;
- (void)awakeFromNib;
- (id)initWithFileTransferOption:(long long)arg1;

@end

@interface FGOFileTransferPrefRadioButton : FGOFileTransferPrefButton
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOFileTransferPrefRadioButton;

@end

@interface FGOFileTransferPrefRadioMatrix : BTRControl
{
    NSArray *_buttons;
    FGOFileTransferPrefRadioButton *_selectedButton;
}

+ (id)keyPathsForValuesAffectingSelectedIndex;
@property(retain, nonatomic) FGOFileTransferPrefRadioButton *selectedButton; // @synthesize selectedButton=_selectedButton;
@property(retain, nonatomic) NSArray *buttons; // @synthesize buttons=_buttons;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
@property(readonly, nonatomic) unsigned long long selectedIndex;
- (void)selectItemAtIndex:(unsigned long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOFileTransferPrefRadioMatrix;

@end

@interface FGOFileTransferPrefViewController : FGOViewController <FGOFileTransferPrefAuthWindowControllerDelegate, MASPreferencesViewController>
{
    long long _currentOption;
    FGOFileTransferPrefAuthWindowController *_authWindowController;
    FGOFileTransferPrefEditWindowController *_editWindowController;
    FGOFileTransferPrefCheckboxButton *_directConnectionButton;
    FGOFileTransferPrefRadioMatrix *_radioMatrix;
    BTRLabel *_directConnectionLabel;
    BTRLabel *_alternateLabel;
}

+ (long long)optionForRadioMatrixIndex:(unsigned long long)arg1;
+ (unsigned long long)radioMatrixIndexForOption:(long long)arg1;
@property(nonatomic) __weak BTRLabel *alternateLabel; // @synthesize alternateLabel=_alternateLabel;
@property(nonatomic) __weak BTRLabel *directConnectionLabel; // @synthesize directConnectionLabel=_directConnectionLabel;
@property(nonatomic) __weak FGOFileTransferPrefRadioMatrix *radioMatrix; // @synthesize radioMatrix=_radioMatrix;
@property(nonatomic) __weak FGOFileTransferPrefCheckboxButton *directConnectionButton; // @synthesize directConnectionButton=_directConnectionButton;
@property(retain, nonatomic) FGOFileTransferPrefEditWindowController *editWindowController; // @synthesize editWindowController=_editWindowController;
@property(retain, nonatomic) FGOFileTransferPrefAuthWindowController *authWindowController; // @synthesize authWindowController=_authWindowController;
@property(nonatomic) long long currentOption; // @synthesize currentOption=_currentOption;
@property(readonly, nonatomic) NSString *toolbarItemLabel;
@property(readonly, nonatomic) NSImage *toolbarItemImage;
@property(readonly, nonatomic) NSString *identifier;
- (void)fileTransferPrefAuthWindowControllerDidCancel:(id)arg1;
- (void)fileTransferPrefAuthWindowControllerDidAuthenticate:(id)arg1;
- (void)openEditSheetForOption:(long long)arg1;
- (void)openAuthenticationSheetForOption:(long long)arg1;
- (void)removeCredentialsForOption:(long long)arg1;
- (void)FGOFileTransferPrefViewController_configureActions;
- (void)FGOFileTransferPrefViewController_configureBindings;
- (void)FGOFileTransferPrefViewController_configureViews;
- (void)loadView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) BOOL hasResizableHeight;
@property(readonly, nonatomic) BOOL hasResizableWidth;
@property(readonly) Class superclass;

@end

@interface FGOFileTransferProgress : NSObject
{
    NSURL *_sourceURL;
    NSURL *_destinationURL;
    double _progress;
    RACSubject *_subject;
}

+ (id)progressWithSourceURL:(id)arg1;
@property(retain, nonatomic) RACSubject *subject; // @synthesize subject=_subject;
@property(nonatomic) double progress; // @synthesize progress=_progress;
@property(retain, nonatomic) NSURL *destinationURL; // @synthesize destinationURL=_destinationURL;
@property(retain, nonatomic) NSURL *sourceURL; // @synthesize sourceURL=_sourceURL;
- (void)failWithError:(id)arg1;
- (id)init;

@end

@interface FGOPreferencesViewController : FGOTableViewController
{
    NSMutableArray *_preferences;
    RACDisposable *_rebuildDisposable;
}

@property(retain, nonatomic) RACDisposable *rebuildDisposable; // @synthesize rebuildDisposable=_rebuildDisposable;
@property(readonly, nonatomic) NSMutableArray *preferences; // @synthesize preferences=_preferences;
- (void)configureRowView:(id)arg1 forRow:(long long)arg2;
- (Class)cellViewClassForRow:(long long)arg1;
- (Class)rowViewClassForRow:(long long)arg1;
- (unsigned long long)animationOptions;
- (void)dealloc;
- (void)rebuildFlattenedPreferences;
- (void)addPreference:(id)arg1;
- (id)init;

@end

@interface FGOGeneralPrefViewController : FGOPreferencesViewController <MASPreferencesViewController>
{
}

@property(readonly, nonatomic) NSString *toolbarItemLabel;
@property(readonly, nonatomic) NSImage *toolbarItemImage;
@property(readonly, nonatomic) NSString *identifier;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) BOOL hasResizableHeight;
@property(readonly, nonatomic) BOOL hasResizableWidth;
@property(readonly) Class superclass;

@end

@interface FGOGenericAvatarImageGenerator : NSObject
{
}

+ (id)colorForInitials:(id)arg1;
+ (id)initialsForFirstName:(id)arg1 lastName:(id)arg2;
+ (id)avatarImageForFirstName:(id)arg1 lastName:(id)arg2;
+ (id)asynchronouslyGenerateAvatarImageForFirstName:(id)arg1 lastName:(id)arg2;
+ (void)initialize;

@end

@interface FGOGoogleOAuth2Provider : FGOOAuth2Provider
{
    NSString *_loginHint;
}

+ (id)reachabilityHost;
+ (id)serviceName;
+ (BOOL)parsesHTMLTitle;
+ (id)redirectURI;
+ (id)baseURL;
@property(readonly, copy, nonatomic) NSString *loginHint; // @synthesize loginHint=_loginHint;
- (id)requestKeyWithParameters:(id)arg1;
- (id)authorizationCodeByParsingRedirect:(id)arg1 state:(id *)arg2 error:(id *)arg3;
- (id)requestKeyForRefreshToken:(id)arg1;
- (id)requestKeyForAuthorizationCode:(id)arg1;
- (id)extraneousOAuthURLParameters;
- (id)initWithClientID:(id)arg1 clientSecret:(id)arg2 scope:(id)arg3 loginHint:(id)arg4;

@end

@interface FGOGradientView : BTRView
{
    NSGradient *_gradient;
    double _cornerRadius;
    NSArray *_colors;
    NSArray *_locations;
    double _angle;
}

@property(nonatomic) double angle; // @synthesize angle=_angle;
@property(retain, nonatomic) NSArray *locations; // @synthesize locations=_locations;
@property(retain, nonatomic) NSArray *colors; // @synthesize colors=_colors;
- (void)recacheGradient;
- (void)setCornerRadius:(double)arg1;
- (double)cornerRadius;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FGOGuardedManagedObjectContext : NSManagedObjectContext
{
}

- (void)reset;
- (void)refreshObject:(id)arg1 mergeChanges:(BOOL)arg2;
- (void)deleteObject:(id)arg1;
- (BOOL)save:(id *)arg1;

@end

@interface FGOHelveticaButton : BTRButton
{
}

- (struct CGRect)labelFrame;

@end

@class FGOHistoryHighlightedMessage;

@interface FGOHistoryConversation : MTLModel
{
    FGODatedChatConversation *_conversation;
    NSAttributedString *_messagePreview;
    NSString *_searchQuery;
    NSArray *_matchingMessages;
    NSRegularExpression *_regularExpression;
    FGOHistoryHighlightedMessage *_highlightedMessage;
}

+ (id)commonTextAttributes;
+ (id)boldTextAttributes;
+ (id)regularTextAttributes;
+ (id)regularExpressionForSearchQuery:(id)arg1;
+ (void)truncateHeadOfString:(id)arg1 toWordCount:(unsigned long long)arg2 initialMatchLocation:(unsigned long long)arg3;
+ (struct _NSRange)highlightKeywordsInString:(id)arg1 withRegex:(id)arg2;
+ (id)previewForMessages:(id)arg1 selectedMessage:(id *)arg2;
+ (id)historyConversationWithDatedConversation:(id)arg1 searchQuery:(id)arg2 regularExpression:(id)arg3 matchingMessages:(id)arg4;
+ (id)historyConversationWithDatedConversation:(id)arg1;
@property(readonly, nonatomic) FGOHistoryHighlightedMessage *highlightedMessage; // @synthesize highlightedMessage=_highlightedMessage;
@property(readonly, nonatomic) NSRegularExpression *regularExpression; // @synthesize regularExpression=_regularExpression;
@property(readonly, nonatomic) NSArray *matchingMessages; // @synthesize matchingMessages=_matchingMessages;
@property(readonly, copy, nonatomic) NSString *searchQuery; // @synthesize searchQuery=_searchQuery;
@property(retain, nonatomic) NSAttributedString *messagePreview; // @synthesize messagePreview=_messagePreview;
@property(readonly, nonatomic) FGODatedChatConversation *conversation; // @synthesize conversation=_conversation;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)bindMessagePreviewToConversation;

@end

@interface FGOHistoryConversationTableCellView : FGOLayeredTableCellView
{
    BTRLabel *_subtitleField;
}

+ (double)rowHeight;
+ (id)conversationDateFormatter;
@property(nonatomic) __weak BTRLabel *subtitleField; // @synthesize subtitleField=_subtitleField;
- (void)awakeFromNib;

@end

@interface FGOHistoryConversationTableRowView : FGOSeparatorTableRowView
{
}

+ (id)selectedCellImage;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOHistoryConversationTableRowView;

@end

@class FGOHistoryPopUpButton;

@interface FGOHistoryConversationsViewController : FGOTableViewController <NSMenuDelegate>
{
    id <FGOHistoryConversationsViewControllerDelegate> _delegate;
    FGOHistoryHandle *_handle;
    long long _filterType;
    NSArray *_unfilteredObjects;
    FGOHistoryPopUpButton *_filterPopUpButton;
}

@property(nonatomic) __weak FGOHistoryPopUpButton *filterPopUpButton; // @synthesize filterPopUpButton=_filterPopUpButton;
@property(retain, nonatomic) NSArray *unfilteredObjects; // @synthesize unfilteredObjects=_unfilteredObjects;
@property(nonatomic) long long filterType; // @synthesize filterType=_filterType;
@property(retain, nonatomic) FGOHistoryHandle *handle; // @synthesize handle=_handle;
@property(nonatomic) id <FGOHistoryConversationsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)sortDescriptors;
- (id)deleteConversationMenuItemForConversation:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)configureRowView:(id)arg1 forRow:(long long)arg2;
- (unsigned long long)animationOptions;
- (Class)cellViewClassForRow:(long long)arg1;
- (Class)rowViewClassForRow:(long long)arg1;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)FGOHistoryConversationsViewController_registerNotificationObservers;
- (void)FGOHistoryConversationsViewController_subscribeKVOSignals;
- (void)commonInitForFGOHistoryConversationsViewController;

@end

// Remaining properties

@interface FGOHistoryHandle : MTLModel
{
    FGORosterHandle *_handle;
    NSString *_searchQuery;
    unsigned long long _numberOfConversations;
    NSArray *_searchConversations;
}

+ (id)historyHandleWithRosterHandle:(id)arg1 searchQuery:(id)arg2 conversations:(id)arg3;
+ (unsigned long long)fetchConversationCountForRosterHandle:(id)arg1;
+ (id)historyHandleWithRosterHandle:(id)arg1;
@property(retain, nonatomic) NSArray *searchConversations; // @synthesize searchConversations=_searchConversations;
@property(readonly, nonatomic) unsigned long long numberOfConversations; // @synthesize numberOfConversations=_numberOfConversations;
@property(readonly, copy, nonatomic) NSString *searchQuery; // @synthesize searchQuery=_searchQuery;
@property(readonly, nonatomic) FGORosterHandle *handle; // @synthesize handle=_handle;
- (id)fetchConversations;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface FGOHistoryHandleConversationsBadge : BTRView
{
    unsigned long long _badgeCount;
    BTRLabel *_label;
    BTRImageView *_imageView;
}

+ (id)badgeImage;
@property(readonly, nonatomic) BTRImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) BTRLabel *label; // @synthesize label=_label;
@property(nonatomic) unsigned long long badgeCount; // @synthesize badgeCount=_badgeCount;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)labelYInset;
- (id)labelEdgeInset;
- (void)commonInitForFGOHistoryHandleConversationsBadge;

@end

@interface FGOHistoryHandleTableCellView : FGOLayeredTableCellView
{
    FGOCircularImageView *_avatarImageView;
    FGOHistoryHandleConversationsBadge *_badge;
}

+ (double)rowHeight;
@property(nonatomic) __weak FGOHistoryHandleConversationsBadge *badge; // @synthesize badge=_badge;
@property(nonatomic) __weak FGOCircularImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
- (void)awakeFromNib;

@end

@interface FGOHistoryHandleTableRowView : FGOSeparatorTableRowView
{
}

+ (id)selectedCellImage;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOHistoryHandleTableRowView;

@end

@interface FGOHistoryHandlesViewController : FGOTableViewController <NSMenuDelegate>
{
    BOOL _usingSearchQuery;
    id <FGOHistoryHandlesViewControllerDelegate> _delegate;
    NSArray *_unwrappedObjects;
    RACDisposable *_objectsDisposable;
}

@property(retain, nonatomic) RACDisposable *objectsDisposable; // @synthesize objectsDisposable=_objectsDisposable;
@property(retain, nonatomic) NSArray *unwrappedObjects; // @synthesize unwrappedObjects=_unwrappedObjects;
@property(nonatomic) BOOL usingSearchQuery; // @synthesize usingSearchQuery=_usingSearchQuery;
@property(nonatomic) id <FGOHistoryHandlesViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)sortDescriptors;
- (id)unwrappedSortDescriptors;
- (void)fetchHandles;
- (id)deleteConversationMenuItemForHandle:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)configureRowView:(id)arg1 forRow:(long long)arg2;
- (unsigned long long)animationOptions;
- (Class)cellViewClassForRow:(long long)arg1;
- (Class)rowViewClassForRow:(long long)arg1;
- (void)unbindUnwrappedObjects;
- (void)bindUnwrappedObjects;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGOHistoryHandlesViewController;

@end

// Remaining properties

@interface FGOHistoryHeaderView : BTRView
{
}

+ (id)backgroundImage;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FGOHistoryHighlightedMessage : MTLModel
{
    FGOChatMessage *_message;
    struct _NSRange _emphasisRange;
}

+ (id)highlightedMessageWithChatMessage:(id)arg1 emphasisRange:(struct _NSRange)arg2;
@property(readonly, nonatomic) struct _NSRange emphasisRange; // @synthesize emphasisRange=_emphasisRange;
@property(readonly, nonatomic) FGOChatMessage *message; // @synthesize message=_message;

@end

@interface FGOHistoryMessagesViewController : FGOMessagesViewController
{
    FGOHistoryHighlightedMessage *_highlightedMessage;
    BTRView *_tableViewContainer;
    FGOHistoryPopUpButton *_filterPopUpButton;
    FGOHistoryHeaderView *_headerView;
}

@property(nonatomic) __weak FGOHistoryHeaderView *headerView; // @synthesize headerView=_headerView;
@property(nonatomic) __weak FGOHistoryPopUpButton *filterPopUpButton; // @synthesize filterPopUpButton=_filterPopUpButton;
@property(nonatomic) __weak BTRView *tableViewContainer; // @synthesize tableViewContainer=_tableViewContainer;
@property(retain, nonatomic) FGOHistoryHighlightedMessage *highlightedMessage; // @synthesize highlightedMessage=_highlightedMessage;
- (void)scrollToBottomAnimated:(BOOL)arg1;
- (struct CGRect)textFinderFindBarFrame;
- (id)textFinderParentView;
- (void)setFindBarVisible:(BOOL)arg1;
- (void)loadView;
- (id)initWithHistoryConversation:(id)arg1 groupingTypeFilter:(long long)arg2;

@end

@interface FGOHistoryPopUpButton : BTRPopUpButton
{
}

- (struct CGRect)labelFrame;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOHistoryPopUpButton;

@end

@interface FGOHistorySplitView : NSSplitView
{
}

- (id)dividerColor;
- (double)dividerThickness;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOHistorySplitView;

@end

@interface FGOHistoryWindowController : FGOAppStoreWindowController <FGOHistoryHandlesViewControllerDelegate, FGOHistoryConversationsViewControllerDelegate, NSTextFieldDelegate>
{
    FGOHistoryHandlesViewController *_handlesViewController;
    FGOHistoryConversationsViewController *_conversationsViewController;
    FGOHistoryMessagesViewController *_messagesViewController;
    FGOHistoryConversation *_previousSelectedConversation;
    FGOHistorySplitView *_splitView;
    BTRView *_titleBarView;
    BTRLabel *_titleLabel;
}

+ (id)messageSearchSortDescriptors;
+ (id)conversationSearchSortDescriptors;
+ (id)handleSearchSortDescriptors;
@property(nonatomic) __weak BTRLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) BTRView *titleBarView; // @synthesize titleBarView=_titleBarView;
@property(nonatomic) __weak FGOHistorySplitView *splitView; // @synthesize splitView=_splitView;
@property(retain, nonatomic) FGOHistoryConversation *previousSelectedConversation; // @synthesize previousSelectedConversation=_previousSelectedConversation;
@property(retain, nonatomic) FGOHistoryMessagesViewController *messagesViewController; // @synthesize messagesViewController=_messagesViewController;
@property(readonly, nonatomic) FGOHistoryConversationsViewController *conversationsViewController; // @synthesize conversationsViewController=_conversationsViewController;
@property(readonly, nonatomic) FGOHistoryHandlesViewController *handlesViewController; // @synthesize handlesViewController=_handlesViewController;
- (void)processSearchResults:(id)arg1 forQuery:(id)arg2;
- (void)controlTextDidChange:(id)arg1;
- (double)splitView:(id)arg1 constrainMaxCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (double)splitView:(id)arg1 constrainMinCoordinate:(double)arg2 ofSubviewAt:(long long)arg3;
- (BOOL)splitView:(id)arg1 shouldAdjustSizeOfSubview:(id)arg2;
- (void)historyConversationsViewController:(id)arg1 didSelectConversation:(id)arg2;
- (void)historyHandlesViewController:(id)arg1 didSelectHandle:(id)arg2;
- (void)dealloc;
- (void)configureViewControllers;
- (void)awakeFromNib;

@end

// Remaining properties

@interface FGOHoveringTableView : FGOLayeredTableView
{
    NSTrackingArea *_trackingArea;
    struct {
        unsigned int shouldHoverOnRow:1;
    } _hoveringTableViewDelegateFlags;
    long long _hoverIndex;
}

@property(nonatomic) long long hoverIndex; // @synthesize hoverIndex=_hoverIndex;
- (BOOL)hoverIndexIsValid:(long long)arg1;
- (void)setHovering:(BOOL)arg1 forRowView:(id)arg2;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)reloadData;
- (void)viewDidMoveToWindow;
- (void)updateTrackingAreas;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOHoveringTableView;

@end

@interface FGOHyperlinkLabel : BTRLabel
{
    BOOL _hovering;
    NSURL *_link;
    NSColor *_hoverTextColor;
    NSTrackingArea *_trackingArea;
    NSColor *_originalTextColor;
}

@property(nonatomic) BOOL hovering; // @synthesize hovering=_hovering;
@property(retain, nonatomic) NSColor *originalTextColor; // @synthesize originalTextColor=_originalTextColor;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property(retain, nonatomic) NSColor *hoverTextColor; // @synthesize hoverTextColor=_hoverTextColor;
@property(retain, nonatomic) NSURL *link; // @synthesize link=_link;
- (void)setTextColor:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)updateTrackingAreas;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOHyperlinkLabel;

@end

@class FGOIMServiceAttributes;

@interface FGOIMServiceAccount : MTLModel <NSSecureCoding>
{
    FGOIMServiceAttributes *_serviceAttributes;
    NSString *_username;
    NSString *_password;
    NSString *_uniqueIdentifier;
}

+ (BOOL)supportsSecureCoding;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(readonly, copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(readonly, nonatomic) FGOIMServiceAttributes *serviceAttributes; // @synthesize serviceAttributes=_serviceAttributes;
- (id)description;
- (id)initWithServiceAttributes:(id)arg1 username:(id)arg2 password:(id)arg3;

@end

@interface FGOIMServiceAttributes : MTLModel <NSSecureCoding>
{
    NSString *_name;
    long long _serverPort;
    NSString *_serverHost;
    NSString *_identifier;
}

+ (BOOL)supportsSecureCoding;
+ (id)xmppAttributesForHost:(id)arg1 port:(unsigned long long)arg2;
+ (id)googleTalkAttributes;
+ (id)facebookAttributes;
@property(readonly, copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
@property(readonly, copy, nonatomic) NSString *serverHost; // @synthesize serverHost=_serverHost;
@property(readonly, nonatomic) long long serverPort; // @synthesize serverPort=_serverPort;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;
- (BOOL)isXMPP;
- (BOOL)isGoogleTalk;
- (BOOL)isFacebook;
- (id)initWithServerHost:(id)arg1 serverPort:(unsigned long long)arg2 name:(id)arg3 identifier:(id)arg4;

@end

@interface FGOIMServiceCapabilities : MTLModel <NSSecureCoding>
{
    BOOL _supportsFileTransfer;
    FGOIMServiceHandle *_handle;
}

+ (BOOL)supportsSecureCoding;
@property(nonatomic) BOOL supportsFileTransfer; // @synthesize supportsFileTransfer=_supportsFileTransfer;
@property(retain, nonatomic) FGOIMServiceHandle *handle; // @synthesize handle=_handle;

@end

@class FGOSystemIdleTimer;
@class FGOIMServiceReachabilityManager;

@interface FGOIMServiceConnection : NSObject <FGOIMServiceClientDelegate>
{
    NSMutableDictionary *_clients;
    NSMutableDictionary *_accounts;
    NSMutableDictionary *_retryAttempts;
    FGOSystemIdleTimer *_idleTimer;
    RACSubject *_connectionStatusChanged;
    RACSignal *_distinctConnectionStatus;
    RACSubject *_errorReceived;
    RACSubject *_rosterChanged;
    RACSubject *_presenceBuffer;
    RACSubject *_presenceUpdated;
    RACSubject *_messageReceived;
    RACSubject *_authorizationRequestReceived;
    RACSubject *_fileTransferOfferReceived;
    NSTimer *_pingTimer;
    NSXPCConnection *_connection;
    long long _timerPresenceType;
    FGOIMServiceReachabilityManager *_reachability;
}

+ (id)notConnectedErrorForAccount:(id)arg1;
+ (id)sharedInstance;
@property(readonly, nonatomic) FGOIMServiceReachabilityManager *reachability; // @synthesize reachability=_reachability;
@property(nonatomic) long long timerPresenceType; // @synthesize timerPresenceType=_timerPresenceType;
@property(readonly, nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(readonly, nonatomic) RACSignal *fileTransferOfferReceived; // @synthesize fileTransferOfferReceived=_fileTransferOfferReceived;
@property(readonly, nonatomic) RACSignal *authorizationRequestReceived; // @synthesize authorizationRequestReceived=_authorizationRequestReceived;
@property(readonly, nonatomic) RACSignal *presenceUpdated; // @synthesize presenceUpdated=_presenceUpdated;
@property(readonly, nonatomic) RACSignal *messageReceived; // @synthesize messageReceived=_messageReceived;
@property(readonly, nonatomic) RACSignal *rosterChanged; // @synthesize rosterChanged=_rosterChanged;
@property(readonly, nonatomic) RACSignal *errorReceived; // @synthesize errorReceived=_errorReceived;
@property(readonly, nonatomic) RACSignal *connectionStatusChanged; // @synthesize connectionStatusChanged=_distinctConnectionStatus;
- (void)removeClientForAccount:(id)arg1;
- (void)setClient:(id)arg1 forAccount:(id)arg2;
- (id)clientForAccount:(id)arg1;
- (id)accountForClient:(id)arg1;
- (unsigned long long)retryCountForAccount:(id)arg1;
- (BOOL)shouldAttemptRetryForAccount:(id)arg1;
- (void)resetRetryCountForAccount:(id)arg1;
- (void)incrementRetryCountForAccount:(id)arg1;
- (void)attemptReconnectionForAccount:(id)arg1 hasError:(BOOL)arg2;
- (void)attemptReachabilityReconnection;
- (void)attemptReconnectionWithDelay:(double)arg1 block:(CDUnknownBlockType)arg2;
- (void)sendPresenceOfType:(long long)arg1 forAccount:(id)arg2;
- (void)client:(id)arg1 didReceiveOfferForTransfer:(id)arg2;
- (void)client:(id)arg1 didReceiveAuthorizationRequestFromHandle:(id)arg2;
- (void)client:(id)arg1 didReceiveMessage:(id)arg2;
- (void)client:(id)arg1 didUpdateRoster:(id)arg2;
- (void)client:(id)arg1 didReceivePresence:(id)arg2;
- (void)client:(id)arg1 didReceiveError:(id)arg2;
- (void)client:(id)arg1 didDisconnectWithError:(id)arg2;
- (void)clientDidConnect:(id)arg1;
- (id)rejectOfferForFileTransfer:(id)arg1 fromAccount:(id)arg2;
- (id)acceptOfferForFileTransfer:(id)arg1 fromAccount:(id)arg2;
- (id)rejectAuthorizationRequest:(id)arg1;
- (id)acceptAuthorizationRequest:(id)arg1;
- (id)removeHandle:(id)arg1;
- (id)addHandle:(id)arg1 toAccount:(id)arg2;
- (id)sendMessage:(id)arg1 fromAccount:(id)arg2;
- (id)sendOfferForFileTransfer:(id)arg1 fromAccount:(id)arg2;
- (id)retrieveCapabilitiesForHandleName:(id)arg1 withIMHandle:(id)arg2;
- (id)retrieveVCardForHandleName:(id)arg1;
- (id)retrieveVCardForAccount:(id)arg1;
- (id)updateVCard:(id)arg1 forAccount:(id)arg2;
- (id)updateVCardForAllAccounts:(id)arg1;
- (id)updatePresence:(id)arg1 forAccount:(id)arg2;
- (id)updatePresenceForAllAcounts:(id)arg1;
- (void)sendConnectionStatusOfType:(long long)arg1 forAccount:(id)arg2 error:(id)arg3;
- (void)logoutAccount:(id)arg1;
- (void)reauthenticateAccount:(id)arg1;
- (void)loginAccount:(id)arg1;
- (void)logoutAllAccounts;
- (void)loginAllAccounts;
@property(readonly, nonatomic) NSArray *accounts;
- (void)configurePresenceBuffer;
- (void)configureTimers;
- (void)configureReachability;
- (void)registerNotifications;
- (id)init;

@end

// Remaining properties

@interface FGOIMServiceConnectionStatus : MTLModel
{
    long long _type;
    FGOAccount *_account;
    NSError *_error;
}

@property(readonly, nonatomic) NSError *error; // @synthesize error=_error;
@property(readonly, nonatomic) FGOAccount *account; // @synthesize account=_account;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
- (id)initWithType:(long long)arg1 account:(id)arg2 error:(id)arg3;

@end

@interface FGOIMServiceFileTransfer : MTLModel <NSSecureCoding>
{
    BOOL _outgoing;
    FGOIMServiceHandle *_from;
    FGOIMServiceHandle *_to;
    NSString *_fileName;
    NSString *_mimeType;
    NSString *_uniqueIdentifier;
    NSData *_bookmarkData;
}

+ (BOOL)supportsSecureCoding;
+ (id)outgoingTransferWithURL:(id)arg1 to:(id)arg2;
@property(retain, nonatomic) NSData *bookmarkData; // @synthesize bookmarkData=_bookmarkData;
@property(nonatomic) BOOL outgoing; // @synthesize outgoing=_outgoing;
@property(copy, nonatomic) NSString *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(copy, nonatomic) NSString *mimeType; // @synthesize mimeType=_mimeType;
@property(copy, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) FGOIMServiceHandle *to; // @synthesize to=_to;
@property(retain, nonatomic) FGOIMServiceHandle *from; // @synthesize from=_from;
@property(retain, nonatomic) NSURL *URL;
- (id)description;

@end

@interface FGOIMServiceHandle : MTLModel <NSSecureCoding>
{
    NSString *_name;
    NSString *_alias;
    NSString *_resource;
}

+ (BOOL)supportsSecureCoding;
+ (id)handleWithName:(id)arg1 alias:(id)arg2 resource:(id)arg3;
@property(readonly, copy, nonatomic) NSString *resource; // @synthesize resource=_resource;
@property(readonly, copy, nonatomic) NSString *alias; // @synthesize alias=_alias;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
- (id)description;

@end

@interface FGOIMServiceMessage : MTLModel <NSSecureCoding>
{
    BOOL _sent;
    NSString *_body;
    NSString *_HTMLBody;
    NSAttributedString *_attributedContents;
    FGOIMServiceHandle *_to;
    FGOIMServiceHandle *_from;
    long long _state;
}

+ (id)encodingBehaviorsByPropertyKey;
+ (BOOL)supportsSecureCoding;
+ (id)messageWithBody:(id)arg1 toHandleWithName:(id)arg2 withState:(long long)arg3;
@property(nonatomic) long long state; // @synthesize state=_state;
@property(nonatomic) BOOL sent; // @synthesize sent=_sent;
@property(retain, nonatomic) FGOIMServiceHandle *from; // @synthesize from=_from;
@property(retain, nonatomic) FGOIMServiceHandle *to; // @synthesize to=_to;
@property(copy, nonatomic) NSAttributedString *attributedContents; // @synthesize attributedContents=_attributedContents;
@property(copy, nonatomic) NSString *HTMLBody; // @synthesize HTMLBody=_HTMLBody;
@property(copy, nonatomic) NSString *body; // @synthesize body=_body;
- (id)decodeValueForKey:(id)arg1 withCoder:(id)arg2 modelVersion:(unsigned long long)arg3;
- (void)encodeWithCoder:(id)arg1;
- (void)parseHTMLBody;
- (id)description;

@end

@interface FGOIMServicePresence : MTLModel <NSSecureCoding>
{
    long long _type;
    NSString *_statusMessage;
    NSString *_photoHash;
    FGOIMServiceHandle *_from;
    FGOIMServiceHandle *_to;
    NSDate *_date;
    long long _priority;
}

+ (BOOL)supportsSecureCoding;
+ (id)humanReadableStringForType:(long long)arg1;
+ (id)presenceWithType:(long long)arg1;
+ (id)offlinePresence;
@property(nonatomic) long long priority; // @synthesize priority=_priority;
@property(copy, nonatomic) NSDate *date; // @synthesize date=_date;
@property(retain, nonatomic) FGOIMServiceHandle *to; // @synthesize to=_to;
@property(retain, nonatomic) FGOIMServiceHandle *from; // @synthesize from=_from;
@property(copy, nonatomic) NSString *photoHash; // @synthesize photoHash=_photoHash;
@property(copy, nonatomic) NSString *statusMessage; // @synthesize statusMessage=_statusMessage;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(readonly, nonatomic) NSString *humanReadableType;
@property(readonly, nonatomic, getter=isOnline) BOOL online;
@property(readonly, nonatomic) long long rank;
- (id)init;

@end

@interface Reachability : NSObject
{
	BOOL reachableOnWWAN;
	struct __SCNetworkReachability *reachabilityRef;
	NSObject<OS_dispatch_queue> *reachabilitySerialQueue;
	CDUnknownBlockType reachableBlock;
	CDUnknownBlockType unreachableBlock;
	id reachabilityObject;
}

+ (id)reachabilityForLocalWiFi;
+ (id)reachabilityForInternetConnection;
+ (id)reachabilityWithAddress:(const struct sockaddr_in *)arg1;
+ (id)reachabilityWithHostname:(id)arg1;
+ (id)reachabilityWithHostName:(id)arg1;
@property(retain, nonatomic) id reachabilityObject; // @synthesize reachabilityObject;
@property(copy, nonatomic) CDUnknownBlockType unreachableBlock; // @synthesize unreachableBlock;
@property(copy, nonatomic) CDUnknownBlockType reachableBlock; // @synthesize reachableBlock;
@property(nonatomic) BOOL reachableOnWWAN; // @synthesize reachableOnWWAN;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *reachabilitySerialQueue; // @synthesize reachabilitySerialQueue;
@property(nonatomic) struct __SCNetworkReachability *reachabilityRef; // @synthesize reachabilityRef;
- (id)description;
- (void)reachabilityChanged:(unsigned int)arg1;
- (id)currentReachabilityFlags;
- (id)currentReachabilityString;
- (unsigned int)reachabilityFlags;
- (long long)currentReachabilityStatus;
- (BOOL)isInterventionRequired;
- (BOOL)isConnectionOnDemand;
- (BOOL)connectionRequired;
- (BOOL)isConnectionRequired;
- (BOOL)isReachableViaWiFi;
- (BOOL)isReachableViaWWAN;
- (BOOL)isReachable;
- (BOOL)isReachableWithFlags:(unsigned int)arg1;
- (void)stopNotifier;
- (BOOL)startNotifier;
- (void)dealloc;
- (id)initWithReachabilityRef:(struct __SCNetworkReachability *)arg1;

@end

@interface FGOIMServiceReachabilityManager : NSObject
{
    BOOL _notifierStarted;
    CDUnknownBlockType _reachabilityChanged;
    Reachability *_reachability;
}

+ (id)checkReachabilityForInternetConnection;
+ (id)checkReachabilityForHost:(id)arg1;
+ (id)reachabilityForHost:(id)arg1;
+ (id)reachabilityForInternetConnection;
@property(nonatomic) BOOL notifierStarted; // @synthesize notifierStarted=_notifierStarted;
@property(readonly, nonatomic) Reachability *reachability; // @synthesize reachability=_reachability;
@property(copy, nonatomic) CDUnknownBlockType reachabilityChanged; // @synthesize reachabilityChanged=_reachabilityChanged;
- (void)dealloc;
- (void)stopNotifier;
- (void)startNotifier;
- (BOOL)synchronouslyCheckReachability;
- (id)initWithReachability:(id)arg1;

@end

@interface FGOIMServiceRoster : MTLModel <NSSecureCoding>
{
    NSArray *_users;
}

+ (id)allowedSecureCodingClassesByPropertyKey;
+ (BOOL)supportsSecureCoding;
+ (id)rosterWithUsers:(id)arg1;
@property(readonly, nonatomic) NSArray *users; // @synthesize users=_users;

@end

@interface FGOIMServiceUser : MTLModel <NSSecureCoding, FGONameInformation>
{
    BOOL _online;
    BOOL _pendingApproval;
    NSString *_firstName;
    NSString *_lastName;
    FGOIMServiceHandle *_handle;
    FGOIMServiceAccount *_account;
}

+ (BOOL)supportsSecureCoding;
+ (id)userWithHandle:(id)arg1 account:(id)arg2;
@property(nonatomic, getter=isPendingApproval) BOOL pendingApproval; // @synthesize pendingApproval=_pendingApproval;
@property(nonatomic, getter=isOnline) BOOL online; // @synthesize online=_online;
@property(retain, nonatomic) FGOIMServiceAccount *account; // @synthesize account=_account;
@property(copy, nonatomic) FGOIMServiceHandle *handle; // @synthesize handle=_handle;
@property(copy, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(copy, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(readonly, copy) NSString *description;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface FGOIMServiceVCard : MTLModel <NSSecureCoding, FGONameInformation>
{
    BOOL _myVCard;
    FGOIMServiceUser *_user;
    NSString *_firstName;
    NSString *_lastName;
    NSData *_photoData;
}

+ (BOOL)supportsSecureCoding;
@property(nonatomic, getter=isMyVCard) BOOL myVCard; // @synthesize myVCard=_myVCard;
@property(retain, nonatomic) NSData *photoData; // @synthesize photoData=_photoData;
@property(copy, nonatomic) NSString *lastName; // @synthesize lastName=_lastName;
@property(copy, nonatomic) NSString *firstName; // @synthesize firstName=_firstName;
@property(retain, nonatomic) FGOIMServiceUser *user; // @synthesize user=_user;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) NSString *combinedName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface FGOMediaChatContentView : FGOQuickLookChatContentView
{
    BTRImageView *_frameImageView;
    BTRImageView *_imageView;
    FGOCircularImageView *_avatarImageView;
    BTRButton *_actionButton;
    BTRButton *_iconButton;
    BTRLabel *_usernameLabel;
    FGOGradientView *_gradientView;
    double _backingScale;
}

+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (struct NSEdgeInsets)contentInset;
+ (id)darkenedFrameImage;
+ (id)clearFrameImage;
@property(nonatomic) double backingScale; // @synthesize backingScale=_backingScale;
@property(readonly, nonatomic) FGOGradientView *gradientView; // @synthesize gradientView=_gradientView;
@property(readonly, nonatomic) BTRLabel *usernameLabel; // @synthesize usernameLabel=_usernameLabel;
@property(readonly, nonatomic) BTRButton *iconButton; // @synthesize iconButton=_iconButton;
@property(readonly, nonatomic) BTRButton *actionButton; // @synthesize actionButton=_actionButton;
@property(readonly, nonatomic) FGOCircularImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(readonly, nonatomic) BTRImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) BTRImageView *frameImageView; // @synthesize frameImageView=_frameImageView;
- (struct CGRect)quickLookSourceFrame;
- (void)openFile;
- (void)openURL;
- (id)copyURLMenuItem;
- (id)openURLMenuItem;
- (id)menuForEvent:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)viewDidChangeBackingProperties;
- (id)avatarTextSpacing;
- (id)actionButtonInset;
- (id)avatarInset;
- (id)iconButtonInset;
- (void)FGOMediaChatContentView_configureLayout;
- (void)FGOMediaChatContentView_configureBindings;
- (void)FGOMediaChatContentView_configureViews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOMediaChatContentView;

@end

@interface FGOImageChatContentView : FGOMediaChatContentView <NSDraggingSource>
{
    NSTrackingArea *_trackingArea;
}

@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
- (unsigned long long)draggingSession:(id)arg1 sourceOperationMaskForDraggingContext:(long long)arg2;
- (id)actionButtonInset;
- (id)iconButtonInset;
- (void)openFile;
- (id)quickLookMenuItem;
- (id)openImageMenuItem;
- (id)copyImageMenuItem;
- (id)menuForEvent:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)updateTrackingAreas;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOImageChatContentView;

@end

// Remaining properties

@interface _FGOImageChatMessage : FGOFileChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

@end

@interface FGOImageChatMessage : _FGOImageChatMessage <FGOImageChatMessage>
{
    NSImage *_cachedImage;
}

@property(retain, nonatomic) NSImage *cachedImage; // @synthesize cachedImage=_cachedImage;
- (void)beginImageDownload;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;
- (void)didTurnIntoFault;
- (void)awakeFromInsert;

// Remaining properties
@property(readonly, nonatomic) NSImage *image;

@end

@interface FGOImageChatMessageID : FGOFileChatMessageID
{
}

@end

@interface FGOImageChatMessage_ProtocolMethodContainer : NSObject <FGOImageChatMessage>
{
}

+ (id)keyPathsForValuesAffectingImage;
+ (void)load;
@property(readonly, nonatomic) NSImage *image;

// Remaining properties
@property(retain, nonatomic) NSImage *cachedImage;

@end

@interface FGOIncomingPopoverPanel : NSPanel
{
    NSView *_frameView;
    NSView *_popoverContentView;
}

@property(retain, nonatomic) NSView *popoverContentView; // @synthesize popoverContentView=_popoverContentView;
@property(readonly, nonatomic) NSView *frameView; // @synthesize frameView=_frameView;
- (void)setContentView:(id)arg1;
- (void)sendEvent:(id)arg1;
- (void)dismissAnimated;
- (struct CGRect)frameRectForContentRect:(struct CGRect)arg1;
- (struct CGRect)contentRectForFrameRect:(struct CGRect)arg1;
- (BOOL)canBecomeMainWindow;
- (BOOL)canBecomeKeyWindow;
- (BOOL)hasShadow;
- (id)initWithContentRect:(struct CGRect)arg1 styleMask:(unsigned long long)arg2 backing:(unsigned long long)arg3 defer:(BOOL)arg4;

@end

@interface FGOIncomingPresenceToImageValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)transformedValue:(id)arg1;

@end

@interface FGOIncomingTableCellView : FGOHoveringTableCellView
{
    BOOL _composing;
    FGOCircularImageView *_avatarImageView;
    BTRImageView *_statusImageView;
    BTRLabel *_messageLabel;
    FGOChatListUnreadLabel *_unreadLabel;
    BTRImageView *_composingImageView;
    NSButton *_closeButton;
}

+ (double)rowHeight;
+ (id)unreadBackgroundImage;
@property(nonatomic) __weak NSButton *closeButton; // @synthesize closeButton=_closeButton;
@property(nonatomic) __weak BTRImageView *composingImageView; // @synthesize composingImageView=_composingImageView;
@property(nonatomic) __weak FGOChatListUnreadLabel *unreadLabel; // @synthesize unreadLabel=_unreadLabel;
@property(nonatomic) __weak BTRLabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(nonatomic) __weak BTRImageView *statusImageView; // @synthesize statusImageView=_statusImageView;
@property(nonatomic) __weak FGOCircularImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(nonatomic, getter=isComposing) BOOL composing; // @synthesize composing=_composing;
- (void)setHovering:(BOOL)arg1;
- (void)FGOIncomingTableCellView_configureBindings;
- (void)FGOIncomingTableCellView_configureInterface;
- (void)awakeFromNib;

@end

@interface FGOIncomingTableRowView : FGOSeparatorTableRowView
{
}

- (void)drawSelectionInRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOIncomingTableRowView;

@end

@interface FGOIncomingWindowController : FGOWindowController <NSTableViewDataSource, NSTableViewDelegate>
{
    BOOL _awokenFromNib;
    NSMutableArray *_conversations;
    BOOL _composing;
    RACSignal *_intrinsicContentHeight;
    RACSignal *_conversationCount;
    FGOHoveringTableView *_tableView;
    double _bottomBarHeight;
    NSMutableDictionary *_composingState;
}

@property(retain, nonatomic) NSMutableDictionary *composingState; // @synthesize composingState=_composingState;
@property(nonatomic) double bottomBarHeight; // @synthesize bottomBarHeight=_bottomBarHeight;
@property(nonatomic) __weak FGOHoveringTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic, getter=isComposing) BOOL composing; // @synthesize composing=_composing;
@property(readonly, nonatomic) RACSignal *conversationCount; // @synthesize conversationCount=_conversationCount;
@property(readonly, nonatomic) RACSignal *intrinsicContentHeight; // @synthesize intrinsicContentHeight=_intrinsicContentHeight;
@property(retain, nonatomic) NSMutableArray *conversations; // @synthesize conversations=_conversations;
- (void)tableViewSelectionDidChange:(id)arg1;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)removeConversationsAtIndexes:(id)arg1;
- (void)clearConversation:(id)arg1;
- (void)settings:(id)arg1;
- (void)clear:(id)arg1;
- (void)presentUnderStatusItem:(id)arg1;
- (void)dismissWindowAnimated:(id)arg1;
- (id)mutableConversations;
- (void)managedObjectContextObjectsDidChange:(id)arg1;
- (void)dealloc;
- (BOOL)composingStateForHandle:(id)arg1;
- (void)setComposingState:(BOOL)arg1 forHandle:(id)arg2;
- (void)FGOIncomingWindowController_subscribeConnectionSignals;
- (void)awakeFromNib;
- (id)init;

@end

@interface FGOJSONHTTPClient : AFHTTPClient
{
}

- (id)initWithBaseURL:(id)arg1;

@end

@interface FGOInstagramAPIClient : FGOJSONHTTPClient
{
}

- (void)getInstagramPhotoAtURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)getOembedInformationForInstagramURL:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)init;

@end

@interface FGOInstagramChatContentView : FGOImageChatContentView
{
}

- (id)actionButtonInset;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOInstagramChatContentView;

@end

@interface _FGOInstagramChatMessage : FGOImageChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *avatarStorageIdentifier; // @dynamic avatarStorageIdentifier;
@property(retain, nonatomic) NSString *fullName; // @dynamic fullName;
@property(retain, nonatomic) NSString *username; // @dynamic username;

@end

@interface FGOInstagramChatMessage : _FGOInstagramChatMessage
{
}

+ (id)humanReadableType;
+ (id)keyPathsForValuesAffectingAvatarImage;
- (id)instagramFetchSignal;
- (void)beginInstagramDownload;
- (id)userNotification;
- (id)URLHighlightedImage;
- (id)URLImage;
@property(readonly, nonatomic) NSImage *avatarImage;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;
- (void)awakeFromInsert;

@end

@interface FGOInstagramChatMessageID : FGOImageChatMessageID
{
}

@end

@interface FGOInstagramPhoto : MTLModel <MTLJSONSerializing>
{
    NSString *_username;
    NSString *_fullName;
    NSURL *_profilePictureURL;
    NSURL *_imageURL;
}

+ (id)usernameJSONTransformer;
+ (id)imageURLJSONTransformer;
+ (id)profilePictureURLJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
@property(retain, nonatomic) NSURL *imageURL; // @synthesize imageURL=_imageURL;
@property(retain, nonatomic) NSURL *profilePictureURL; // @synthesize profilePictureURL=_profilePictureURL;
@property(copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;

@end

@interface FGOIntegerPreference : FGOPreference
{
    NSMenu *_menu;
}

+ (id)preferenceWithUserDefaultsKeypath:(id)arg1 menu:(id)arg2;
@property(readonly, nonatomic) NSMenu *menu; // @synthesize menu=_menu;
@property(nonatomic) long long integerValue;

@end

@interface FGOIntroViewController : FGOViewController
{
    BTRImageView *_logoImageView;
}

@property(nonatomic) __weak BTRImageView *logoImageView; // @synthesize logoImageView=_logoImageView;
- (void)loadView;

@end

@interface FGOLayeredScrollView : NSScrollView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)setContentView:(id)arg1;
- (void)setDocumentView:(id)arg1;
- (void)commonInitForFGOLayeredScrollView;

@end

@interface FGOLayeredTableViewHeaderView : NSTableHeaderView
{
}

- (void)updateLayer;
- (BOOL)wantsUpdateLayer;
- (struct CGRect)headerRectOfColumn:(long long)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOLayeredTableViewHeaderView;

@end

@class FGOPrimaryViewController;
@class FGORosterViewController;

@interface FGOMainWindowController : INDockableWindowController <INDockableWindowControllerDelegate>
{
}

+ (id)dockableViewControllerForView:(id)arg1;
+ (id)newWindow;
- (void)resetShadowViewVisibility;
- (void)resetFullscreenButtonVisibility;
- (void)resetSeparatorVisibilitiesWithExpectedAddition:(BOOL)arg1;
- (void)dockableWindowController:(id)arg1 didAddViewController:(id)arg2;
- (void)dockableWindowController:(id)arg1 viewControllerWasAttached:(id)arg2;
- (void)dockableWindowController:(id)arg1 viewControllerWasDetached:(id)arg2;
- (void)dockableWindowController:(id)arg1 willAddViewController:(id)arg2;
- (void)dockableWindowController:(id)arg1 didRemoveViewController:(id)arg2;
@property(readonly, nonatomic) BOOL hasActiveConversation;
@property(readonly, nonatomic) FGOAuxiliaryViewController *activeAuxiliaryViewController;
- (void)closeActiveConversationOrWindow;
- (BOOL)windowShouldClose:(id)arg1;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
@property(readonly, nonatomic) FGOChatListViewController *chatListViewController;
@property(readonly, nonatomic) FGORosterViewController *rosterViewController;
- (void)FGOMainWindowController_registerNotificationObservers;
- (void)windowDidLoad;
- (id)init;

@end

@interface FGOManagedObjectContextStack : NSObject
{
    NSManagedObjectContext *_mainQueueContext;
    NSPersistentStoreCoordinator *_persistentStoreCoordinator;
    NSMutableArray *_activeContexts;
    NSManagedObjectModel *_managedObjectModel;
}

+ (id)chatStack;
@property(readonly, nonatomic) NSManagedObjectModel *managedObjectModel; // @synthesize managedObjectModel=_managedObjectModel;
@property(readonly, nonatomic) NSMutableArray *activeContexts; // @synthesize activeContexts=_activeContexts;
@property(readonly, nonatomic) NSPersistentStoreCoordinator *persistentStoreCoordinator; // @synthesize persistentStoreCoordinator=_persistentStoreCoordinator;
@property(readonly, nonatomic) NSManagedObjectContext *mainQueueContext; // @synthesize mainQueueContext=_mainQueueContext;
- (id)mainQueueObjectsWithIDs:(id)arg1;
- (id)mainQueueObjectWithURI:(id)arg1;
- (id)mainQueueObjectWithID:(id)arg1;
- (id)fetchExistingObjectWithRequest:(id)arg1;
- (id)insertObjectOfEntityName:(id)arg1 configure:(CDUnknownBlockType)arg2;
- (id)fetchOrCreateObjectWithRequest:(id)arg1 configure:(CDUnknownBlockType)arg2;
- (id)fetchImmediatelyWithRequest:(id)arg1;
- (id)fetchCountWithRequest:(id)arg1;
- (id)fetchWithRequest:(id)arg1;
- (id)save;
- (id)signalForBackgroundContextBlock:(CDUnknownBlockType)arg1;
- (id)newContextWithType:(unsigned long long)arg1 parent:(id)arg2;
- (id)initWithModelName:(id)arg1;

@end

@class FGOMenuViewController;

@interface FGOMenu : NSObject
{
    NSMutableArray *_items;
    FGOMenuViewController *_menuViewController;
    id _eventMonitor;
    struct CGRect _anchorRect;
}

@property(nonatomic) struct CGRect anchorRect; // @synthesize anchorRect=_anchorRect;
@property(nonatomic) __weak id eventMonitor; // @synthesize eventMonitor=_eventMonitor;
@property(retain, nonatomic) FGOMenuViewController *menuViewController; // @synthesize menuViewController=_menuViewController;
@property(retain, nonatomic) NSArray *items; // @synthesize items=_items;
- (void)selectMenuItemAtIndex:(unsigned long long)arg1;
- (void)resizeMenuViewControllerToFit;
- (void)stopMonitoringMouseEvents;
- (void)performMenuAction:(long long)arg1;
- (void)startMonitoringMouseEvents;
@property(readonly, nonatomic) NSMutableArray *KVOCompliantItems;
- (void)showRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2;
- (unsigned long long)numberOfItems;
- (id)itemAtIndex:(unsigned long long)arg1;
- (void)removeAllItems;
- (void)removeItemAtIndex:(unsigned long long)arg1;
- (void)removeItem:(id)arg1;
- (void)addItem:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface FGOMenuItem : MTLModel
{
    NSString *_title;
    NSString *_secondaryTitle;
    NSImage *_image;
    NSImage *_highlightedImage;
    long long _type;
    CDUnknownBlockType _block;
}

+ (id)separatorItem;
@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(nonatomic) long long type; // @synthesize type=_type;
@property(retain, nonatomic) NSImage *highlightedImage; // @synthesize highlightedImage=_highlightedImage;
@property(retain, nonatomic) NSImage *image; // @synthesize image=_image;
@property(copy, nonatomic) NSString *secondaryTitle; // @synthesize secondaryTitle=_secondaryTitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;

@end

@interface FGOMenuItemBlockWrapper : NSObject
{
    CDUnknownBlockType _block;
}

@property(copy) CDUnknownBlockType block; // @synthesize block=_block;
- (void)executeBlock:(id)arg1;

@end

@class FGOMenuTableView;

@interface FGOMenuItemImageTextCellView : FGOHoveringTableCellView
{
    BTRLabel *_menuTextField;
    BTRLabel *_secondaryTitleLabel;
    BTRImageView *_menuImageView;
    FGOMenuTableView *_tableView;
    long long _rowIndex;
}

+ (double)rowHeight;
@property(nonatomic) long long rowIndex; // @synthesize rowIndex=_rowIndex;
@property(nonatomic) __weak FGOMenuTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak BTRImageView *menuImageView; // @synthesize menuImageView=_menuImageView;
@property(nonatomic) __weak BTRLabel *secondaryTitleLabel; // @synthesize secondaryTitleLabel=_secondaryTitleLabel;
@property(nonatomic) __weak BTRLabel *menuTextField; // @synthesize menuTextField=_menuTextField;
- (void)mouseDown:(id)arg1;
- (void)prepareForReuse;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOMenuitemImageTextCellView;

@end

@interface FGOMenuItemHeaderCellView : FGOMenuItemImageTextCellView
{
}

+ (double)rowHeight;

@end

@interface FGOMenuItemSeparatorCellView : FGOHoveringTableCellView
{
}

+ (double)rowHeight;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface FGOMenuItemTableRowView : FGOHoveringTableRowView
{
    BTRImageView *_selectionImageView;
}

+ (id)selectedCellImage;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (void)setSelected:(BOOL)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOMenuItemTableRowView;

@end

@interface FGOMenuTableView : FGOHoveringTableView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOMenuTableView;

@end

@interface FGOMenuViewController : NSViewController <NSTableViewDataSource, NSTableViewDelegate>
{
    double *_rowHeights;
    FGOMenu *_fgo_menu;
    BTRImageView *_backgroundImageView;
    FGOMenuTableView *_tableView;
}

+ (id)normalTextColor;
+ (id)backgroundImage;
@property(nonatomic) __weak FGOMenuTableView *tableView; // @synthesize tableView=_tableView;
@property(nonatomic) __weak BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(readonly, nonatomic) __weak FGOMenu *fgo_menu; // @synthesize fgo_menu=_fgo_menu;
- (Class)cellClassForItemType:(long long)arg1;
- (void)insertNewlineIgnoringFieldEditor:(id)arg1;
- (void)insertNewline:(id)arg1;
- (void)moveDown:(id)arg1;
- (void)moveUp:(id)arg1;
- (void)tableViewPressedReturn:(id)arg1;
- (void)tableView:(id)arg1 clickedRowAtIndex:(long long)arg2;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)tableViewSelectionIsChanging:(id)arg1;
- (void)configureAllAvailableRows;
- (void)configureImageTextCellView:(id)arg1 row:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldHoverOnRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)dealloc;
@property(readonly, nonatomic) double totalContentHeight;
- (void)recalculateRowHeights;
- (id)initWithMenu:(id)arg1;
- (void)loadView;

@end

// Remaining properties

@interface FGOMessageParser : NSObject
{
}

+ (id)parseMessagesFromString:(id)arg1 sent:(BOOL)arg2 conversation:(id)arg3 handleName:(id)arg4;
+ (void)load;

@end

@interface FGOMessagesTextFinderClient : NSObject <NSTextFinderClient>
{
    id <FGOMessagesTextFinderClientDelegate> _delegate;
    NSArray *_messages;
    FGOLayeredTableView *_tableView;
    unsigned long long _stringLength;
    NSArray *_fragments;
}

@property(retain, nonatomic) NSArray *fragments; // @synthesize fragments=_fragments;
@property(nonatomic) unsigned long long stringLength; // @synthesize stringLength=_stringLength;
@property(nonatomic) __weak FGOLayeredTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) NSArray *messages; // @synthesize messages=_messages;
@property(nonatomic) id <FGOMessagesTextFinderClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) struct _NSRange firstSelectedRange;
@property(readonly, getter=isEditable) BOOL editable;
@property(readonly) BOOL allowsMultipleSelection;
@property(readonly, getter=isSelectable) BOOL selectable;
- (void)didReplaceCharacters;
- (void)replaceCharactersInRange:(struct _NSRange)arg1 withString:(id)arg2;
- (BOOL)shouldReplaceCharactersInRanges:(id)arg1 withStrings:(id)arg2;
- (unsigned long long)indexOfFragmentContainingCharacterIndex:(unsigned long long)arg1;
- (id)fragmentContainingCharacterIndex:(unsigned long long)arg1;
- (struct _NSRange)relativeCharacterRangeForRange:(struct _NSRange)arg1 fragment:(id *)arg2;
- (void)drawCharactersInRange:(struct _NSRange)arg1 forContentView:(id)arg2;
@property(readonly, copy) NSArray *visibleCharacterRanges;
- (void)scrollRangeToVisible:(struct _NSRange)arg1;
- (id)rectsForCharacterRange:(struct _NSRange)arg1;
- (id)contentViewAtIndex:(unsigned long long)arg1 effectiveCharacterRange:(struct _NSRange *)arg2;
- (id)stringAtIndex:(unsigned long long)arg1 effectiveRange:(struct _NSRange *)arg2 endsWithSearchBoundary:(char *)arg3;
- (void)rebuildFragmentsWithMessages:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(copy) NSArray *selectedRanges;
@property(readonly) NSString *string;
@property(readonly) Class superclass;

@end

@interface FGOMessagesTextFinderFragment : MTLModel
{
    NSString *_string;
    unsigned long long _index;
    struct _NSRange _effectiveRange;
}

+ (id)fragmentWithString:(id)arg1 index:(unsigned long long)arg2 effectiveRange:(struct _NSRange)arg3;
@property(readonly, nonatomic) struct _NSRange effectiveRange; // @synthesize effectiveRange=_effectiveRange;
@property(readonly, nonatomic) unsigned long long index; // @synthesize index=_index;
@property(readonly, copy, nonatomic) NSString *string; // @synthesize string=_string;

@end

@interface FGOMessagesTextFinderOverlayView : BTRView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface _FGOMessagingService : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveServerPortValue:(short)arg1;
- (short)primitiveServerPortValue;
@property short serverPortValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGOAccount *account; // @dynamic account;
@property(retain, nonatomic) NSString *identifier; // @dynamic identifier;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSString *serverHost; // @dynamic serverHost;
@property(retain, nonatomic) NSNumber *serverPort; // @dynamic serverPort;

@end

@interface FGOMessagingService : _FGOMessagingService
{
}

+ (id)iconForIdentifier:(id)arg1;
+ (id)emailPlaceholderForIdentifier:(id)arg1;
- (void)mergeInformationFromAttributes:(id)arg1;
@property(readonly, nonatomic) FGOIMServiceAttributes *IMServiceAttributes;
- (BOOL)supportsPresencePriority;
- (BOOL)supportsRosterEditing;
- (BOOL)isXMPP;
- (BOOL)isGoogleTalk;
- (BOOL)isFacebook;
@property(readonly, nonatomic) NSString *emailPlaceholder;
@property(readonly, nonatomic) NSImage *icon;

@end

@interface FGOMessagingServiceID : NSManagedObjectID
{
}

@end

@interface FGOMessagingServiceToPrefIconValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
- (id)transformedValue:(id)arg1;

@end

@interface FGOOAuth2WindowController : FGOWindowController
{
    struct {
        unsigned int receivedOAuth2Key:1;
        unsigned int failedWithError:1;
    } _delegateFlags;
    FGOOAuth2Provider *_provider;
    id <FGOOAuth2WindowControllerDelegate> _delegate;
    NSString *_prompt;
    NSString *_username;
}

@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(readonly, copy, nonatomic) NSString *prompt; // @synthesize prompt=_prompt;
@property(nonatomic) id <FGOOAuth2WindowControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) FGOOAuth2Provider *provider; // @synthesize provider=_provider;
- (void)close:(id)arg1;
- (void)delegateFailedWithError:(id)arg1;
- (void)delegateReceivedOAuth2Key:(id)arg1;
- (id)initWithProvider:(id)arg1 username:(id)arg2;

@end

@interface FGOOAuth2BasicWindowController : FGOOAuth2WindowController
{
    NSSecureTextField *_passwordField;
}

@property(nonatomic) __weak NSSecureTextField *passwordField; // @synthesize passwordField=_passwordField;
- (void)ok:(id)arg1;

@end

@interface FGOOAuth2Key : MTLModel <NSSecureCoding>
{
    NSString *_accessToken;
    NSString *_refreshToken;
    NSDate *_expiryDate;
    NSString *_userID;
    NSString *_providerClassName;
}

+ (BOOL)supportsSecureCoding;
@property(readonly, copy, nonatomic) NSString *providerClassName; // @synthesize providerClassName=_providerClassName;
@property(readonly, copy, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(readonly, copy, nonatomic) NSDate *expiryDate; // @synthesize expiryDate=_expiryDate;
@property(copy, nonatomic) NSString *refreshToken; // @synthesize refreshToken=_refreshToken;
@property(readonly, copy, nonatomic) NSString *accessToken; // @synthesize accessToken=_accessToken;
- (id)description;
@property(readonly, copy, nonatomic) NSString *uniqueIdentifier;
- (id)initWithAccessToken:(id)arg1 refreshToken:(id)arg2 expiryDate:(id)arg3 userID:(id)arg4 providerClass:(Class)arg5;

@end

@interface _FGOOAuth2KeyIdentifier : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGOAccount *account; // @dynamic account;
@property(retain, nonatomic) NSString *keychainIdentifier; // @dynamic keychainIdentifier;
@property(retain, nonatomic) NSString *providerClassName; // @dynamic providerClassName;

@end

@interface FGOOAuth2KeyIdentifier : _FGOOAuth2KeyIdentifier
{
}

+ (id)insertKeyIdentifierForKey:(id)arg1;

@end

@interface FGOOAuth2KeyIdentifierID : NSManagedObjectID
{
}

@end

@interface FGOOAuth2KeyStorage : NSObject <FGOOAuth2WindowControllerDelegate>
{
    NSMutableDictionary *_subjects;
    NSMutableArray *_windowControllers;
    id <FGOOAuth2KeyStorageDelegate> _delegate;
}

+ (id)checkReachabilityForProvider:(id)arg1;
+ (id)sharedInstance;
@property(nonatomic) id <FGOOAuth2KeyStorageDelegate> delegate; // @synthesize delegate=_delegate;
- (void)performOAuth2WebCompletionBlock:(CDUnknownBlockType)arg1 withController:(id)arg2;
- (void)oAuth2Controller:(id)arg1 failedWithError:(id)arg2;
- (void)oAuth2Controller:(id)arg1 receivedOAuth2Key:(id)arg2;
- (void)errorSubjectForIdentifier:(id)arg1 withError:(id)arg2;
- (void)completeSubjectForIdentifier:(id)arg1 withKey:(id)arg2;
- (void)removeSubjectForIdentifier:(id)arg1;
- (id)subjectForIdentifier:(id)arg1;
- (void)setSubject:(id)arg1 forIdentifier:(id)arg2;
- (void)writeKeyToKeychain:(id)arg1;
- (void)sendReachabilityErrorForIdentifier:(id)arg1;
- (void)reauthenticateWithRefreshToken:(id)arg1 oldKey:(id)arg2 identifier:(id)arg3;
- (void)reauthenticateWithIdentifier:(id)arg1;
- (id)retrieveKeyForIdentifier:(id)arg1;
- (id)reauthenticateKeyWithIdentifier:(id)arg1;
- (void)replaceKeyForIdentifier:(id)arg1 withKey:(id)arg2;
- (id)storeKey:(id)arg1;
- (id)init;

@end

// Remaining properties

@interface FGOOAuth2WebWindowController : FGOOAuth2WindowController
{
    WebView *_webView;
}

+ (id)stateMismatchError;
@property(nonatomic) WebView *webView; // @synthesize webView=_webView;
- (void)beginSheetModalForWindow:(id)arg1;
- (BOOL)parseRedirect:(id)arg1;
- (void)webView:(id)arg1 didCommitLoadForFrame:(id)arg2;
- (void)webView:(id)arg1 didReceiveTitle:(id)arg2 forFrame:(id)arg3;
- (void)dealloc;
- (void)windowDidLoad;

@end

@interface FGOOverlayScrollView : FGOLayeredScrollView
{
}

- (long long)scrollerStyle;
- (void)setScrollerStyle:(long long)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOOverlayScrollView;

@end

@interface FGOPageControl : BTRView
{
    NSPageController *_pageController;
    NSImage *_inactiveIndicatorImage;
    NSImage *_activeIndicatorImage;
    double _indicatorSpacing;
    NSArray *_indicators;
}

@property(retain, nonatomic) NSArray *indicators; // @synthesize indicators=_indicators;
@property(nonatomic) double indicatorSpacing; // @synthesize indicatorSpacing=_indicatorSpacing;
@property(retain, nonatomic) NSImage *activeIndicatorImage; // @synthesize activeIndicatorImage=_activeIndicatorImage;
@property(retain, nonatomic) NSImage *inactiveIndicatorImage; // @synthesize inactiveIndicatorImage=_inactiveIndicatorImage;
@property(nonatomic) __weak NSPageController *pageController; // @synthesize pageController=_pageController;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)resetBackgroundImageForIndicator:(id)arg1;
- (id)indicatorForIndex:(long long)arg1;
- (void)commonInitForFGOPageControl;

@end

@interface FGOPageControlIndicator : BTRButton
{
    long long _index;
}

@property(nonatomic) long long index; // @synthesize index=_index;

@end

@interface FGOPreferencesCheckboxButton : BTRButton
{
}

- (void)setSelected:(BOOL)arg1;
- (void)mouseUp:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOGeneralPrefCheckboxButton;

@end

@interface FGOPreferencesTableCellView : FGOLayeredTableCellView
{
}

+ (id)keyPathsForValuesAffectingPreference;
@property(readonly, nonatomic) FGOPreference *preference;

@end

@interface FGOPreferencesCheckboxTableCellView : FGOPreferencesTableCellView
{
    FGOPreferencesCheckboxButton *_checkboxButton;
}

+ (double)rowHeight;
@property(nonatomic) __weak FGOPreferencesCheckboxButton *checkboxButton; // @synthesize checkboxButton=_checkboxButton;
- (void)awakeFromNib;

// Remaining properties
@property(retain, nonatomic) FGOBooleanPreference *preference; // @dynamic preference;

@end

@interface FGOPreferencesImageTextTableCellView : FGOPreferencesTableCellView
{
    BTRImageView *_prefImageView;
}

+ (double)rowHeight;
@property(nonatomic) __weak BTRImageView *prefImageView; // @synthesize prefImageView=_prefImageView;
- (void)awakeFromNib;

// Remaining properties
@property __weak BTRLabel *textField; // @dynamic textField;

@end

@interface FGOPreferencesMenuTableCellView : FGOPreferencesImageTextTableCellView
{
    FGOAddBuddyPopUpButton *_popUpButton;
}

@property(nonatomic) __weak FGOAddBuddyPopUpButton *popUpButton; // @synthesize popUpButton=_popUpButton;
- (id)menuItemForTag:(long long)arg1;
- (void)awakeFromNib;

// Remaining properties
@property(retain, nonatomic) FGOIntegerPreference *preference; // @dynamic preference;

@end

@class FGOToggleSwitch;

@interface FGOPreferencesSwitchTableCellView : FGOPreferencesImageTextTableCellView
{
    FGOToggleSwitch *_toggleSwitch;
}

@property(nonatomic) __weak FGOToggleSwitch *toggleSwitch; // @synthesize toggleSwitch=_toggleSwitch;
- (void)awakeFromNib;

// Remaining properties
@property(retain, nonatomic) FGOBooleanPreference *preference; // @dynamic preference;

@end

@interface FGOPreferencesTableRowView : FGOLayeredTableRowView
{
    BOOL _showGroupedBackground;
    BOOL _showSeparator;
}

@property(nonatomic) BOOL showSeparator; // @synthesize showSeparator=_showSeparator;
@property(nonatomic) BOOL showGroupedBackground; // @synthesize showGroupedBackground=_showGroupedBackground;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOGeneralPrefTableRowView;

@end

@interface MASPreferencesWindowController : NSWindowController <NSToolbarDelegate, NSWindowDelegate>
{
    NSArray *_viewControllers;
    NSMutableDictionary *_minimumViewRects;
    NSString *_title;
    NSViewController<MASPreferencesViewController> *_selectedViewController;
}

@property(readonly, nonatomic) NSString *title; // @synthesize title=_title;
@property(retain, nonatomic) NSViewController<MASPreferencesViewController> *selectedViewController; // @synthesize selectedViewController=_selectedViewController;
@property(readonly, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
- (void)goPreviousTab:(id)arg1;
- (void)goNextTab:(id)arg1;
- (void)selectControllerAtIndex:(unsigned long long)arg1;
- (void)toolbarItemDidClick:(id)arg1;
- (id)viewControllerForIdentifier:(id)arg1;
- (void)patchResponderChain;
- (void)clearResponderChain;
- (id)toolbar:(id)arg1 itemForItemIdentifier:(id)arg2 willBeInsertedIntoToolbar:(BOOL)arg3;
- (id)toolbarSelectableItemIdentifiers:(id)arg1;
- (id)toolbarDefaultItemIdentifiers:(id)arg1;
- (id)toolbarAllowedItemIdentifiers:(id)arg1;
@property(readonly, nonatomic) unsigned long long indexOfSelectedController;
@property(readonly) NSArray *toolbarItemIdentifiers;
- (void)windowDidResize:(id)arg1;
- (void)windowDidMove:(id)arg1;
- (BOOL)windowShouldClose:(id)arg1;
- (id)firstViewController;
- (void)windowDidLoad;
- (void)dealloc;
- (id)initWithViewControllers:(id)arg1 title:(id)arg2;
- (id)initWithViewControllers:(id)arg1;

@end

// Remaining properties

@interface FGOPreferencesWindowController : MASPreferencesWindowController
{
}

- (void)awakeFromNib;
- (id)init;

@end

@interface _FGOPresenceChatMessage : FGOChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (void)setPrimitiveStatusTypeValue:(short)arg1;
- (short)primitiveStatusTypeValue;
@property short statusTypeValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSNumber *statusType; // @dynamic statusType;

@end

@interface FGOPresenceChatMessage : _FGOPresenceChatMessage
{
}

+ (id)insertPresenceMessageForPresence:(id)arg1 handleName:(id)arg2 inConversation:(id)arg3;
- (BOOL)automaticallyGenerated;
- (Class)cellClass;

@end

@interface FGOPresenceChatMessageID : FGOChatMessageID
{
}

@end

@interface FGOPresenceDataPair : NSObject
{
    FGORosterHandleName *_handleName;
    FGOIMServicePresence *_presence;
}

+ (id)sortDescriptors;
+ (id)rankPresencePairArrayByAvailability:(id)arg1;
+ (id)defaultPairForHandleName:(id)arg1;
+ (id)defaultPairForHandle:(id)arg1;
+ (id)pairForHandleName:(id)arg1 presence:(id)arg2;
@property(retain, nonatomic) FGOIMServicePresence *presence; // @synthesize presence=_presence;
@property(retain, nonatomic) FGORosterHandleName *handleName; // @synthesize handleName=_handleName;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (id)description;

@end

@interface FGOPresenceDataStorage : NSObject
{
    NSMutableDictionary *_data;
    NSMutableDictionary *_preferredHandleNameSubjects;
}

+ (id)sharedInstance;
@property(retain, nonatomic) NSMutableDictionary *data; // @synthesize data=_data;
- (void)setPreferredHandleName:(id)arg1 forHandle:(id)arg2;
- (id)preferredHandleNameSubjectForHandle:(id)arg1;
- (id)dataStorageForHandleName:(id)arg1;
- (void)removeDataStorageForHandleName:(id)arg1;
- (id)preferredHandleNameForHandle:(id)arg1;
- (id)presencePairForHandle:(id)arg1;
- (id)bestPresenceForHandleName:(id)arg1;
- (id)bestPresenceForHandle:(id)arg1;
- (void)removeDataForAccount:(id)arg1;
- (void)FGOPresenceDataStorage_subscribeConnectionSignals;
- (id)init;

@end

@interface FGOPresenceHandleNameData : NSObject
{
    NSMutableDictionary *_data;
    RACReplaySubject *_bestPresenceUpdated;
    RACSignal *_distinctBestPresence;
    FGORosterHandleName *_handleName;
    NSArray *_sortedPresences;
}

@property(retain, nonatomic) NSArray *sortedPresences; // @synthesize sortedPresences=_sortedPresences;
@property(readonly, nonatomic) FGORosterHandleName *handleName; // @synthesize handleName=_handleName;
@property(readonly, nonatomic) RACSignal *bestPresenceUpdated; // @synthesize bestPresenceUpdated=_distinctBestPresence;
@property(readonly, nonatomic) FGOPresenceDataPair *bestPresence;
- (void)removeAllData;
- (void)addPresence:(id)arg1;
- (id)description;
- (id)initWithHandleName:(id)arg1;

@end

@interface FGOPresenceImageView : FGOCircularImageView
{
    CDUnknownBlockType _clickBlock;
}

@property(copy, nonatomic) CDUnknownBlockType clickBlock; // @synthesize clickBlock=_clickBlock;
- (void)setBackgroundForType:(long long)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOPresenceImageView;

@end

@interface FGOPresenceToImageValueTransformer : NSValueTransformer
{
    BOOL _useNavbarPresenceImages;
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
@property(nonatomic) BOOL useNavbarPresenceImages; // @synthesize useNavbarPresenceImages=_useNavbarPresenceImages;
- (id)transformedValue:(id)arg1;

@end

@interface FGOPresenceToStringValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)transformedValue:(id)arg1;

@end

@class FGOSecondaryViewController;

@interface FGOPrimaryViewController : INDockableViewController <FGOSeparatorViewController>
{
    BOOL _pictureTakerVisible;
    FGOGradientView *_shadowView;
    BOOL _extendedRosterVisible;
    FGOSecondaryViewController *_secondaryViewController;
    FGORosterViewController *_rosterViewController;
    NSResponder *_previousFirstResponder;
    NSString *_fullName;
    RACCompoundDisposable *_userInfoDisposable;
    FGOPresenceImageView *_presenceImageView;
    BTRLabel *_presenceLabel;
    BTRImageView *_separatorImageView;
    BTRView *_containerView;
    NSButton *_composeButton;
}

@property(nonatomic) __weak NSButton *composeButton; // @synthesize composeButton=_composeButton;
@property(nonatomic) __weak BTRView *containerView; // @synthesize containerView=_containerView;
@property(nonatomic) __weak BTRImageView *separatorImageView; // @synthesize separatorImageView=_separatorImageView;
@property(nonatomic) __weak BTRLabel *presenceLabel; // @synthesize presenceLabel=_presenceLabel;
@property(nonatomic) __weak FGOPresenceImageView *presenceImageView; // @synthesize presenceImageView=_presenceImageView;
@property(retain, nonatomic) RACCompoundDisposable *userInfoDisposable; // @synthesize userInfoDisposable=_userInfoDisposable;
@property(copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(retain, nonatomic) NSResponder *previousFirstResponder; // @synthesize previousFirstResponder=_previousFirstResponder;
@property(nonatomic) BOOL extendedRosterVisible; // @synthesize extendedRosterVisible=_extendedRosterVisible;
@property(readonly, nonatomic) FGORosterViewController *rosterViewController; // @synthesize rosterViewController=_rosterViewController;
@property(readonly, nonatomic) FGOSecondaryViewController *secondaryViewController; // @synthesize secondaryViewController=_secondaryViewController;
- (void)setShadowViewVisible:(BOOL)arg1;
- (void)displayUserInformation;
- (id)myVCardWithImage:(id)arg1;
- (void)pictureTakerDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)managedObjectContextObjectsDidChange:(id)arg1;
- (void)openConversationHistoryWindow:(id)arg1;
- (void)newConversation:(id)arg1;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGOPrimaryViewController;
- (void)FGOPrimaryViewController_configureViewControllers;
- (void)FGOPrimaryViewController_configurePresenceView;
- (void)loadView;

@end

// Remaining properties

@interface FGOProgressChatContentView : FGOChatContentView
{
    FGOChatProgressIndicator *_progressIndicator;
}

+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (struct NSEdgeInsets)contentInset;
@property(retain, nonatomic) FGOChatProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOProgressChatContentView;

@end

@interface FGOPseudoManagedObject_ProtocolMethodContainer : NSObject <FGOPseudoManagedObject>
{
}

+ (id)entityName;
+ (void)load;
- (void)fgo_deleteAndSave:(BOOL)arg1;
- (void)fgo_refreshAndMerge:(BOOL)arg1;
- (id)fgo_permanentObjectID;
- (id)fgo_permanentURI;
- (id)managedObjectContext;

@end

// Remaining properties

@interface FGORecentsEmojiCategory : FGOEmojiCategory
{
}

- (void)writeRecentsToUserDefaults;
- (void)addRecentCharacter:(id)arg1;
- (id)init;

@end

@interface FGORequestTableCellView : FGOLayeredTableCellView
{
    BTRLabel *_dateLabel;
}

+ (double)rowHeight;
+ (id)dateFormatter;
@property(nonatomic) __weak BTRLabel *dateLabel; // @synthesize dateLabel=_dateLabel;
- (void)awakeFromNib;

@end

@interface FGORequestTableRowView : FGOSeparatorTableRowView
{
}

- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGORequestTableRowView;

@end

@interface FGORequestsViewController : FGOTableViewController
{
}

- (void)clearNotificationForRequest:(id)arg1;
- (void)deny:(id)arg1;
- (void)accept:(id)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (void)configureRowView:(id)arg1 forRow:(long long)arg2;
- (void)configureCellView:(id)arg1 forRow:(long long)arg2;
- (Class)cellViewClassForRow:(long long)arg1;
- (Class)rowViewClassForRow:(long long)arg1;
- (void)loadView;

@end

@interface FGORosterAccountData : NSObject
{
    NSSet *_handleNames;
    FGOAccount *_account;
}

+ (id)keyPathsForValuesAffectingHandles;
@property(readonly, nonatomic) FGOAccount *account; // @synthesize account=_account;
@property(retain, nonatomic) NSSet *handleNames; // @synthesize handleNames=_handleNames;
- (id)retrieveABInformationForPersonWithVCard:(id)arg1 handleName:(id)arg2;
- (id)generateProcessedDataForPhotoData:(id)arg1;
@property(readonly, nonatomic) NSSet *handles;
- (id)mergeABInformationForPersonWithVCard:(id)arg1 handleName:(id)arg2;
- (id)savePhotoFromVCard:(id)arg1 toHandleName:(id)arg2 photoHash:(id)arg3;
- (void)updateHandleName:(id)arg1 withVCard:(id)arg2 photoHash:(id)arg3;
- (id)initWithAccount:(id)arg1;

@end

@interface FGORosterContainerView : BTRView
{
    CDUnknownBlockType _mouseEntered;
    CDUnknownBlockType _mouseExited;
    NSTrackingArea *_trackingArea;
    NSTimer *_hoverTimer;
}

@property(retain, nonatomic) NSTimer *hoverTimer; // @synthesize hoverTimer=_hoverTimer;
@property(retain, nonatomic) NSTrackingArea *trackingArea; // @synthesize trackingArea=_trackingArea;
@property(copy, nonatomic) CDUnknownBlockType mouseExited; // @synthesize mouseExited=_mouseExited;
@property(copy, nonatomic) CDUnknownBlockType mouseEntered; // @synthesize mouseEntered=_mouseEntered;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)updateTrackingAreas;

@end

@interface FGORosterData : NSObject
{
    RACSubject *_rosterDataUpdated;
    NSArray *_content;
    NSString *_searchQuery;
    NSMutableDictionary *_accountData;
    NSMutableDictionary *_signalSets;
    NSMutableDictionary *_rows;
    NSDictionary *_collapsedState;
    long long _pendingUpdateType;
    NSObject<OS_dispatch_queue> *_collapsedStateQueue;
}

@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *collapsedStateQueue; // @synthesize collapsedStateQueue=_collapsedStateQueue;
@property(nonatomic) long long pendingUpdateType; // @synthesize pendingUpdateType=_pendingUpdateType;
@property(retain, nonatomic) NSDictionary *collapsedState; // @synthesize collapsedState=_collapsedState;
@property(readonly, nonatomic) NSMutableDictionary *rows; // @synthesize rows=_rows;
@property(readonly, nonatomic) NSMutableDictionary *signalSets; // @synthesize signalSets=_signalSets;
@property(retain, nonatomic) NSMutableDictionary *accountData; // @synthesize accountData=_accountData;
@property(retain, nonatomic) NSString *searchQuery; // @synthesize searchQuery=_searchQuery;
@property(retain, nonatomic) NSArray *content; // @synthesize content=_content;
@property(readonly, nonatomic) RACSignal *rosterDataUpdated; // @synthesize rosterDataUpdated=_rosterDataUpdated;
- (id)persistenceIdentifierForSection:(id)arg1;
- (void)setCollapsed:(BOOL)arg1 forSection:(id)arg2;
- (BOOL)isSectionCollapsed:(id)arg1;
- (void)writeCollapsedStateToUserDefaults;
- (void)readCollapsedStateFromUserDefaults;
- (id)sortedRowsForUnsortedRows:(id)arg1 searchQuery:(id)arg2;
- (void)updateContentWithNewContent:(id)arg1;
- (id)contentForUnsortedRows:(id)arg1 sections:(id)arg2 searchQuery:(id)arg3;
- (id)contentSignalForHandlesTuple:(id)arg1;
- (id)propertyUpdateSignalForHandles:(id)arg1;
- (void)FGORosterData_subscribeKVOSignals;
- (unsigned long long)count;
- (id)itemAtIndex:(unsigned long long)arg1;
- (void)mutateAccountDataWithBlock:(CDUnknownBlockType)arg1;
- (void)removeDataStorageForAccounts:(id)arg1;
- (void)createDataStorageForAccounts:(id)arg1;
- (void)FGORosterData_registerNotificationObservers;
- (id)init;

@end

@interface FGORosterDisclosureTriangle : BTRView
{
    BOOL _collapsed;
    CALayer *_imageLayer;
    NSImage *_uncollapsedStateImage;
    NSImage *_collapsedStateImage;
}

@property(readonly, nonatomic) NSImage *collapsedStateImage; // @synthesize collapsedStateImage=_collapsedStateImage;
@property(readonly, nonatomic) NSImage *uncollapsedStateImage; // @synthesize uncollapsedStateImage=_uncollapsedStateImage;
@property(readonly, nonatomic) CALayer *imageLayer; // @synthesize imageLayer=_imageLayer;
@property(nonatomic) BOOL collapsed; // @synthesize collapsed=_collapsed;
- (void)setCollapsed:(BOOL)arg1 animated:(BOOL)arg2;
- (void)viewDidChangeBackingProperties;
- (void)mouseDown:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGORosterDisclosureTriangle;

@end

@interface FGORosterFooterView : BTRView
{
}

- (BOOL)isFlipped;
- (BOOL)isOpaque;
- (void)drawRect:(struct CGRect)arg1;

@end

@interface _FGORosterGroup : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)handlesSet;
- (void)setPrimitiveSpecialGroupTypeValue:(short)arg1;
- (short)primitiveSpecialGroupTypeValue;
@property short specialGroupTypeValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSSet *handles; // @dynamic handles;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) NSNumber *specialGroupType; // @dynamic specialGroupType;

@end

@interface FGORosterGroup : _FGORosterGroup
{
}

+ (id)fetchSpecialRosterGroupWithType:(long long)arg1;
+ (id)localizedNameForSpecialRosterGroupType:(long long)arg1;

@end

@interface FGORosterGroupID : NSManagedObjectID
{
}

@end

@class FGORosterHandlePictureData;

@interface _FGORosterHandle : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)handleNamesSet;
- (id)datedConversationsSet;
- (id)conversationsSet;
- (void)setPrimitiveHasPlaceholderAddressBookRecordIDValue:(BOOL)arg1;
- (BOOL)primitiveHasPlaceholderAddressBookRecordIDValue;
@property BOOL hasPlaceholderAddressBookRecordIDValue;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *addressBookRecordID; // @dynamic addressBookRecordID;
@property(retain, nonatomic) NSString *combinedName; // @dynamic combinedName;
@property(retain, nonatomic) NSSet *conversations; // @dynamic conversations;
@property(retain, nonatomic) NSSet *datedConversations; // @dynamic datedConversations;
@property(retain, nonatomic) NSString *firstName; // @dynamic firstName;
@property(retain, nonatomic) FGORosterGroup *group; // @dynamic group;
@property(retain, nonatomic) NSSet *handleNames; // @dynamic handleNames;
@property(retain, nonatomic) NSNumber *hasPlaceholderAddressBookRecordID; // @dynamic hasPlaceholderAddressBookRecordID;
@property(retain, nonatomic) NSString *lastName; // @dynamic lastName;
@property(retain, nonatomic) NSString *normalizedCombinedName; // @dynamic normalizedCombinedName;
@property(retain, nonatomic) FGORosterHandlePictureData *pictureData; // @dynamic pictureData;

@end

@interface FGORosterHandle : _FGORosterHandle <FGOPictureDataObject>
{
    RACSignal *_imageSignal;
    RACSignal *_internalPresenceSignal;
}

+ (id)keyPathsForValuesAffectingRawPictureData;
+ (id)filterPredicateForSearchQuery:(id)arg1;
+ (id)fetchHandlesForSearchQuery:(id)arg1;
+ (id)fetchHandleWithFirstName:(id)arg1 lastName:(id)arg2;
+ (id)fetchHandleWithAddressBookID:(id)arg1;
@property(retain, nonatomic) RACSignal *internalPresenceSignal; // @synthesize internalPresenceSignal=_internalPresenceSignal;
- (void)retrieveNameInformationFromAddressBook;
- (void)awakeFromFetch;
- (void)didTurnIntoFault;
- (void)openInContactsApplication;
- (void)retrieveNameInformationFromObject:(id)arg1;
- (void)assignABPersonAddressBookID:(id)arg1;
- (void)assignPlaceholderAddressBookID;
- (void)resetCombinedName;
@property(readonly, nonatomic) RACSignal *presenceSignal;
@property(readonly, nonatomic) RACSignal *imageSignal; // @synthesize imageSignal=_imageSignal;
- (void)setAddressBookRecordID:(id)arg1;
- (void)setLastName:(id)arg1;
- (void)setFirstName:(id)arg1;
- (id)generateGenericAvatarImage;
@property(retain, nonatomic) NSData *rawPictureData;
- (id)fetchHandleNamesImmediatelyWithSortDescriptors:(id)arg1;

@end

// Remaining properties

@interface FGORosterHandleID : NSManagedObjectID
{
}

@end

@class FGORosterHandleNamePictureData;

@interface _FGORosterHandleName : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)messagesSet;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGOAccount *account; // @dynamic account;
@property(retain, nonatomic) FGORosterHandle *handle; // @dynamic handle;
@property(retain, nonatomic) NSSet *messages; // @dynamic messages;
@property(retain, nonatomic) NSString *name; // @dynamic name;
@property(retain, nonatomic) FGORosterHandleNamePictureData *originalPictureData; // @dynamic originalPictureData;
@property(retain, nonatomic) FGORosterHandleNamePictureData *pictureData; // @dynamic pictureData;
@property(retain, nonatomic) NSString *pictureHash; // @dynamic pictureHash;

@end

@interface FGORosterHandleName : _FGORosterHandleName <FGOPictureDataObject>
{
}

+ (id)keyPathsForValuesAffectingSanitizedName;
+ (id)keyPathsForValuesAffectingRawOriginalPictureData;
+ (id)keyPathsForValuesAffectingRawPictureData;
@property(readonly, nonatomic) BOOL hasAddressBookID;
@property(readonly, nonatomic) NSString *sanitizedName;
@property(readonly, nonatomic) FGOIMServiceHandle *IMServiceHandle;
@property(retain, nonatomic) NSData *rawOriginalPictureData;
@property(retain, nonatomic) NSData *rawPictureData;
- (id)generateGenericAvatarImage;
- (void)awakeFromInsert;

@end

// Remaining properties

@interface FGORosterHandleNameID : NSManagedObjectID
{
}

@end

@interface _FGORosterHandleNamePictureData : FGOPictureData
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGORosterHandleName *handleName; // @dynamic handleName;
@property(retain, nonatomic) FGORosterHandleName *originalHandleName; // @dynamic originalHandleName;

@end

@interface FGORosterHandleNamePictureData : _FGORosterHandleNamePictureData
{
}

@end

@interface FGORosterHandleNamePictureDataID : FGOPictureDataID
{
}

@end

@interface _FGORosterHandlePictureData : FGOPictureData
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGORosterHandle *handle; // @dynamic handle;

@end

@interface FGORosterHandlePictureData : _FGORosterHandlePictureData
{
}

@end

@interface FGORosterHandlePictureDataID : FGOPictureDataID
{
}

@end

@interface FGORosterHandleSignalSet : NSObject
{
    RACSignal *_combinedKVOSignal;
}

+ (id)signalSetForHandle:(id)arg1;
@property(readonly, nonatomic) RACSignal *combinedKVOSignal; // @synthesize combinedKVOSignal=_combinedKVOSignal;
- (id)initWithHandle:(id)arg1;

@end

@interface FGORosterItem : MTLModel
{
    NSString *_title;
    NSString *_sortingTitle;
    FGORosterItem *_parent;
    id _representedCoreDataObject;
}

@property(retain, nonatomic) id representedCoreDataObject; // @synthesize representedCoreDataObject=_representedCoreDataObject;
@property __weak FGORosterItem *parent; // @synthesize parent=_parent;
@property(copy, nonatomic) NSString *sortingTitle; // @synthesize sortingTitle=_sortingTitle;
@property(copy, nonatomic) NSString *title; // @synthesize title=_title;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;

@end

@interface _FGORosterRequest : FGOGuardedManagedObject
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) FGOAccount *account; // @dynamic account;
@property(retain, nonatomic) NSDate *date; // @dynamic date;
@property(retain, nonatomic) NSString *handle; // @dynamic handle;

@end

@interface FGORosterRequest : _FGORosterRequest
{
}

+ (id)allRequestsFetchRequest;
+ (id)fetchCountOfAllRequests;
+ (id)fetchAllRequests;
@property(readonly, nonatomic) FGOIMServiceHandle *IMServiceHandle;
- (void)awakeFromInsert;

@end

@interface FGORosterRequestBadgeView : BTRView
{
    NSImage *_backgroundImage;
    BTRLabel *_label;
    long long _badgeCount;
}

@property(nonatomic) long long badgeCount; // @synthesize badgeCount=_badgeCount;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGORosterRequestBadgeView;

@end

@interface FGORosterRequestID : NSManagedObjectID
{
}

@end

@interface FGORosterRow : FGORosterItem
{
    NSImage *_statusImage;
    NSImage *_avatarImage;
    FGOIMServicePresence *_representedPresence;
}

+ (id)rowForHandle:(id)arg1;
@property(retain) FGOIMServicePresence *representedPresence; // @synthesize representedPresence=_representedPresence;
@property(retain) NSImage *avatarImage; // @synthesize avatarImage=_avatarImage;
@property(retain) NSImage *statusImage; // @synthesize statusImage=_statusImage;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setPresenceAndStatusImage:(id)arg1;
- (id)initWithHandle:(id)arg1;

@end

@interface FGORosterSearchField : BTRTextField
{
    RBLResizableImage *_backgroundImage;
    BTRButton *_clearButton;
    NSTextView *_fieldEditor;
}

@property(retain, nonatomic) NSTextView *fieldEditor; // @synthesize fieldEditor=_fieldEditor;
@property(readonly, nonatomic) BTRButton *clearButton; // @synthesize clearButton=_clearButton;
@property(readonly, nonatomic) RBLResizableImage *backgroundImage; // @synthesize backgroundImage=_backgroundImage;
- (void)textDidEndEditing:(id)arg1;
- (void)setFieldEditorAttributes:(id)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (struct CGRect)editingRectForProposedEditingRect:(struct CGRect)arg1;
- (struct CGRect)drawingRectForProposedDrawingRect:(struct CGRect)arg1;
- (void)cancelOperation:(id)arg1;
- (void)resetCursorRects;
- (void)commonInitForFGORosterSearchField;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FGORosterSection : FGORosterItem
{
    BOOL _collapsible;
    long long _specialType;
    long long _order;
    NSString *_serviceName;
    NSImage *_icon;
}

+ (long long)sectionTypeForGroupType:(long long)arg1;
+ (id)iconForSpecialGroupType:(long long)arg1;
+ (id)iconForMessagingService:(id)arg1;
+ (id)offlineSection;
+ (id)unifiedSection;
+ (id)sectionForAccount:(id)arg1;
+ (id)sectionForGroup:(id)arg1;
@property BOOL collapsible; // @synthesize collapsible=_collapsible;
@property(readonly, nonatomic) NSImage *icon; // @synthesize icon=_icon;
@property(readonly, copy, nonatomic) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(readonly) long long order; // @synthesize order=_order;
@property(readonly, nonatomic) long long specialType; // @synthesize specialType=_specialType;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)arg1;
- (void)setTitle:(id)arg1;
- (id)initWithAccount:(id)arg1;
- (id)initWithGroup:(id)arg1;

@end

@class FGORosterTableRowDropHighlightView;

@interface FGORosterTableRowView : FGOHoveringTableRowView
{
    FGORosterTableRowDropHighlightView *_dropHighlightView;
    BOOL _drawTopBorder;
    BOOL _drawBottomBorder;
}

@property(nonatomic) BOOL drawBottomBorder; // @synthesize drawBottomBorder=_drawBottomBorder;
@property(nonatomic) BOOL drawTopBorder; // @synthesize drawTopBorder=_drawTopBorder;
- (BOOL)isOpaque;
- (void)setTargetForDropOperation:(BOOL)arg1;
- (void)drawBackgroundInRect:(struct CGRect)arg1;

@end

@interface FGORosterTableCellRowView : FGORosterTableRowView
{
    BTRImageView *_backgroundImageView;
}

@property(retain, nonatomic) BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
- (id)currentBackgroundColor;
- (void)drawBackgroundInRect:(struct CGRect)arg1;

@end

@interface FGORosterTableCellView : FGOHoveringTableCellView
{
    BTRImageView *_statusImageView;
    FGOCircularImageView *_avatarImageView;
}

+ (double)rowHeight;
@property(nonatomic) __weak FGOCircularImageView *avatarImageView; // @synthesize avatarImageView=_avatarImageView;
@property(nonatomic) __weak BTRImageView *statusImageView; // @synthesize statusImageView=_statusImageView;
- (BOOL)isOpaque;
- (void)FGORosterTableCellView_configureBindings;
- (void)FGORosterTableCellView_configureInterface;
- (void)awakeFromNib;

@end

@interface FGORosterTableHeaderRowView : FGORosterTableRowView
{
}

- (void)drawBackgroundInRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGORosterTableHeaderRowView;

@end

@interface FGORosterTableHeaderView : FGOLayeredTableCellView
{
    BOOL _collapsed;
    CDUnknownBlockType _disclosureBlock;
    BTRImageView *_iconImageView;
    BTRImageView *_backgroundImageView;
    FGORosterDisclosureTriangle *_disclosureTriangle;
}

+ (double)rowHeight;
+ (id)backgroundImage;
@property(nonatomic) __weak FGORosterDisclosureTriangle *disclosureTriangle; // @synthesize disclosureTriangle=_disclosureTriangle;
@property(nonatomic) __weak BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(nonatomic) __weak BTRImageView *iconImageView; // @synthesize iconImageView=_iconImageView;
@property(copy, nonatomic) CDUnknownBlockType disclosureBlock; // @synthesize disclosureBlock=_disclosureBlock;
@property(nonatomic) BOOL collapsed; // @synthesize collapsed=_collapsed;
- (void)awakeFromNib;

@end

@interface FGORosterTableRowDropHighlightView : BTRView
{
}

- (void)drawRect:(struct CGRect)arg1;

@end

@interface FGORosterUpdate : NSObject
{
    long long _updateType;
    NSIndexSet *_insertedIndexes;
    NSIndexSet *_deletedIndexes;
}

+ (id)updateWithType:(long long)arg1 insertedIndexes:(id)arg2 deletedIndexes:(id)arg3;
@property(readonly, nonatomic) NSIndexSet *deletedIndexes; // @synthesize deletedIndexes=_deletedIndexes;
@property(readonly, nonatomic) NSIndexSet *insertedIndexes; // @synthesize insertedIndexes=_insertedIndexes;
@property(readonly, nonatomic) long long updateType; // @synthesize updateType=_updateType;

@end

@interface FGORosterViewController : NSViewController <FGOAddPopoverViewControllerDelegate, NSPopoverDelegate, NSTableViewDataSource, NSTableViewDelegate>
{
    FGORosterData *_data;
    NSIndexSet *_draggedIndexes;
    FGOPrimaryViewController *_primaryViewController;
    BTRTextField *_searchField;
    NSPopover *_visiblePopover;
    NSMutableSet *_requests;
    FGORosterRequestBadgeView *_rosterBadgeView;
    FGOHoveringTableView *_tableView;
    NSMenu *_tableViewMenu;
    FGOGradientView *_shadowView;
    BTRView *_footerView;
    BTRButton *_addButton;
}

@property(nonatomic) __weak BTRButton *addButton; // @synthesize addButton=_addButton;
@property(nonatomic) __weak BTRView *footerView; // @synthesize footerView=_footerView;
@property(nonatomic) __weak FGOGradientView *shadowView; // @synthesize shadowView=_shadowView;
@property(nonatomic) __weak NSMenu *tableViewMenu; // @synthesize tableViewMenu=_tableViewMenu;
@property(nonatomic) __weak FGOHoveringTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) FGORosterRequestBadgeView *rosterBadgeView; // @synthesize rosterBadgeView=_rosterBadgeView;
@property(retain, nonatomic) NSMutableSet *requests; // @synthesize requests=_requests;
@property(retain, nonatomic) NSPopover *visiblePopover; // @synthesize visiblePopover=_visiblePopover;
@property(retain, nonatomic) BTRTextField *searchField; // @synthesize searchField=_searchField;
@property(nonatomic) FGOPrimaryViewController *primaryViewController; // @synthesize primaryViewController=_primaryViewController;
- (id)contactCardMenuItemForHandle:(id)arg1;
- (id)removeMenuItemWithHandleName:(id)arg1;
- (id)removeFromFavoritesMenuItemWithHandle:(id)arg1;
- (id)addToFavoritesMenuItemWithHandle:(id)arg1;
- (void)populateTableViewMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)controlTextDidEndEditing:(id)arg1;
- (void)controlTextDidChange:(id)arg1;
- (void)tableViewSelectionDidChange:(id)arg1;
- (void)fixBordersForRowView:(id)arg1 rowIndex:(long long)arg2;
- (BOOL)isGroupRow:(long long)arg1;
- (Class)cellClassForRow:(long long)arg1;
- (BOOL)tableView:(id)arg1 shouldSelectRow:(long long)arg2;
- (double)tableView:(id)arg1 heightOfRow:(long long)arg2;
- (BOOL)tableView:(id)arg1 isGroupRow:(long long)arg2;
- (id)tableView:(id)arg1 rowViewForRow:(long long)arg2;
- (id)tableView:(id)arg1 viewForTableColumn:(id)arg2 row:(long long)arg3;
- (BOOL)tableView:(id)arg1 acceptDrop:(id)arg2 row:(long long)arg3 dropOperation:(unsigned long long)arg4;
- (unsigned long long)tableView:(id)arg1 validateDrop:(id)arg2 proposedRow:(long long)arg3 proposedDropOperation:(unsigned long long)arg4;
- (BOOL)tableView:(id)arg1 writeRowsWithIndexes:(id)arg2 toPasteboard:(id)arg3;
- (id)tableView:(id)arg1 objectValueForTableColumn:(id)arg2 row:(long long)arg3;
- (long long)numberOfRowsInTableView:(id)arg1;
- (void)popoverDidClose:(id)arg1;
- (void)addPopoverViewController:(id)arg1 didAddBuddyWithAccount:(id)arg2 handle:(id)arg3 firstName:(id)arg4 lastName:(id)arg5;
- (void)showAddBuddyPopover;
- (void)FGORosterViewController_configureTableView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGORosterViewController;
- (void)loadView;
- (void)FGORosterViewController_configureFooter;
- (void)FGORosterViewController_configureRosterRequestInterception;
- (void)FGORosterViewController_configureRosterData;

@end

@interface FGOSecondaryViewController : FGOViewController
{
    FGOChatListViewController *_chatListViewController;
    FGOConnectionsViewController *_connectionsViewController;
}

@property(readonly, nonatomic) FGOConnectionsViewController *connectionsViewController; // @synthesize connectionsViewController=_connectionsViewController;
@property(readonly, nonatomic) FGOChatListViewController *chatListViewController; // @synthesize chatListViewController=_chatListViewController;
- (void)layoutWithIntrinsicConnectionsHeight:(double)arg1;
- (void)loadView;
- (id)initWithCoder:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)commonInitForFGOSecondaryViewController;

@end

@interface FGOSecurityPrefViewController : FGOPreferencesViewController <MASPreferencesViewController>
{
}

@property(readonly, nonatomic) NSString *toolbarItemLabel;
@property(readonly, nonatomic) NSImage *toolbarItemImage;
@property(readonly, nonatomic) NSString *identifier;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) BOOL hasResizableHeight;
@property(readonly, nonatomic) BOOL hasResizableWidth;
@property(readonly) Class superclass;

@end

@interface FGOSharedImageCache : NSCache
{
}

+ (id)sharedInstance;
- (id)cacheAndReturnImageForData:(id)arg1 URI:(id)arg2;
- (id)initialImageForObject:(id)arg1;
- (void)removeImageForObject:(id)arg1;
- (id)imageSignalForObject:(id)arg1;

@end

@class FGOSheetWindowQueueItem;

@interface FGOSheetWindowQueue : NSObject
{
    NSMutableArray *_queuedItems;
    FGOSheetWindowQueueItem *_currentItem;
}

+ (id)sharedInstance;
@property(retain, nonatomic) FGOSheetWindowQueueItem *currentItem; // @synthesize currentItem=_currentItem;
- (void)sheetDidEnd:(id)arg1 returnCode:(long long)arg2 contextInfo:(void *)arg3;
- (void)popQueuedItem;
- (void)queueItem:(id)arg1;
- (void)queueSheetWindow:(id)arg1 modalForWindow:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (id)init;

@end

@interface FGOSheetWindowQueueItem : NSObject
{
    NSWindow *_sheetWindow;
    NSWindow *_parentWindow;
    CDUnknownBlockType _completionBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(readonly, nonatomic) NSWindow *parentWindow; // @synthesize parentWindow=_parentWindow;
@property(readonly, nonatomic) NSWindow *sheetWindow; // @synthesize sheetWindow=_sheetWindow;
- (id)initWithSheetWindow:(id)arg1 modalForWindow:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;

@end

@interface FGOStaticImageView : BTRImageView
{
}

- (id)actionForLayer:(id)arg1 forKey:(id)arg2;

@end

@class FGOStatusBarView;

@interface FGOStatusBarController : NSObject
{
    BOOL _handledStatusItemMouseDown;
    NSMenu *_menu;
    NSStatusItem *_statusItem;
    FGOStatusBarView *_statusView;
    FGOIncomingWindowController *_windowController;
}

@property(nonatomic) BOOL handledStatusItemMouseDown; // @synthesize handledStatusItemMouseDown=_handledStatusItemMouseDown;
@property(readonly, nonatomic) FGOIncomingWindowController *windowController; // @synthesize windowController=_windowController;
@property(readonly, nonatomic) FGOStatusBarView *statusView; // @synthesize statusView=_statusView;
@property(readonly, nonatomic) NSStatusItem *statusItem; // @synthesize statusItem=_statusItem;
@property(readonly, nonatomic) NSMenu *menu; // @synthesize menu=_menu;
- (void)menuDidEndTracking:(id)arg1;
- (void)windowDidResignKey:(id)arg1;
- (void)dealloc;
- (void)handleMouseUpOnStatusItem;
- (void)handleMouseDownOnStatusItem;
- (void)configurePopover;
- (void)configureStatusItem;
- (id)initWithMenu:(id)arg1;

@end

@interface FGOStatusBarView : NSView
{
    BOOL _highlighted;
    BOOL _composing;
    BOOL _incoming;
    NSStatusItem *_statusItem;
    CDUnknownBlockType _mouseDownBlock;
    CDUnknownBlockType _mouseUpBlock;
    NSImageView *_imageView;
}

@property(readonly, nonatomic) NSImageView *imageView; // @synthesize imageView=_imageView;
@property(copy, nonatomic) CDUnknownBlockType mouseUpBlock; // @synthesize mouseUpBlock=_mouseUpBlock;
@property(copy, nonatomic) CDUnknownBlockType mouseDownBlock; // @synthesize mouseDownBlock=_mouseDownBlock;
@property(nonatomic) BOOL incoming; // @synthesize incoming=_incoming;
@property(nonatomic, getter=isComposing) BOOL composing; // @synthesize composing=_composing;
@property(nonatomic, getter=isHighlighted) BOOL highlighted; // @synthesize highlighted=_highlighted;
@property(nonatomic) __weak NSStatusItem *statusItem; // @synthesize statusItem=_statusItem;
- (id)currentStatusBarImage;
- (void)mouseUp:(id)arg1;
- (void)mouseDown:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOStatusBarView;

@end

@interface FGOSystemIdleTimer : NSObject
{
    NSTimer *_timer;
    double _checkInterval;
    CDUnknownBlockType _block;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
@property(readonly, nonatomic) double checkInterval; // @synthesize checkInterval=_checkInterval;
- (void)dealloc;
- (id)initWithCheckInterval:(double)arg1 block:(CDUnknownBlockType)arg2;

@end

@interface FGOTextChatContentView : FGOChatContentView <FGOChatContentViewTextFinding>
{
    FGOChatAttributedTextView *_attrTextView;
}

+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (struct NSEdgeInsets)contentInset;
@property(readonly, nonatomic) FGOChatAttributedTextView *attrTextView; // @synthesize attrTextView=_attrTextView;
- (id)textFindingTextView;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithCoder:(id)arg1;
- (void)commonInitForFGOTextChatContentView;

@end

// Remaining properties

@interface FGOTimerBlockWrapper : NSObject
{
    CDUnknownBlockType _block;
}

@property(copy, nonatomic) CDUnknownBlockType block; // @synthesize block=_block;
- (void)executeBlock:(id)arg1;

@end

@interface FGOToggleSwitch : BTRControl
{
    BOOL _on;
    BOOL _mouseTrackingKnob;
    BOOL _mouseDragged;
    CALayer *_knobLayer;
    CALayer *_backgroundLayer;
    CALayer *_onLayer;
    CALayer *_offLayer;
    struct CGPoint _initialPoint;
}

@property(nonatomic) struct CGPoint initialPoint; // @synthesize initialPoint=_initialPoint;
@property(nonatomic) BOOL mouseDragged; // @synthesize mouseDragged=_mouseDragged;
@property(nonatomic) BOOL mouseTrackingKnob; // @synthesize mouseTrackingKnob=_mouseTrackingKnob;
@property(readonly, nonatomic) CALayer *offLayer; // @synthesize offLayer=_offLayer;
@property(readonly, nonatomic) CALayer *onLayer; // @synthesize onLayer=_onLayer;
@property(readonly, nonatomic) CALayer *backgroundLayer; // @synthesize backgroundLayer=_backgroundLayer;
@property(readonly, nonatomic) CALayer *knobLayer; // @synthesize knobLayer=_knobLayer;
@property(nonatomic, getter=isOn) BOOL on; // @synthesize on=_on;
- (BOOL)isFlipped;
- (double)layoutDelta;
- (double)xForRelativePosition:(double)arg1;
- (double)relativePositionForX:(double)arg1;
- (struct CGPoint)layerPointForEvent:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseDown:(id)arg1;
- (id)knobAnimationForDestinationPosition:(struct CGPoint)arg1;
- (void)moveKnobToRelativePosition:(double)arg1 animate:(BOOL)arg2;
- (void)viewDidChangeBackingProperties;
- (id)initWithFrame:(struct CGRect)arg1;

@end

@interface FGOTrafficLightsContainer : BTRView
{
    BTRButton *_closeButton;
    BTRButton *_minimizeButton;
    NSButton *_closeButtonYosemite;
    NSButton *_minimizeButtonYosemite;
    NSWindow *_trafficLightsWindow;
    double _buttonSpacing;
}

@property(nonatomic) double buttonSpacing; // @synthesize buttonSpacing=_buttonSpacing;
@property(nonatomic) NSWindow *trafficLightsWindow; // @synthesize trafficLightsWindow=_trafficLightsWindow;
- (BOOL)isFlipped;
- (id)buttonForTrafficLightType:(long long)arg1;
- (void)layoutTrafficLights;
- (void)setImage:(id)arg1 forState:(unsigned long long)arg2 ofButton:(long long)arg3;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1 window:(id)arg2;
- (void)commonInitForFGOTrafficLightsContainer;

@end

@class FGOTwitterAppAccount;

@interface FGOTwitterAPIClient : FGOJSONHTTPClient
{
    FGOTwitterAppAccount *_appAccount;
    NSArray *_userAccounts;
    ACAccountStore *_accountStore;
}

+ (id)genericErrorWithText:(id)arg1;
+ (id)tokenRequestForAppBearerToken;
+ (id)queryURLWithMethod:(id)arg1 parameters:(id)arg2;
+ (id)rateLimitExceededError;
+ (id)sharedInstance;
@property(readonly, nonatomic) ACAccountStore *accountStore; // @synthesize accountStore=_accountStore;
@property(retain, nonatomic) NSArray *userAccounts; // @synthesize userAccounts=_userAccounts;
@property(retain, nonatomic) FGOTwitterAppAccount *appAccount; // @synthesize appAccount=_appAccount;
- (id)getAuthenticatedAppAccount;
- (id)getUserAccounts;
- (id)performRateLimitedGETRequestWithMethod:(id)arg1 parameters:(id)arg2 account:(id)arg3 rateLimitMethod:(id)arg4;
- (id)performRateLimitedGETRequestWithMethod:(id)arg1 parameters:(id)arg2 rateLimitMethod:(id)arg3;
- (id)performGETRequestWithMethod:(id)arg1 parameters:(id)arg2 account:(id)arg3;
- (id)getRateLimitForMethod:(id)arg1 onAccount:(id)arg2;
- (id)getMediaImageForEntity:(id)arg1 withSize:(long long)arg2;
- (id)getTweetWithURL:(id)arg1;
- (id)getTweetWithID:(id)arg1;
- (id)init;

@end

@interface FGOTwitterAccount : MTLModel
{
    NSDictionary *_rateLimits;
}

@property(retain, nonatomic) NSDictionary *rateLimits; // @synthesize rateLimits=_rateLimits;
- (void)clearRateLimits;
- (id)rateLimitForMethod:(id)arg1;
- (void)importRateLimitsFromDictionary:(id)arg1;

@end

@interface FGOTwitterAppAccount : FGOTwitterAccount
{
    NSString *_bearerToken;
}

+ (id)appAccountWithBearerToken:(id)arg1;
@property(copy, nonatomic) NSString *bearerToken; // @synthesize bearerToken=_bearerToken;

@end

@interface FGOTwitterChatContentView : FGOChatContentView <FGOChatContentViewTextFinding>
{
    FGOChatUserHeaderView *_headerView;
    FGOChatAttributedTextView *_textView;
    FGOChatHoverImageView *_imageView;
    BTRImageView *_separatorImageView;
}

+ (struct CGSize)calculateContentSizeForMessage:(id)arg1 containerSize:(struct CGSize)arg2;
+ (struct NSEdgeInsets)contentInset;
@property(readonly, nonatomic) BTRImageView *separatorImageView; // @synthesize separatorImageView=_separatorImageView;
@property(readonly, nonatomic) FGOChatHoverImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) FGOChatAttributedTextView *textView; // @synthesize textView=_textView;
@property(readonly, nonatomic) FGOChatUserHeaderView *headerView; // @synthesize headerView=_headerView;
- (void)FGOTwitterChatContentView_configureLayout;
- (BOOL)isFlipped;
- (id)textFindingTextView;
- (void)FGOTwitterChatContentView_configureBindings;
- (void)FGOTwitterChatContentView_configureViews;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOTwitterChatContentView;

@end

// Remaining properties

@interface _FGOTwitterChatMessage : FGOChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *avatarStorageIdentifier; // @dynamic avatarStorageIdentifier;
@property(retain, nonatomic) NSString *body; // @dynamic body;
@property(retain, nonatomic) NSString *fullName; // @dynamic fullName;
@property(retain, nonatomic) NSString *htmlBody; // @dynamic htmlBody;
@property(retain, nonatomic) NSString *pictureStorageIdentifier; // @dynamic pictureStorageIdentifier;
@property(retain, nonatomic) NSString *thumbnailStorageIdentifier; // @dynamic thumbnailStorageIdentifier;
@property(retain, nonatomic) NSDate *tweetDate; // @dynamic tweetDate;
@property(retain, nonatomic) NSString *urlString; // @dynamic urlString;
@property(retain, nonatomic) NSString *username; // @dynamic username;

@end

@interface FGOTwitterChatMessage : _FGOTwitterChatMessage <FGOChatMessageTextFinding>
{
}

+ (id)humanReadableType;
+ (id)imageForStorageIdentifier:(id)arg1;
+ (id)keyPathsForValuesAffectingPictureFileURL;
+ (id)keyPathsForValuesAffectingThumbnailImage;
+ (id)keyPathsForValuesAffectingPictureImage;
+ (id)keyPathsForValuesAffectingAvatarImage;
+ (id)keyPathsForValuesAffectingURL;
+ (id)keyPathsForValuesAffectingAttributedText;
+ (id)fileDeletionKeypaths;
- (id)thumbnailDownloadSignalWithThumbURL:(id)arg1 mediaURL:(id)arg2;
- (id)pictureDownloadSignalWithPictureURL:(id)arg1 mediaURL:(id)arg2;
- (void)beginTwitterDownload;
- (id)textFindingString;
- (id)userNotification;
@property(readonly, nonatomic) NSURL *pictureFileURL;
@property(readonly, nonatomic) NSImage *thumbnailImage;
@property(readonly, nonatomic) NSImage *pictureImage;
@property(readonly, nonatomic) NSImage *avatarImage;
@property(readonly, nonatomic) NSURL *URL;
@property(retain, nonatomic) NSAttributedString *attributedText;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;
- (void)awakeFromInsert;

@end

// Remaining properties

@interface FGOTwitterChatMessageID : FGOChatMessageID
{
}

@end

@interface FGOTwitterEntity : MTLModel <MTLJSONSerializing>
{
    NSValue *_rangeValue;
}

+ (id)keyPathsForValuesAffectingRange;
+ (id)rangeValueJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
@property(retain, nonatomic) NSValue *rangeValue; // @synthesize rangeValue=_rangeValue;
@property(readonly, nonatomic) struct _NSRange range;

@end

@interface FGOTwitterHashtagEntity : FGOTwitterEntity <MTLJSONSerializing>
{
    NSString *_text;
}

+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;

@end

@interface FGOTwitterURLEntity : FGOTwitterEntity <MTLJSONSerializing>
{
    NSString *_text;
    NSURL *_expandedURL;
    NSURL *_shortenedURL;
}

+ (id)JSONTransformerForKey:(id)arg1;
+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, nonatomic) NSURL *shortenedURL; // @synthesize shortenedURL=_shortenedURL;
@property(readonly, nonatomic) NSURL *expandedURL; // @synthesize expandedURL=_expandedURL;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;

@end

@interface FGOTwitterMediaEntity : FGOTwitterURLEntity <MTLJSONSerializing>
{
    NSURL *_mediaURL;
    NSURL *_largeMediaURL;
    NSURL *_mediumMediaURL;
    NSURL *_smallMediaURL;
    NSURL *_thumbMediaURL;
}

+ (id)mediaURLJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
@property(retain, nonatomic) NSURL *thumbMediaURL; // @synthesize thumbMediaURL=_thumbMediaURL;
@property(retain, nonatomic) NSURL *smallMediaURL; // @synthesize smallMediaURL=_smallMediaURL;
@property(retain, nonatomic) NSURL *mediumMediaURL; // @synthesize mediumMediaURL=_mediumMediaURL;
@property(retain, nonatomic) NSURL *largeMediaURL; // @synthesize largeMediaURL=_largeMediaURL;
@property(readonly, nonatomic) NSURL *mediaURL; // @synthesize mediaURL=_mediaURL;
- (id)initWithDictionary:(id)arg1 error:(id *)arg2;

@end

@interface FGOTwitterMentionEntity : FGOTwitterEntity <MTLJSONSerializing>
{
    NSString *_username;
    NSString *_fullName;
}

+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;

@end

@interface FGOTwitterRateLimit : MTLModel <MTLJSONSerializing>
{
    FGOTwitterAccount *_account;
    NSString *_method;
    unsigned long long _remainingRequests;
    unsigned long long _requestLimit;
    NSDate *_resetDate;
}

+ (id)resetDateJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, nonatomic) NSDate *resetDate; // @synthesize resetDate=_resetDate;
@property(readonly, nonatomic) unsigned long long requestLimit; // @synthesize requestLimit=_requestLimit;
@property(nonatomic) unsigned long long remainingRequests; // @synthesize remainingRequests=_remainingRequests;
@property(readonly, copy, nonatomic) NSString *method; // @synthesize method=_method;
@property(nonatomic) __weak FGOTwitterAccount *account; // @synthesize account=_account;
- (id)description;
- (void)decrementRemainingRequests;

@end

@interface FGOTwitterSymbolEntity : FGOTwitterEntity <MTLJSONSerializing>
{
    NSString *_text;
}

+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;

@end

@class FGOTwitterUser;

@interface FGOTwitterTweet : MTLModel <MTLJSONSerializing>
{
    NSDate *_createdAt;
    FGOTwitterUser *_user;
    NSString *_text;
    NSArray *_hashtags;
    NSArray *_URLs;
    NSArray *_media;
    NSArray *_mentions;
    NSArray *_symbols;
    NSAttributedString *_attributedText;
}

+ (id)twitterDateFormatter;
+ (id)entityObjectsWithDictionaries:(id)arg1 class:(Class)arg2;
+ (id)userJSONTransformer;
+ (id)symbolsJSONTransformer;
+ (id)mentionsJSONTransformer;
+ (id)mediaJSONTransformer;
+ (id)URLsJSONTransformer;
+ (id)hashtagsJSONTransformer;
+ (id)createdAtJSONTransformer;
+ (id)textJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
@property(retain, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(readonly, nonatomic) NSArray *symbols; // @synthesize symbols=_symbols;
@property(readonly, nonatomic) NSArray *mentions; // @synthesize mentions=_mentions;
@property(readonly, nonatomic) NSArray *media; // @synthesize media=_media;
@property(readonly, nonatomic) NSArray *URLs; // @synthesize URLs=_URLs;
@property(readonly, nonatomic) NSArray *hashtags; // @synthesize hashtags=_hashtags;
@property(readonly, copy, nonatomic) NSString *text; // @synthesize text=_text;
@property(readonly, nonatomic) FGOTwitterUser *user; // @synthesize user=_user;
@property(readonly, nonatomic) NSDate *createdAt; // @synthesize createdAt=_createdAt;
- (void)generateAttributedText;
- (id)initWithDictionary:(id)arg1 error:(id *)arg2;

@end

@interface FGOTwitterUser : MTLModel <MTLJSONSerializing>
{
    NSString *_username;
    NSString *_fullName;
    NSURL *_profilePictureURL;
}

+ (id)usernameJSONTransformer;
+ (id)profilePictureURLJSONTransformer;
+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, nonatomic) NSURL *profilePictureURL; // @synthesize profilePictureURL=_profilePictureURL;
@property(readonly, copy, nonatomic) NSString *fullName; // @synthesize fullName=_fullName;
@property(readonly, copy, nonatomic) NSString *username; // @synthesize username=_username;

@end

@interface FGOTwitterUserAccount : FGOTwitterAccount
{
    ACAccount *_ACAccount;
}

+ (id)userAccountWithACAccount:(id)arg1;
@property(retain, nonatomic) ACAccount *ACAccount; // @synthesize ACAccount=_ACAccount;

@end

@interface FGOUserInformation : NSObject
{
}

+ (id)fetchPhoto;
+ (id)fetchFullName;

@end

@interface FGOUserNotificationCenter : NSObject <NSUserNotificationCenterDelegate>
{
    RACSubject *_deliveredNotifications;
    RACSubject *_activatedNotifications;
}

+ (id)sharedInstance;
@property(readonly, nonatomic) RACSignal *activatedNotifications; // @synthesize activatedNotifications=_activatedNotifications;
@property(readonly, nonatomic) RACSignal *deliveredNotifications; // @synthesize deliveredNotifications=_deliveredNotifications;
- (void)userNotificationCenter:(id)arg1 didActivateNotification:(id)arg2;
- (void)userNotificationCenter:(id)arg1 didDeliverNotification:(id)arg2;
- (void)removeDeliveredNotificationsForMessages:(id)arg1;
- (id)init;

@end

// Remaining properties

@interface FGOVideoChatContentView : FGOMediaChatContentView
{
}

- (id)actionButtonInset;
- (void)openFile;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)commonInitForFGOVideoChatContentView;

@end

@interface _FGOVideoChatMessage : FGOFileChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

@end

@interface FGOVideoChatMessage : _FGOVideoChatMessage <FGOVideoChatMessage>
{
}

- (Class)viewClass;

// Remaining properties
@property(readonly, nonatomic) NSURL *localVideoURL;

@end

@interface FGOVideoChatMessageID : FGOFileChatMessageID
{
}

@end

@interface FGOVideoChatMessage_ProtocolMethodContainer : NSObject <FGOVideoChatMessage>
{
}

+ (id)keyPathsForValuesAffectingLocalVideoURL;
+ (void)load;
@property(readonly, nonatomic) NSURL *localVideoURL; // @dynamic localVideoURL;
- (id)thumbnailImage;
- (id)retinaThumbnailImage;

@end

@interface FGOWelcomeCard : NSObject
{
    Class _viewControllerClass;
    NSImage *_cardImage;
    NSString *_cardTitle;
    NSString *_cardDescription;
}

+ (id)cardWithImage:(id)arg1 title:(id)arg2 description:(id)arg3;
+ (id)cardWithViewControllerClass:(Class)arg1;
@property(readonly, copy, nonatomic) NSString *cardDescription; // @synthesize cardDescription=_cardDescription;
@property(readonly, copy, nonatomic) NSString *cardTitle; // @synthesize cardTitle=_cardTitle;
@property(readonly, nonatomic) NSImage *cardImage; // @synthesize cardImage=_cardImage;
@property(readonly, nonatomic) Class viewControllerClass; // @synthesize viewControllerClass=_viewControllerClass;
@property(readonly, copy, nonatomic) NSString *identifier;
- (id)newViewController;

@end

@interface FGOWelcomeNextButton : FGOHelveticaButton
{
}

- (struct CGRect)labelFrame;

@end

@interface FGOWelcomeWindowController : FGOWindowController <NSWindowDelegate>
{
    NSDictionary *_cardMap;
    FGOTrafficLightsContainer *_trafficLightsContainer;
    BTRImageView *_backgroundImageView;
    NSPageController *_pageController;
    FGOWelcomeNextButton *_nextButton;
    FGOPageControl *_pageControl;
}

@property(nonatomic) __weak FGOPageControl *pageControl; // @synthesize pageControl=_pageControl;
@property(nonatomic) __weak FGOWelcomeNextButton *nextButton; // @synthesize nextButton=_nextButton;
@property(retain, nonatomic) NSPageController *pageController; // @synthesize pageController=_pageController;
@property(nonatomic) __weak BTRImageView *backgroundImageView; // @synthesize backgroundImageView=_backgroundImageView;
@property(nonatomic) __weak FGOTrafficLightsContainer *trafficLightsContainer; // @synthesize trafficLightsContainer=_trafficLightsContainer;
@property(readonly, nonatomic) NSDictionary *cardMap; // @synthesize cardMap=_cardMap;
- (struct CGRect)window:(id)arg1 willPositionSheet:(id)arg2 usingRect:(struct CGRect)arg3;
- (void)pageControllerDidEndLiveTransition:(id)arg1;
- (id)pageController:(id)arg1 viewControllerForIdentifier:(id)arg2;
- (id)pageController:(id)arg1 identifierForObject:(id)arg2;
- (void)FGOWelcomeWindowController_configureButtons;
- (void)FGOWelcomeWindowController_configureContentView;
- (void)windowDidResignKey:(id)arg1;
- (void)windowDidBecomeKey:(id)arg1;
- (void)FGOWelcomeWindowController_configureWindow;
- (void)windowDidLoad;

@end

// Remaining properties

@interface FGOWindowColors : NSObject
{
    NSColor *_topColor;
    NSColor *_bottomColor;
    NSColor *_inactiveTopColor;
    NSColor *_inactiveBottomColor;
    NSColor *_highlightColor;
    NSColor *_baselineColor;
    NSColor *_shadowColor;
}

+ (id)yosemiteColors;
+ (id)mavericksColors;
@property(readonly, nonatomic) NSColor *shadowColor; // @synthesize shadowColor=_shadowColor;
@property(readonly, nonatomic) NSColor *baselineColor; // @synthesize baselineColor=_baselineColor;
@property(readonly, nonatomic) NSColor *highlightColor; // @synthesize highlightColor=_highlightColor;
@property(readonly, nonatomic) NSColor *inactiveBottomColor; // @synthesize inactiveBottomColor=_inactiveBottomColor;
@property(readonly, nonatomic) NSColor *inactiveTopColor; // @synthesize inactiveTopColor=_inactiveTopColor;
@property(readonly, nonatomic) NSColor *bottomColor; // @synthesize bottomColor=_bottomColor;
@property(readonly, nonatomic) NSColor *topColor; // @synthesize topColor=_topColor;

@end

@interface FGOXMPPCapabilitiesValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXMPPClient : NSObject <XMPPvCardTempModuleStorage, FGOIMServiceClient>
{
    XMPPStream *_stream;
    XMPPRoster *_roster;
    XMPPvCardTempModule *_vCardTemp;
    XMPPAutoPing *_autoPing;
    XMPPCapabilities *_capabilities;
    XMPPSoftwareVersion *_softwareVersion;
    XMPPReconnect *_reconnect;
    XMPPSIFileTransfer *_fileTransfer;
    XMPPFacebookOwnMessage *_facebookOwnMessage;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    NSMutableDictionary *_subjects;
    NSMutableDictionary *_userMap;
    NSMutableDictionary *_transferMap;
    struct {
        unsigned int didDisconnectWithError:1;
        unsigned int didReceiveError:1;
        unsigned int didReceivePresence:1;
        unsigned int didUpdateRoster:1;
        unsigned int didReceiveMessage:1;
        unsigned int didReceiveAuthorizationRequestFromHandle:1;
        unsigned int didConnect:1;
        unsigned int didReceiveOfferForTransfer:1;
    } _delegateFlags;
    FGOIMServiceAccount *_account;
    id <FGOIMServiceClientDelegate> _delegate;
}

+ (id)fileTransferSubjectKeyForTransfer:(id)arg1;
+ (id)capabilitiesSubjectKeyForJID:(id)arg1;
+ (id)vCardSubjectKeyForJID:(id)arg1;
+ (id)featureElementForVar:(id)arg1;
+ (id)xmppRegisterGenericErrorWithElement:(id)arg1;
+ (id)xmppRegisterNotAcceptableError;
+ (id)xmppRegisterConflictError;
+ (id)fileTransferNotFoundError;
@property(nonatomic) id <FGOIMServiceClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) FGOIMServiceAccount *account; // @synthesize account=_account;
- (BOOL)streamLoggingEnabled;
- (void)removeFileTransferForIdentifier:(id)arg1;
- (void)recordFileTransfer:(id)arg1;
- (id)fileTransferForIdentifier:(id)arg1;
- (void)removeSubjectForKey:(id)arg1;
- (id)addSubjectForKey:(id)arg1;
- (id)subjectForKey:(id)arg1;
- (void)sendNext:(id)arg1 forSubjectWithKey:(id)arg2;
- (void)sendNext:(id)arg1 andCompleteForSubjectWithKey:(id)arg2;
- (void)sendError:(id)arg1 forSubjectWithKey:(id)arg2;
- (void)xmppFacebookOwnMessage:(id)arg1 receivedSentMessage:(id)arg2;
- (void)xmppSIFileTransfer:(id)arg1 receivedOfferForTransfer:(id)arg2;
- (void)xmppSIFileTransfer:(id)arg1 transferDidEnd:(id)arg2;
- (void)xmppSIFileTransfer:(id)arg1 tranferFailed:(id)arg2 withError:(id)arg3;
- (void)xmppSIFileTransfer:(id)arg1 transferUpdatedProgress:(id)arg2;
- (id)applicationIdentityElement;
- (void)xmppCapabilities:(id)arg1 collectingMyCapabilities:(id)arg2;
- (void)xmppCapabilities:(id)arg1 didDiscoverCapabilities:(id)arg2 forJID:(id)arg3;
- (void)xmppvCardTempModuleDidUpdateMyvCard:(id)arg1;
- (BOOL)shouldFetchvCardTempForJID:(id)arg1 xmppStream:(id)arg2;
- (id)myvCardTempForXMPPStream:(id)arg1;
- (void)setvCardTemp:(id)arg1 forJID:(id)arg2 xmppStream:(id)arg3;
- (id)vCardTempForJID:(id)arg1 xmppStream:(id)arg2;
- (BOOL)configureWithParent:(id)arg1 queue:(id)arg2;
- (void)xmppRosterDidChange:(id)arg1;
- (void)xmppRoster:(id)arg1 didReceivePresenceSubscriptionRequest:(id)arg2;
- (void)xmppStream:(id)arg1 didNotRegister:(id)arg2;
- (void)xmppStreamDidRegister:(id)arg1;
- (void)xmppStream:(id)arg1 willSecureWithSettings:(id)arg2;
- (void)xmppStream:(id)arg1 didSendMessage:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveMessage:(id)arg2;
- (id)xmppStream:(id)arg1 willReceiveMessage:(id)arg2;
- (void)xmppStream:(id)arg1 didSendPresence:(id)arg2;
- (void)xmppStream:(id)arg1 didReceivePresence:(id)arg2;
- (void)xmppStreamDidConnect:(id)arg1;
- (void)xmppStreamDidSecure:(id)arg1;
- (void)xmppStreamDidStartNegotiation:(id)arg1;
- (void)xmppStream:(id)arg1 socketDidConnect:(id)arg2;
- (void)xmppStream:(id)arg1 didNotAuthenticate:(id)arg2;
- (void)xmppStreamDidAuthenticate:(id)arg1;
- (void)xmppStreamDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)xmppStream:(id)arg1 didReceiveError:(id)arg2;
- (id)registerWithPassword:(id)arg1;
@property(readonly, nonatomic) BOOL supportsRegistration;
- (id)rejectOfferForFileTransfer:(id)arg1;
- (id)acceptOfferForFileTransfer:(id)arg1;
- (id)rejectAuthorizationRequestFromHandle:(id)arg1;
- (id)acceptAuthorizationRequestFromHandle:(id)arg1;
- (id)removeHandle:(id)arg1;
- (id)addHandle:(id)arg1;
- (id)sendOfferForFileTransfer:(id)arg1;
- (id)retrieveCapabilitiesForHandle:(id)arg1;
- (id)sendMessage:(id)arg1;
- (id)retrieveAccountVCard;
- (id)retrieveVCardForHandle:(id)arg1;
- (id)updateAccountVCard:(id)arg1;
- (id)updatePresence:(id)arg1;
@property(readonly, nonatomic, getter=isSecure) BOOL secure;
@property(readonly, nonatomic, getter=isDisconnected) BOOL disconnected;
@property(readonly, nonatomic, getter=isConnecting) BOOL connecting;
@property(readonly, nonatomic, getter=isConnected) BOOL connected;
- (id)logout;
- (id)authenticate;
- (id)connect;
- (id)login;
@property(readonly, copy) NSString *description;
- (void)configureXMPPFacebookOwnMessage;
- (void)configureXMPPSIFileTransfer;
- (void)configureXMPPSoftwareVersion;
- (void)configureXMPPCapabilities;
- (void)configureXMPPAutoPing;
- (void)configureXMPPvCard;
- (void)configureXMPPRoster;
- (void)configureXMPPStream;
- (id)initWithAccount:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

@interface FGOXMPPEditPriorityWindowController : FGOWindowController
{
    struct {
        unsigned int didEditPriority:1;
        unsigned int didCancel:1;
    } _delegateFlags;
    FGOAccount *_account;
    id <FGOXMPPEditPriorityWindowControllerDelegate> _delegate;
    long long _presencePriority;
}

@property(nonatomic) long long presencePriority; // @synthesize presencePriority=_presencePriority;
@property(nonatomic) id <FGOXMPPEditPriorityWindowControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) FGOAccount *account; // @synthesize account=_account;
- (void)cancel:(id)arg1;
- (void)save:(id)arg1;
- (void)awakeFromNib;
- (id)initWithAccount:(id)arg1;

@end

@interface FGOXMPPJIDValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXMPPLoginRegisterWindowController : FGOWindowController <NSTabViewDelegate>
{
    struct {
        unsigned int loginSuccessfulWithKey:1;
        unsigned int didCancel:1;
    } _delegateFlags;
    BOOL _showingAdvanced;
    id <FGOXMPPLoginRegisterDelegate> _delegate;
    FGOXMPPClient *_client;
    NSTabView *_tabView;
    NSView *_fieldView;
    NSTextField *_JIDField;
    NSSecureTextField *_passwordField;
    NSTextField *_confirmPasswordLabel;
    NSSecureTextField *_confirmPasswordField;
    NSButton *_loginButton;
    NSButton *_registerButton;
    NSProgressIndicator *_progressIndicator;
    NSTextField *_addressField;
    NSTextField *_portField;
}

@property(nonatomic) BOOL showingAdvanced; // @synthesize showingAdvanced=_showingAdvanced;
@property(nonatomic) __weak NSTextField *portField; // @synthesize portField=_portField;
@property(nonatomic) __weak NSTextField *addressField; // @synthesize addressField=_addressField;
@property(nonatomic) __weak NSProgressIndicator *progressIndicator; // @synthesize progressIndicator=_progressIndicator;
@property(nonatomic) __weak NSButton *registerButton; // @synthesize registerButton=_registerButton;
@property(nonatomic) __weak NSButton *loginButton; // @synthesize loginButton=_loginButton;
@property(nonatomic) __weak NSSecureTextField *confirmPasswordField; // @synthesize confirmPasswordField=_confirmPasswordField;
@property(nonatomic) __weak NSTextField *confirmPasswordLabel; // @synthesize confirmPasswordLabel=_confirmPasswordLabel;
@property(nonatomic) __weak NSSecureTextField *passwordField; // @synthesize passwordField=_passwordField;
@property(nonatomic) __weak NSTextField *JIDField; // @synthesize JIDField=_JIDField;
@property(retain, nonatomic) NSView *fieldView; // @synthesize fieldView=_fieldView;
@property(nonatomic) __weak NSTabView *tabView; // @synthesize tabView=_tabView;
@property(retain, nonatomic) FGOXMPPClient *client; // @synthesize client=_client;
@property(nonatomic) id <FGOXMPPLoginRegisterDelegate> delegate; // @synthesize delegate=_delegate;
- (void)subscribeClientSignal:(id)arg1 account:(id)arg2;
- (unsigned long long)runRegisterAlertModalForJID:(id)arg1;
- (unsigned long long)runSSLAlertModal;
- (id)newClientForEnteredCredentials;
- (void)advanced:(id)arg1;
- (void)cancel:(id)arg1;
- (void)register:(id)arg1;
- (void)login:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabViewItem:(id)arg2;
- (void)awakeFromNib;

@end

// Remaining properties

@interface FGOXMPPMessageValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXMPPOAuth2Provider : FGOOAuth2Provider
{
}

+ (Class)authenticationWindowClass;
+ (id)serviceName;
- (id)authorizationCodeByParsingRedirect:(id)arg1 state:(id *)arg2 error:(id *)arg3;
- (id)requestKeyForRefreshToken:(id)arg1;
- (id)requestKeyForAuthorizationCode:(id)arg1;

@end

@interface FGOXMPPPresenceValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXMPPSIFileTransferValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXMPPUserValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXMPPvCardValueTransformer : NSValueTransformer
{
}

+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)load;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface FGOXPCFileTransferCredentials : MTLModel
{
    NSString *_email;
    NSString *_password;
}

+ (void)removeSavedCredentialsForServiceName:(id)arg1;
+ (BOOL)hasSavedCredentialsForServiceName:(id)arg1;
+ (id)savedCredentialsForServiceName:(id)arg1;
+ (id)credentialsWithEmail:(id)arg1 password:(id)arg2;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *email; // @synthesize email=_email;
- (void)saveForServiceName:(id)arg1;
- (id)description;

@end

@interface FGOYouTubeAPIClient : FGOJSONHTTPClient
{
}

- (id)getVideoWithURL:(id)arg1;
- (id)init;

@end

@interface _FGOYouTubeChatMessage : FGOImageChatMessage
{
}

+ (id)keyPathsForValuesAffectingValueForKey:(id)arg1;
+ (id)entityInManagedObjectContext:(id)arg1;
+ (id)entityName;
+ (id)insertInManagedObjectContext:(id)arg1;
- (id)objectID;

// Remaining properties
@property(retain, nonatomic) NSString *authorName; // @dynamic authorName;
@property(retain, nonatomic) NSString *authorURLString; // @dynamic authorURLString;
@property(retain, nonatomic) NSString *title; // @dynamic title;

@end

@interface FGOYouTubeChatMessage : _FGOYouTubeChatMessage <FGOVideoChatMessage>
{
}

+ (id)keyPathsForValuesAffectingLocalVideoURL;
+ (id)humanReadableType;
@property(readonly, nonatomic) NSURL *localVideoURL;
- (void)beginYouTubeDownload;
- (id)userNotification;
- (id)URLHighlightedImage;
- (id)URLImage;
- (void)setAttributedString:(id)arg1;
- (Class)viewClass;
- (void)awakeFromInsert;

@end

@interface FGOYouTubeChatMessageID : FGOImageChatMessageID
{
}

@end

@interface FGOYouTubeVideo : MTLModel <MTLJSONSerializing>
{
    NSString *_title;
    NSURL *_thumbnailURL;
    NSString *_authorName;
    NSURL *_authorURL;
}

+ (id)JSONTransformerForKey:(id)arg1;
+ (id)JSONKeyPathsByPropertyKey;
@property(readonly, nonatomic) NSURL *authorURL; // @synthesize authorURL=_authorURL;
@property(readonly, copy, nonatomic) NSString *authorName; // @synthesize authorName=_authorName;
@property(readonly, nonatomic) NSURL *thumbnailURL; // @synthesize thumbnailURL=_thumbnailURL;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;

@end

@interface FXKeychain : NSObject
{
    NSString *_service;
    NSString *_accessGroup;
}

+ (id)defaultKeychain;
@property(readonly, copy, nonatomic) NSString *accessGroup; // @synthesize accessGroup=_accessGroup;
@property(readonly, copy, nonatomic) NSString *service; // @synthesize service=_service;
- (id)objectForKeyedSubscript:(id)arg1;
- (id)objectForKey:(id)arg1;
- (BOOL)removeObjectForKey:(id)arg1;
- (BOOL)setObject:(id)arg1 forKeyedSubscript:(id)arg2;
- (BOOL)setObject:(id)arg1 forKey:(id)arg2;
- (id)dataForKey:(id)arg1;
- (id)initWithService:(id)arg1 accessGroup:(id)arg2;
- (id)init;

@end

@interface INDAttributeRange : NSObject
{
    NSString *_attribute;
    id _value;
    struct _NSRange _range;
}

@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, nonatomic) id value; // @synthesize value=_value;
@property(readonly, copy, nonatomic) NSString *attribute; // @synthesize attribute=_attribute;
- (id)initWithAttribute:(id)arg1 value:(id)arg2 range:(struct _NSRange)arg3;

@end

@class INDTextViewSelectionSession;

@interface INDSequentialTextSelectionManager : NSResponder
{
    BOOL _firstResponder;
    NSMutableDictionary *_textViews;
    NSMutableOrderedSet *_sortedTextViews;
    INDTextViewSelectionSession *_currentSession;
    NSAttributedString *_cachedAttributedText;
    id _eventMonitor;
}

@property(nonatomic, getter=isFirstResponder) BOOL firstResponder; // @synthesize firstResponder=_firstResponder;
@property(retain, nonatomic) id eventMonitor; // @synthesize eventMonitor=_eventMonitor;
@property(retain, nonatomic) NSAttributedString *cachedAttributedText; // @synthesize cachedAttributedText=_cachedAttributedText;
@property(retain, nonatomic) INDTextViewSelectionSession *currentSession; // @synthesize currentSession=_currentSession;
@property(readonly, nonatomic) NSMutableOrderedSet *sortedTextViews; // @synthesize sortedTextViews=_sortedTextViews;
@property(readonly, nonatomic) NSMutableDictionary *textViews; // @synthesize textViews=_textViews;
- (void)unregisterAllTextViews;
- (void)unregisterTextView:(id)arg1;
- (void)sortTextViews;
- (CDUnknownBlockType)textViewComparator;
- (void)registerTextView:(id)arg1 withUniqueIdentifier:(id)arg2 transformationBlock:(CDUnknownBlockType)arg3;
- (void)registerTextView:(id)arg1 withUniqueIdentifier:(id)arg2;
- (id)buildAttributedStringForCurrentSession;
- (void)endSession;
- (void)processCompleteSelectionsForTargetTextView:(id)arg1 affinity:(unsigned long long)arg2;
- (void)setSelectionRangeForTextView:(id)arg1 withRange:(struct _NSRange)arg2;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)rehighlightSelectedRangesAsActive:(BOOL)arg1;
- (void)share:(id)arg1;
- (id)menuForEvent:(id)arg1;
- (id)buildSharingMenu;
- (void)copy:(id)arg1;
- (id)validTextViewForEvent:(id)arg1;
- (id)addLocalEventMonitor;
- (BOOL)handleRightMouseDown:(id)arg1;
- (BOOL)handleLeftMouseDragged:(id)arg1;
- (BOOL)handleLeftMouseUp:(id)arg1;
- (BOOL)handleLeftMouseDown:(id)arg1;
- (void)dealloc;
- (id)init;

@end

@interface INDTextViewMetadata : NSObject
{
    NSTextView *_textView;
    CDUnknownBlockType _transformationBlock;
}

@property(readonly, copy, nonatomic) CDUnknownBlockType transformationBlock; // @synthesize transformationBlock=_transformationBlock;
@property(readonly, nonatomic) NSTextView *textView; // @synthesize textView=_textView;
- (id)initWithTextView:(id)arg1 transformationBlock:(CDUnknownBlockType)arg2;

@end

@interface INDTextViewSelectionRange : NSObject
{
    NSString *_textViewIdentifier;
    NSAttributedString *_attributedText;
    struct _NSRange _range;
}

@property(readonly, copy, nonatomic) NSAttributedString *attributedText; // @synthesize attributedText=_attributedText;
@property(readonly, nonatomic) struct _NSRange range; // @synthesize range=_range;
@property(readonly, copy, nonatomic) NSString *textViewIdentifier; // @synthesize textViewIdentifier=_textViewIdentifier;
- (id)initWithTextView:(id)arg1 selectedRange:(struct _NSRange)arg2;

@end

@interface INDTextViewSelectionSession : NSObject
{
    NSMutableDictionary *_selectionRanges;
    NSString *_textViewIdentifier;
    unsigned long long _characterIndex;
    struct CGPoint _windowPoint;
}

@property(nonatomic) struct CGPoint windowPoint; // @synthesize windowPoint=_windowPoint;
@property(readonly, nonatomic) unsigned long long characterIndex; // @synthesize characterIndex=_characterIndex;
@property(readonly, copy, nonatomic) NSString *textViewIdentifier; // @synthesize textViewIdentifier=_textViewIdentifier;
@property(readonly, nonatomic) NSDictionary *selectionRanges; // @synthesize selectionRanges=_selectionRanges;
- (void)removeSelectionRangeForTextView:(id)arg1;
- (void)addSelectionRange:(id)arg1;
- (id)initWithTextView:(id)arg1 event:(id)arg2;

@end

@interface JBDiffResult : NSObject
{
    NSIndexSet *_deletedIndexes;
    NSIndexSet *_insertedIndexes;
}

@property(copy, nonatomic) NSIndexSet *insertedIndexes; // @synthesize insertedIndexes=_insertedIndexes;
@property(copy, nonatomic) NSIndexSet *deletedIndexes; // @synthesize deletedIndexes=_deletedIndexes;

@end

@interface JNWSpringAnimation : CAKeyframeAnimation
{
    BOOL _needsRecalculation;
    double _stiffness;
    double _damping;
    double _mass;
    id _fromValue;
    id _toValue;
    NSArray *_interpolatedValues;
}

+ (id)animationWithKeyPath:(id)arg1;
@property(nonatomic) BOOL needsRecalculation; // @synthesize needsRecalculation=_needsRecalculation;
@property(copy, nonatomic) NSArray *interpolatedValues; // @synthesize interpolatedValues=_interpolatedValues;
@property(retain, nonatomic) id toValue; // @synthesize toValue=_toValue;
@property(retain, nonatomic) id fromValue; // @synthesize fromValue=_fromValue;
@property(nonatomic) double mass; // @synthesize mass=_mass;
@property(nonatomic) double damping; // @synthesize damping=_damping;
@property(nonatomic) double stiffness; // @synthesize stiffness=_stiffness;
- (id)description;
- (id)valuesFromNumbers:(id)arg1 toNumbers:(id)arg2 map:(CDUnknownBlockType)arg3;
- (void)calculateInterpolatedValues;
@property(readonly, nonatomic) double duration;
- (id)values;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)init;

@end

@interface MTLModel (FGODictionaryAdditions)
@property(readonly, nonatomic) NSDictionary *fgo_dictionaryValueWithoutNSNull;
@end

@interface MTLObserverLifecycleTracker : NSObject
{
    id _blockObserver;
}

@property(readonly, nonatomic) id blockObserver; // @synthesize blockObserver=_blockObserver;
- (void)dealloc;
- (id)initWithBlockObserver:(id)arg1;

@end

@interface NSAlert (FGOBlocks)
- (void)fgo_beginSheetModalForWindow:(id)arg1 completion:(CDUnknownBlockType)arg2;
@end

@interface NSArray (Diff)
- (id)diffWithArray:(id)arg1;
@end

@interface NSArray (FGODeepCopying)
- (id)fgo_deepCopy;
@end

@interface NSArray (FGOEnumeration)
- (unsigned long long)fgo_reverseIndexOfObject:(id)arg1;
@end

@interface NSArray (MTLHigherOrderAdditions)
- (BOOL)mtl_anyObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_objectWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)mtl_objectPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_mapWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_mapUsingBlock:(CDUnknownBlockType)arg1;
- (id)mtl_foldRightWithValue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_foldLeftWithValue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterWithOptions:(unsigned long long)arg1 failedObjects:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)mtl_filterWithFailedObjects:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSAttributedString (Geometrics)
- (float)widthForHeight:(float)arg1;
- (float)heightForWidth:(float)arg1;
- (struct CGSize)sizeForWidth:(float)arg1 height:(float)arg2;
@end

@interface NSBezierPath (RoundedRectangle)
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(float)arg2;
+ (id)bezierPathWithRoundedRect:(struct CGRect)arg1 cornerRadius:(float)arg2 inCorners:(int)arg3;
@end

@interface NSBundle (FGOConvenience)
@property(readonly, nonatomic) NSString *fgo_bundleName;
@property(readonly, nonatomic) NSNumber *fgo_version;
@property(readonly, nonatomic) NSString *fgo_shortVersionString;
@end

@interface NSCalendar (FGOCaching)
+ (id)fgo_currentCalendar;
@end

@interface NSCoder (FGOSecureCodingExtensions)
- (id)fgo_archiveDecodeObjectForKey:(id)arg1;
- (void)fgo_archiveEncodeObject:(id)arg1 forKey:(id)arg2;
- (id)fgo_decodeObjectOfClass:(Class)arg1 forKey:(id)arg2;
- (void)fgo_encodeObject:(id)arg1 forKey:(id)arg2;
@end

@interface NSControl (FGOKVOCompliance)
@property(nonatomic) BOOL fgo_enabled;
@end

@interface NSControl (FGOTextSignalSupport)
@property(readonly, nonatomic) RACSignal *fgo_textSignal;
@end

@interface NSData (FGOHashing)
- (id)fgo_SHA1Hash;
@end

@interface NSDate (FGOConvenience)
+ (id)fgo_dateFromComponents:(id)arg1;
+ (long long)fgo_yearsBetween:(id)arg1 and:(id)arg2;
+ (long long)fgo_minutesBetween:(id)arg1 and:(id)arg2;
+ (long long)fgo_daysBetween:(id)arg1 and:(id)arg2;
@property(readonly, nonatomic) NSDateComponents *fgo_dateComponents;
- (id)fgo_dateByAddingComponents:(id)arg1;
- (id)fgo_dateByAddingWeeks:(long long)arg1;
- (id)fgo_dateByAddingDays:(long long)arg1;
@end

@interface NSDictionary (MTLHigherOrderAdditions)
- (id)mtl_keyOfEntryWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)mtl_keyOfEntryPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_mapValuesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_mapValuesUsingBlock:(CDUnknownBlockType)arg1;
- (id)mtl_foldEntriesWithValue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterEntriesWithOptions:(unsigned long long)arg1 failedEntries:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)mtl_filterEntriesWithFailedEntries:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterEntriesWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterEntriesUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSError (FGOConvenience)
+ (id)fgo_genericErrorWithDescription:(id)arg1 recoverySuggestion:(id)arg2;
@end

@interface NSFileManager (FGOConvenience)
+ (id)fgo_suffixedURLforFileURL:(id)arg1 fileName:(id)arg2 inFolder:(id)arg3;
@end

@interface NSImage (FGOCropping)
+ (id)fgo_imageWithSize:(struct CGSize)arg1 drawingBlock:(CDUnknownBlockType)arg2;
- (id)fgo_imageFromRect:(struct CGRect)arg1;
- (id)fgo_avatarScaledCircleImage;
- (id)fgo_avatarScaledImage;
- (id)fgo_scaleProportionallyToWidth:(double)arg1;
- (id)fgo_scaleToSize:(struct CGSize)arg1;
@end

@interface NSImage (FGOFormatConversion)
- (id)fgo_PNGData;
- (id)fgo_JPEGDataWithCompressionFactor:(double)arg1;
@end

@interface NSImage (FGOImageDestination)
- (void)fgo_writeToURL:(id)arg1;
@end

@interface NSImage (FGOImageProperties)
+ (struct CGSize)fgo_sizeOfImageWithData:(id)arg1;
+ (struct CGSize)fgo_sizeOfImageAtURL:(id)arg1;
@property(readonly, nonatomic) BOOL fgo_isAnimated;
@end

@interface NSImage (RBLResizableImageAdditions)
- (id)rbl_resizableImageWithCapInsets:(struct NSEdgeInsets)arg1;
@end

@interface NSKeyedUnarchiver (Xcode5Fix)
+ (void)load;
- (int)xcode5Fix_decodeInt32ForKey:(id)arg1;
@end

@interface NSManagedObject (FGOConvenience)
+ (id)fgo_unfaultingFetchRequestForObjects:(id)arg1 relationship:(id)arg2;
+ (id)fgo_batchUnfaultRelationship:(id)arg1 forObjects:(id)arg2;
@property(readonly, nonatomic) NSURL *fgo_permanentURI;
@property(readonly, nonatomic) NSManagedObjectID *fgo_permanentObjectID;
- (void)fgo_deleteAndSave:(BOOL)arg1;
- (void)fgo_refreshAndMerge:(BOOL)arg1;
- (id)fgo_batchUnfaultRelationship:(id)arg1;
@end

@interface NSManagedObjectContext (FGOConvenience)
- (id)fgo_saveChanges;
@end

@interface NSMenu (FGOConvenience)
- (void)fgo_showRelativeToRect:(struct CGRect)arg1 ofView:(id)arg2;
@end

@interface NSMenuItem (FGOBlocks)
+ (id)fgo_itemWithTitle:(id)arg1 block:(CDUnknownBlockType)arg2 keyEquivalent:(id)arg3;
@end

@interface NSMutableArray (FGODeepCopying)
- (void)fgo_addDeepCopiedObjectsFromArray:(id)arg1;
@end

@interface NSMutableAttributedString (FGODataDetection)
+ (id)fgo_URLDetector;
- (BOOL)fgo_detectLinks;
@end

@interface NSMutableString (FGOConvenience)
- (void)fgo_trimWhitespace;
@end

@interface NSMutableURLRequest (RequestUtils)
- (void)setHTTPBasicAuthUser:(id)arg1 password:(id)arg2;
- (void)addPOSTParameters:(id)arg1 options:(int)arg2;
- (void)setPOSTParameters:(id)arg1 options:(int)arg2;
- (void)setPOSTParameters:(id)arg1;
- (void)addGETParameters:(id)arg1 options:(int)arg2;
- (void)setGETParameters:(id)arg1 options:(int)arg2;
- (void)setGETParameters:(id)arg1;
@end

@interface NSNotificationCenter (MTLWeakReferenceAdditions)
- (id)mtl_addWeakObserver:(id)arg1 selector:(SEL)arg2 name:(id)arg3 object:(id)arg4;
@end

@interface NSObject (AMAssociatedObjects)
- (id)associatedValueForKey:(void *)arg1;
- (void)weaklyAssociateValue:(id)arg1 withKey:(void *)arg2;
- (void)associateValue:(id)arg1 withKey:(void *)arg2;
@end

@interface NSObject (FGOAssociatedDisposables)
- (void)fgo_removeAssociatedDisposableDictionary;
- (id)fgo_associatedDisposableDictionary;
- (void)fgo_disposeAssociatedDisposableForKey:(id)arg1;
- (void)fgo_setAssociatedDisposable:(id)arg1 forKey:(id)arg2;
@end

@interface NSObject (FGONotificationObservation)
- (id)fgo_observeNotificationName:(id)arg1 object:(id)arg2;
@end

@interface NSOrderedSet (MTLHigherOrderAdditions)
- (BOOL)mtl_anyObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_objectWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)mtl_objectPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_mapWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_mapUsingBlock:(CDUnknownBlockType)arg1;
- (id)mtl_foldRightWithValue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_foldLeftWithValue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterWithOptions:(unsigned long long)arg1 failedObjects:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)mtl_filterWithFailedObjects:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSSet (MTLHigherOrderAdditions)
- (BOOL)mtl_anyObjectPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_objectWithOptions:(unsigned long long)arg1 passingTest:(CDUnknownBlockType)arg2;
- (id)mtl_objectPassingTest:(CDUnknownBlockType)arg1;
- (id)mtl_mapWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_mapUsingBlock:(CDUnknownBlockType)arg1;
- (id)mtl_foldWithValue:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterWithOptions:(unsigned long long)arg1 failedObjects:(id *)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)mtl_filterWithFailedObjects:(id *)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterWithOptions:(unsigned long long)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (id)mtl_filterUsingBlock:(CDUnknownBlockType)arg1;
@end

@interface NSShadow (FGOConvenience)
+ (id)fgo_blackTextGlowFlipped:(BOOL)arg1 opacity:(double)arg2;
+ (id)fgo_blackTextGlowFlipped:(BOOL)arg1;
+ (id)fgo_textShadowFlipped:(BOOL)arg1 opacity:(double)arg2;
+ (id)fgo_shadowWithBlurRadius:(double)arg1 color:(id)arg2 offset:(struct CGSize)arg3;
@end

@interface NSSound (FGOAlertSoundAdditions)
+ (id)fgo_alertSoundDeviceIdentifier;
+ (id)fgo_alertSoundNamed:(id)arg1;
@end

@interface NSString (EXTCheckedSelectorAdditions)
- (SEL)ext_toSelector;
@end

@interface NSString (FGOConvenience)
- (id)fgo_whitespaceTrimmedString;
- (id)fgo_percentEscapedString;
- (id)fgo_paddedStringForWidth:(double)arg1 font:(id)arg2;
- (id)fgo_domainStrippedString;
@end

@interface NSString (FGOFormatting)
- (id)fgo_formatAsPhoneNumber;
@end

@interface NSString (FGONamingAdditions)
+ (id)fgo_combinedNameWithFirstName:(id)arg1 lastName:(id)arg2;
- (id)fgo_nameComponents;
@end

@interface NSString (FGOTwitterSurrogates)
- (struct _NSRange)fgo_stringRangeForTwitterRange:(struct _NSRange)arg1;
@property(readonly, nonatomic, getter=fgo_isSurrogatePair) BOOL fgo_surrogatePair;
@end

@interface NSString (FGOTypeIdentifiers)
- (BOOL)fgo_conformsToUTI:(struct __CFString *)arg1;
- (id)fgo_UTI;
- (id)fgo_MIMEType;
@end

@interface NSString (FGOValidation)
+ (BOOL)fgo_validateEmailAddress:(id)arg1;
@end

@interface NSString (Geometrics)
- (float)widthForHeight:(float)arg1 font:(id)arg2;
- (float)heightForWidth:(float)arg1 font:(id)arg2;
- (struct CGSize)sizeForWidth:(float)arg1 height:(float)arg2 font:(id)arg3;
- (float)widthForHeight:(float)arg1 attributes:(id)arg2;
- (float)heightForWidth:(float)arg1 attributes:(id)arg2;
- (struct CGSize)sizeForWidth:(float)arg1 height:(float)arg2 attributes:(id)arg3;
@end

@interface NSString (RequestUtils)
+ (id)URLQueryWithParameters:(id)arg1 options:(int)arg2;
+ (id)URLQueryWithParameters:(id)arg1;
- (id)base64DecodedString;
- (id)base64EncodedString;
- (id)URLValueRelativeToURL:(id)arg1;
- (id)URLValue;
- (id)stringByAppendingURLFragment:(id)arg1;
- (id)stringByDeletingURLFragment;
- (id)URLFragment;
- (id)URLQueryParametersWithOptions:(int)arg1;
- (id)URLQueryParameters;
- (id)stringByMergingURLQuery:(id)arg1 options:(int)arg2;
- (id)stringByMergingURLQuery:(id)arg1;
- (id)stringByAppendingURLQuery:(id)arg1;
- (id)stringByReplacingURLQueryWithQuery:(id)arg1;
- (id)stringByDeletingURLQuery;
- (id)URLQuery;
- (struct _NSRange)rangeOfURLQuery;
- (id)lastURLPathComponent;
- (id)stringByDeletingLastURLPathComponent;
- (id)stringByAppendingURLPathComponent:(id)arg1;
- (id)URLPathExtension;
- (id)stringByDeletingURLPathExtension;
- (id)stringByAppendingURLPathExtension:(id)arg1;
- (id)URLDecodedString:(BOOL)arg1;
- (id)URLEncodedString;
@end

@interface NSTableView (FGOKeyboardSelection)
- (BOOL)fgo_shouldSelectRow:(long long)arg1;
- (void)fgo_selectNextRow;
- (void)fgo_selectPreviousRow;
@end

@interface NSTextField (FGOResponderAdditions)
- (BOOL)fgo_isFirstResponder;
@end

@interface NSTextView (FGOContainerAdjustment)
@property(nonatomic) struct CGPoint fgo_textContainerOrigin;
- (struct CGPoint)textContainerOrigin;
@end

@interface NSTextView (INDSelectionHighlight)
@property(nonatomic) struct _NSRange ind_highlightedRange;
@property(retain, nonatomic) NSArray *ind_backgroundColorRanges;
- (void)ind_deselectHighlightedText;
- (void)ind_backupBackgroundColorState;
- (void)ind_highlightSelectedTextInRange:(struct _NSRange)arg1 drawActive:(BOOL)arg2;
@end

@interface NSTextView (INDUniqueIdentifiers)
@property(copy, nonatomic) NSString *ind_uniqueIdentifier;
@end

@interface NSTimer (FGOBlocks)
+ (id)fgo_timerWithTimeInterval:(double)arg1 block:(CDUnknownBlockType)arg2 repeats:(BOOL)arg3;
+ (id)fgo_scheduledTimerWithTimeInterval:(double)arg1 block:(CDUnknownBlockType)arg2 repeats:(BOOL)arg3;
@end

@interface NSURL (FGOApplicationDirectories)
+ (id)fgo_downloadsDirectory;
+ (id)fgo_applicationSupportDirectory;
@end

@interface NSURL (FGOBookmarking)
+ (id)fgo_URLByResolvingBookmarkData:(id)arg1 error:(id *)arg2;
- (id)fgo_bookmarkDataWithError:(id *)arg1;
@end

@interface NSURL (FGOQuickLook)
- (id)fgo_quickLookPreviewWithMaximumSize:(struct CGSize)arg1 scaleFactor:(double)arg2;
@end

@interface NSURL (FGOResourceValues)
- (id)fgo_fileSize;
@end

@interface NSURL (FGOTypeIdentifiers)
- (BOOL)fgo_conformsToUTI:(struct __CFString *)arg1;
- (id)fgo_UTI;
- (id)fgo_MIMEType;
@end

@interface NSURL (RequestUtils)
+ (id)URLWithComponents:(id)arg1;
- (id)URLWithFragment:(id)arg1;
- (id)URLWithQuery:(id)arg1;
- (id)URLWithParameterString:(id)arg1;
- (id)URLWithPath:(id)arg1;
- (id)URLWithPassword:(id)arg1;
- (id)URLWithUser:(id)arg1;
- (id)URLWithPort:(id)arg1;
- (id)URLWithHost:(id)arg1;
- (id)URLWithScheme:(id)arg1;
- (id)URLWithValue:(id)arg1 forComponent:(id)arg2;
- (id)components;
@end

@interface NSURLRequest (RequestUtils)
+ (id)POSTRequestWithURL:(id)arg1 parameters:(id)arg2;
+ (id)GETRequestWithURL:(id)arg1 parameters:(id)arg2;
+ (id)HTTPRequestWithURL:(id)arg1 method:(id)arg2 parameters:(id)arg3;
- (id)HTTPBasicAuthPassword;
- (id)HTTPBasicAuthUser;
- (id)HTTPBasicAuthComponents;
- (id)POSTParameters;
- (id)GETParameters;
@end

@interface NSUserDefaults (FGOPreferences)
@property(nonatomic) BOOL fgo_disableChatBubbleAnimations;
@property(nonatomic) BOOL fgo_enableAnalytics;
@property(nonatomic) BOOL fgo_allowHostNameMismatch;
@property(nonatomic) BOOL fgo_allowSelfSignedCertificates;
@property(nonatomic) long long fgo_iconVisibility;
@property(nonatomic) BOOL fgo_disableSidebarSearchFocus;
@property(nonatomic) long long fgo_textSize;
@property(nonatomic) BOOL fgo_foregroundSoundsEnabled;
@property(nonatomic) BOOL fgo_backgroundSoundsEnabled;
@property(nonatomic) BOOL fgo_soundsEnabled;
@property(nonatomic) long long fgo_fileTransferOption;
@property(nonatomic) BOOL fgo_directConnectionEnabled;
@end

@interface NSValue (JNWAdditions)
+ (id)jnw_valueWithAffineTransform:(struct CGAffineTransform)arg1;
+ (id)jnw_valueWithSize:(struct CGSize)arg1;
+ (id)jnw_valueWithPoint:(struct CGPoint)arg1;
+ (id)jnw_valueWithRect:(struct CGRect)arg1;
- (long long)jnw_type;
- (struct CGAffineTransform)jnw_affineTransformValue;
- (struct CGPoint)jnw_pointValue;
- (struct CGSize)jnw_sizeValue;
- (struct CGRect)jnw_rectValue;
@end

@interface NSView (FGOAnimation)
- (void)fgo_setHidden:(BOOL)arg1 animate:(BOOL)arg2 duration:(double)arg3;
@end

@interface NSView (FGOConvenience)
- (id)fgo_subviewWithIdentifier:(id)arg1;
@end

@interface NSView (FGOLayerHacks)
- (void)fgo_reorderSubviewZPositions;
@end

@interface NSView (RACAnimationSupport)
+ (id)rac_animate:(CDUnknownBlockType)arg1 block:(CDUnknownBlockType)arg2;
+ (id)rac_animate:(CDUnknownBlockType)arg1 duration:(double)arg2 curve:(long long)arg3;
+ (id)rac_animate:(CDUnknownBlockType)arg1 duration:(double)arg2;
+ (id)rac_animate:(CDUnknownBlockType)arg1;
@end

@interface NSXMLElement (FGOConvenience)
- (id)fgo_XMPPStreamError;
@end

@interface NSXPCConnection (FGOAdditions)
+ (id)fgo_XPCInvalidationErrorForServiceName:(id)arg1;
+ (id)fgo_XPCInterruptionErrorForServiceName:(id)arg1;
+ (id)fgo_cloudAppXPCConnectionSignalWithSubscriberBlock:(CDUnknownBlockType)arg1;
+ (id)fgo_XPCConnectionSignalForServiceName:(id)arg1 remoteInterfaceProtocol:(id)arg2 subscriberBlock:(CDUnknownBlockType)arg3;
- (id)fgo_remoteObjectProxy;
@end

@interface NormalizedStringTransformer : NSValueTransformer
{
}

+ (id)upperBoundSearchString:(id)arg1;
+ (id)normalizeString:(id)arg1;
+ (BOOL)allowsReverseTransformation;
+ (Class)transformedValueClass;
+ (void)initialize;
- (id)reverseTransformedValue:(id)arg1;
- (id)transformedValue:(id)arg1;

@end

@interface PhoneRule : NSObject
{
    int _minVal;
    int _maxVal;
    int _byte8;
    int _maxLen;
    int _otherFlag;
    int _prefixLen;
    int _flag12;
    int _flag13;
    NSString *_format;
}

@property(retain, nonatomic) NSString *format; // @synthesize format=_format;
@property(nonatomic) int flag13; // @synthesize flag13=_flag13;
@property(nonatomic) int flag12; // @synthesize flag12=_flag12;
@property(nonatomic) int prefixLen; // @synthesize prefixLen=_prefixLen;
@property(nonatomic) int otherFlag; // @synthesize otherFlag=_otherFlag;
@property(nonatomic) int maxLen; // @synthesize maxLen=_maxLen;
@property(nonatomic) int byte8; // @synthesize byte8=_byte8;
@property(nonatomic) int maxVal; // @synthesize maxVal=_maxVal;
@property(nonatomic) int minVal; // @synthesize minVal=_minVal;
- (id)description;
- (id)format:(id)arg1 intlPrefix:(id)arg2 trunkPrefix:(id)arg3;
@property(readonly, nonatomic) BOOL hasTrunkPrefix;
@property(readonly, nonatomic) BOOL hasIntlPrefix;

@end

@interface RACSignal (FGOErrorReporting)
- (id)fgo_catch;
- (id)fgo_subscribeNextAndCatch:(CDUnknownBlockType)arg1 completed:(CDUnknownBlockType)arg2;
- (id)fgo_subscribeNextAndCatch:(CDUnknownBlockType)arg1;
@end

@interface RACSignal (FGOOperators)
- (id)fgo_notNil;
- (id)fgo_catchEmptyString;
- (id)fgo_IMServiceTimeout;
- (id)fgo_silentTimeout:(double)arg1 onScheduler:(id)arg2;
- (id)fgo_previousAndCurrent;
@end

@interface RACSignal (FGORCLOperators)
- (id)fgo_centerRelativeToSize:(id)arg1;
- (id)fgo_max:(id)arg1;
- (id)fgo_rightInset;
- (id)fgo_leftInset;
- (id)fgo_bottomInset;
- (id)fgo_topInset;
- (id)fgo_verticalInsets;
- (id)fgo_horizontalInsets;
@end

@interface RBLResizableImage : NSImage <NSCoding, NSCopying>
{
    struct NSEdgeInsets _rbl_capInsets;
}

@property(nonatomic) struct NSEdgeInsets rbl_capInsets; // @synthesize rbl_capInsets=_rbl_capInsets;
- (id)description;
- (BOOL)isEqual:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4 respectFlipped:(BOOL)arg5 hints:(id)arg6;
- (void)drawInRect:(struct CGRect)arg1 fromRect:(struct CGRect)arg2 operation:(unsigned long long)arg3 fraction:(double)arg4;

@end

@class RGenImagesRootMediaxcassets;

@interface RGenImagesRoot : NSObject
{
    RGenImagesRootMediaxcassets *mediaXcassets;
}

+ (void)load;
@property(readonly, nonatomic) RGenImagesRootMediaxcassets *mediaXcassets; // @synthesize mediaXcassets;
@property(readonly, nonatomic) NSImage *youtubeIconActive;
@property(readonly, nonatomic) NSImage *youtubeIcon;
@property(readonly, nonatomic) NSImage *xmppHeaderIcon;
@property(readonly, nonatomic) NSImage *xmppColoredIcon;
@property(readonly, nonatomic) NSImage *windowHandle;
@property(readonly, nonatomic) NSImage *welcomeMainBtnActive;
@property(readonly, nonatomic) NSImage *welcomeMainBtn;
@property(readonly, nonatomic) NSImage *welcomeCard4;
@property(readonly, nonatomic) NSImage *welcomeCard3;
@property(readonly, nonatomic) NSImage *welcomeCard2;
@property(readonly, nonatomic) NSImage *welcomeCard1;
@property(readonly, nonatomic) NSImage *welcomeBgDisabled;
@property(readonly, nonatomic) NSImage *welcomeBg;
@property(readonly, nonatomic) NSImage *videoPlayBtnWhiteActive;
@property(readonly, nonatomic) NSImage *videoPlayBtnWhite;
@property(readonly, nonatomic) NSImage *videoPlayBtnBlueActive;
@property(readonly, nonatomic) NSImage *videoPlayBtnBlue;
@property(readonly, nonatomic) NSImage *unreadBubbleActive;
@property(readonly, nonatomic) NSImage *unreadBubble;
@property(readonly, nonatomic) NSImage *unreadBadge;
@property(readonly, nonatomic) NSImage *twitterWhiteSeparator;
@property(readonly, nonatomic) NSImage *twitterIconWhiteActive;
@property(readonly, nonatomic) NSImage *twitterIconWhite;
@property(readonly, nonatomic) NSImage *twitterIconBlueActive;
@property(readonly, nonatomic) NSImage *twitterIconBlue;
@property(readonly, nonatomic) NSImage *twitterBlueSeparator;
@property(readonly, nonatomic) NSImage *titleBarSearchBtnActive;
@property(readonly, nonatomic) NSImage *titleBarSearchBtn;
@property(readonly, nonatomic) NSImage *titleBarAvatarMaskActive;
@property(readonly, nonatomic) NSImage *titleBarAvatarMask;
@property(readonly, nonatomic) NSImage *timestampIcon;
@property(readonly, nonatomic) NSImage *timelineAccountHeader;
@property(readonly, nonatomic) NSImage *tabFloatStatusTempIcon;
@property(readonly, nonatomic) NSImage *tabFloatRightActive;
@property(readonly, nonatomic) NSImage *tabFloatRight;
@property(readonly, nonatomic) NSImage *tabFloatLeftActive;
@property(readonly, nonatomic) NSImage *tabFloatLeft;
@property(readonly, nonatomic) NSImage *tabFloatCenterActive;
@property(readonly, nonatomic) NSImage *tabFloatCenter;
@property(readonly, nonatomic) NSImage *tabFloatBadge;
@property(readonly, nonatomic) NSImage *switchAccountXmpp;
@property(readonly, nonatomic) NSImage *switchAccountGmail;
@property(readonly, nonatomic) NSImage *switchAccountFacebook;
@property(readonly, nonatomic) NSImage *statusTfNavbar;
@property(readonly, nonatomic) NSImage *statusPillSelected;
@property(readonly, nonatomic) NSImage *statusPill;
@property(readonly, nonatomic) NSImage *statusOfflineNavbar;
@property(readonly, nonatomic) NSImage *statusIdleNavbar;
@property(readonly, nonatomic) NSImage *statusDropArrowWhite;
@property(readonly, nonatomic) NSImage *statusDropArrow;
@property(readonly, nonatomic) NSImage *statusBusyNavbar;
@property(readonly, nonatomic) NSImage *statusAwayNavbar;
@property(readonly, nonatomic) NSImage *statusAvailableNavbar;
@property(readonly, nonatomic) NSImage *searchToolBar;
@property(readonly, nonatomic) NSImage *searchHeaderBg;
@property(readonly, nonatomic) NSImage *searchHeaderArrow;
@property(readonly, nonatomic) NSImage *searchField;
@property(readonly, nonatomic) NSImage *searchBuddyConvoCount;
@property(readonly, nonatomic) NSImage *searchAvatarMask;
@property(readonly, nonatomic) NSImage *searchActiveDateCell;
@property(readonly, nonatomic) NSImage *searchActiveCell;
@property(readonly, nonatomic) NSImage *rosterFooter;
@property(readonly, nonatomic) NSImage *requestDeclineBtnActive;
@property(readonly, nonatomic) NSImage *requestDeclineBtn;
@property(readonly, nonatomic) NSImage *requestAcceptBtnActive;
@property(readonly, nonatomic) NSImage *requestAcceptBtn;
@property(readonly, nonatomic) NSImage *quicklookIconActive;
@property(readonly, nonatomic) NSImage *quicklookIcon;
@property(readonly, nonatomic) NSImage *quicklookBtnWhiteActive;
@property(readonly, nonatomic) NSImage *quicklookBtnWhite;
@property(readonly, nonatomic) NSImage *quicklookBtnBlueActive;
@property(readonly, nonatomic) NSImage *quicklookBtnBlue;
@property(readonly, nonatomic) NSImage *prefsXmppIcon;
@property(readonly, nonatomic) NSImage *prefsSwitchKnob;
@property(readonly, nonatomic) NSImage *prefsSwitchFrame;
@property(readonly, nonatomic) NSImage *prefsSecuritySslIcon;
@property(readonly, nonatomic) NSImage *prefsSecurityBtn;
@property(readonly, nonatomic) NSImage *prefsPhotosBtn;
@property(readonly, nonatomic) NSImage *prefsHangoutsIcon;
@property(readonly, nonatomic) NSImage *prefsGeneralUsageIcon;
@property(readonly, nonatomic) NSImage *prefsGeneralTextIcon;
@property(readonly, nonatomic) NSImage *prefsGeneralSoundIcon;
@property(readonly, nonatomic) NSImage *prefsGeneralIncomingIcon;
@property(readonly, nonatomic) NSImage *prefsGeneralBtn;
@property(readonly, nonatomic) NSImage *prefsFtRadioHighlighted;
@property(readonly, nonatomic) NSImage *prefsFtRadioActiveHighlighted;
@property(readonly, nonatomic) NSImage *prefsFtRadioActive;
@property(readonly, nonatomic) NSImage *prefsFtRadio;
@property(readonly, nonatomic) NSImage *prefsFtNativeTransferIconActive;
@property(readonly, nonatomic) NSImage *prefsFtNativeTransferIcon;
@property(readonly, nonatomic) NSImage *prefsFtDroplrIconActive;
@property(readonly, nonatomic) NSImage *prefsFtDroplrIcon;
@property(readonly, nonatomic) NSImage *prefsFtCloudappIconActive;
@property(readonly, nonatomic) NSImage *prefsFtCloudappIcon;
@property(readonly, nonatomic) NSImage *prefsFtCheckboxHighlighted;
@property(readonly, nonatomic) NSImage *prefsFtCheckboxActiveHighlighted;
@property(readonly, nonatomic) NSImage *prefsFtCheckboxActive;
@property(readonly, nonatomic) NSImage *prefsFtCheckbox;
@property(readonly, nonatomic) NSImage *prefsFbIcon;
@property(readonly, nonatomic) NSImage *prefsDeleteAccountBtnActive;
@property(readonly, nonatomic) NSImage *prefsDeleteAccountBtn;
@property(readonly, nonatomic) NSImage *prefsAddAccountXmppIcon;
@property(readonly, nonatomic) NSImage *prefsAddAccountSep;
@property(readonly, nonatomic) NSImage *prefsAddAccountHangoutsIcon;
@property(readonly, nonatomic) NSImage *prefsAddAccountFbIcon;
@property(readonly, nonatomic) NSImage *prefsAddAccountCellHighlighted;
@property(readonly, nonatomic) NSImage *prefsAddAccountCellActive;
@property(readonly, nonatomic) NSImage *prefsAccountsBtn;
@property(readonly, nonatomic) NSImage *photoBubbleOverlay;
@property(readonly, nonatomic) NSImage *onlineStatusLight;
@property(readonly, nonatomic) NSImage *offlineStatusLight;
@property(readonly, nonatomic) NSImage *oddCell;
@property(readonly, nonatomic) NSImage *navbarSeparator;
@property(readonly, nonatomic) NSImage *minimizeMain;
@property(readonly, nonatomic) NSImage *minimizeHoverMain;
@property(readonly, nonatomic) NSImage *minimizeActiveMain;
@property(readonly, nonatomic) NSImage *menuStatusOnline;
@property(readonly, nonatomic) NSImage *menuStatusOffline;
@property(readonly, nonatomic) NSImage *menuStatusIdle;
@property(readonly, nonatomic) NSImage *menuStatusAway;
@property(readonly, nonatomic) NSImage *menuChatConvoActive;
@property(readonly, nonatomic) NSImage *menuChatConvo;
@property(readonly, nonatomic) NSImage *menuBg;
@property(readonly, nonatomic) NSImage *menuActiveCell;
@property(readonly, nonatomic) NSImage *mediaBubbleFrameClear;
@property(readonly, nonatomic) NSImage *mediaBubbleFrame;
@property(readonly, nonatomic) NSImage *mediaBubbleAvatarFrame;
@property(readonly, nonatomic) NSImage *maximizeMain;
@property(readonly, nonatomic) NSImage *maximizeHoverMain;
@property(readonly, nonatomic) NSImage *maximizeActiveMain;
@property(readonly, nonatomic) NSImage *instagramWhiteSeparator;
@property(readonly, nonatomic) NSImage *instagramUserAvatar;
@property(readonly, nonatomic) NSImage *instagramIconActive;
@property(readonly, nonatomic) NSImage *instagramIcon;
@property(readonly, nonatomic) NSImage *instagramBlueSeparator;
@property(readonly, nonatomic) NSImage *incomingUnreadBadge;
@property(readonly, nonatomic) NSImage *incomingStatusIconTypingBlue;
@property(readonly, nonatomic) NSImage *incomingStatusIconTypingActive;
@property(readonly, nonatomic) NSImage *incomingStatusIconTyping;
@property(readonly, nonatomic) NSImage *incomingStatusIconBlue;
@property(readonly, nonatomic) NSImage *incomingStatusIconActive;
@property(readonly, nonatomic) NSImage *incomingStatusIcon;
@property(readonly, nonatomic) NSImage *incomingSettingsBtnActive;
@property(readonly, nonatomic) NSImage *incomingSettingsBtn;
@property(readonly, nonatomic) NSImage *incomingOnlineStatus;
@property(readonly, nonatomic) NSImage *incomingOfflineStatus;
@property(readonly, nonatomic) NSImage *incomingIdleStatus;
@property(readonly, nonatomic) NSImage *incomingCloseSingleNotificationActive;
@property(readonly, nonatomic) NSImage *incomingCloseSingleNotification;
@property(readonly, nonatomic) NSImage *incomingClearNotificationsBtnActive;
@property(readonly, nonatomic) NSImage *incomingClearNotificationsBtn;
@property(readonly, nonatomic) NSImage *incomingBuddyTyping;
@property(readonly, nonatomic) NSImage *incomingBg;
@property(readonly, nonatomic) NSImage *incomingAwayStatus;
@property(readonly, nonatomic) NSImage *incomingAvatarFrame;
@property(readonly, nonatomic) NSImage *inactiveCellTyping;
@property(readonly, nonatomic) NSImage *idleStatusLight;
@property(readonly, nonatomic) NSImage *hangoutsIcon;
@property(readonly, nonatomic) NSImage *hangoutsColoredIcon;
@property(readonly, nonatomic) NSImage *groupedIcon;
@property(readonly, nonatomic) NSImage *gmailHeaderIcon;
@property(readonly, nonatomic) NSImage *favoritesIcon;
@property(readonly, nonatomic) NSImage *facetimeIcon;
@property(readonly, nonatomic) NSImage *facebookIcon;
@property(readonly, nonatomic) NSImage *facebookHeaderIcon;
@property(readonly, nonatomic) NSImage *facebookColoredIcon;
@property(readonly, nonatomic) NSImage *evenCell;
@property(readonly, nonatomic) NSImage *errorBubbleRightNoNib;
@property(readonly, nonatomic) NSImage *errorBubbleRightNib;
@property(readonly, nonatomic) NSImage *errorBubbleRetryBtnActive;
@property(readonly, nonatomic) NSImage *errorBubbleRetryBtn;
@property(readonly, nonatomic) NSImage *errorBubbleCancelBtnActive;
@property(readonly, nonatomic) NSImage *errorBubbleCancelBtn;
@property(readonly, nonatomic) NSImage *endChatFooter;
@property(readonly, nonatomic) NSImage *emojiVerticalSep;
@property(readonly, nonatomic) NSImage *emojiSmileBtnHighlighted;
@property(readonly, nonatomic) NSImage *emojiSmileBtnActive;
@property(readonly, nonatomic) NSImage *emojiSmileBtn;
@property(readonly, nonatomic) NSImage *emojiRecentBtnHighlighted;
@property(readonly, nonatomic) NSImage *emojiRecentBtnActive;
@property(readonly, nonatomic) NSImage *emojiRecentBtn;
@property(readonly, nonatomic) NSImage *emojiNumbersBtnHighlighted;
@property(readonly, nonatomic) NSImage *emojiNumbersBtnActive;
@property(readonly, nonatomic) NSImage *emojiNumbersBtn;
@property(readonly, nonatomic) NSImage *emojiIconActive;
@property(readonly, nonatomic) NSImage *emojiIcon;
@property(readonly, nonatomic) NSImage *emojiHorizontalSep;
@property(readonly, nonatomic) NSImage *emojiFlowerBtnHighlighted;
@property(readonly, nonatomic) NSImage *emojiFlowerBtnActive;
@property(readonly, nonatomic) NSImage *emojiFlowerBtn;
@property(readonly, nonatomic) NSImage *emojiCarBtnHighlighted;
@property(readonly, nonatomic) NSImage *emojiCarBtnActive;
@property(readonly, nonatomic) NSImage *emojiCarBtn;
@property(readonly, nonatomic) NSImage *emojiBellBtnHighlighted;
@property(readonly, nonatomic) NSImage *emojiBellBtnActive;
@property(readonly, nonatomic) NSImage *emojiBellBtn;
@property(readonly, nonatomic) NSImage *droplrIconActive;
@property(readonly, nonatomic) NSImage *droplrIcon;
@property(readonly, nonatomic) NSImage *dropboxIconActive;
@property(readonly, nonatomic) NSImage *dropboxIcon;
@property(readonly, nonatomic) NSImage *dropDownArrow90;
@property(readonly, nonatomic) NSImage *dropDownArrow0;
@property(readonly, nonatomic) NSImage *docQuicklookBtnWhiteActive;
@property(readonly, nonatomic) NSImage *docQuicklookBtnWhite;
@property(readonly, nonatomic) NSImage *docQuicklookBtnBlueActive;
@property(readonly, nonatomic) NSImage *docQuicklookBtnBlue;
@property(readonly, nonatomic) NSImage *docDownloadBtnWhiteActive;
@property(readonly, nonatomic) NSImage *docDownloadBtnWhite;
@property(readonly, nonatomic) NSImage *docDownloadBtnBlueActive;
@property(readonly, nonatomic) NSImage *docDownloadBtnBlue;
@property(readonly, nonatomic) NSImage *disabledMain;
@property(readonly, nonatomic) NSImage *connectionTableBg;
@property(readonly, nonatomic) NSImage *connectionSuccessIcon;
@property(readonly, nonatomic) NSImage *connectionRetryIcon;
@property(readonly, nonatomic) NSImage *connectionFailedIcon;
@property(readonly, nonatomic) NSImage *connectionBtnActive;
@property(readonly, nonatomic) NSImage *connectionBtn;
@property(readonly, nonatomic) NSImage *composeNewMessageBtnActive;
@property(readonly, nonatomic) NSImage *composeNewMessageBtn;
@property(readonly, nonatomic) NSImage *composeBuddyFieldBg;
@property(readonly, nonatomic) NSImage *composeBlankAvatar;
@property(readonly, nonatomic) NSImage *cloudIconActive;
@property(readonly, nonatomic) NSImage *cloudIcon;
@property(readonly, nonatomic) NSImage *closeMain;
@property(readonly, nonatomic) NSImage *closeHoverMain;
@property(readonly, nonatomic) NSImage *closeHighlightedConvoBtnActive;
@property(readonly, nonatomic) NSImage *closeHighlightedConvoBtn;
@property(readonly, nonatomic) NSImage *closeConvoBtnActive;
@property(readonly, nonatomic) NSImage *closeConvoBtn;
@property(readonly, nonatomic) NSImage *closeChatViewBtnActive;
@property(readonly, nonatomic) NSImage *closeChatViewBtn;
@property(readonly, nonatomic) NSImage *closeBuddyIcon;
@property(readonly, nonatomic) NSImage *closeActiveMain;
@property(readonly, nonatomic) NSImage *clearSearchFieldBtnActive;
@property(readonly, nonatomic) NSImage *clearSearchFieldBtn;
@property(readonly, nonatomic) NSImage *chatTimestampIcon;
@property(readonly, nonatomic) NSImage *chatTimeline;
@property(readonly, nonatomic) NSImage *chatOfflineStatusIcon;
@property(readonly, nonatomic) NSImage *chatLoadingBgWhite;
@property(readonly, nonatomic) NSImage *chatLoadingBgRed;
@property(readonly, nonatomic) NSImage *chatLoadingBgBlue;
@property(readonly, nonatomic) NSImage *chatLoading;
@property(readonly, nonatomic) NSImage *chatIdleStatusIcon;
@property(readonly, nonatomic) NSImage *chatHead;
@property(readonly, nonatomic) NSImage *chatField;
@property(readonly, nonatomic) NSImage *chatAwayStatusIcon;
@property(readonly, nonatomic) NSImage *chatAvatarFrame;
@property(readonly, nonatomic) NSImage *chatAvailableStatusIcon;
@property(readonly, nonatomic) NSImage *cardIndicatorActive;
@property(readonly, nonatomic) NSImage *cardIndicator;
@property(readonly, nonatomic) NSImage *buddyHeader;
@property(readonly, nonatomic) NSImage *bubbleTypingNoNib;
@property(readonly, nonatomic) NSImage *bubbleTypingNib;
@property(readonly, nonatomic) NSImage *bubbleRightNoNib;
@property(readonly, nonatomic) NSImage *bubbleRightNib;
@property(readonly, nonatomic) NSImage *bubbleLeftNoNib;
@property(readonly, nonatomic) NSImage *bubbleLeftNib;
@property(readonly, nonatomic) NSImage *awayStatusLight;
@property(readonly, nonatomic) NSImage *avatarMask;
@property(readonly, nonatomic) NSImage *avatarChat;
@property(readonly, nonatomic) NSImage *addRequestsTabsBg;
@property(readonly, nonatomic) NSImage *addRequestsRightTabHighlighted;
@property(readonly, nonatomic) NSImage *addRequestsRightTabActive;
@property(readonly, nonatomic) NSImage *addRequestsLeftTabHighlighted;
@property(readonly, nonatomic) NSImage *addRequestsLeftTabActive;
@property(readonly, nonatomic) NSImage *addRequestsClearBtnDisabled;
@property(readonly, nonatomic) NSImage *addRequestsClearBtnActive;
@property(readonly, nonatomic) NSImage *addRequestsClearBtn;
@property(readonly, nonatomic) NSImage *addRequestsBtnActive;
@property(readonly, nonatomic) NSImage *addRequestsBtn;
@property(readonly, nonatomic) NSImage *addRequestsAddBtnDisabled;
@property(readonly, nonatomic) NSImage *addRequestsAddBtnActive;
@property(readonly, nonatomic) NSImage *addRequestsAddBtn;
@property(readonly, nonatomic) NSImage *addRequestServiceSelector;
@property(readonly, nonatomic) NSImage *addContactServerIcon;
@property(readonly, nonatomic) NSImage *addContactGmailIcon;
@property(readonly, nonatomic) NSImage *addContactFacebookIcon;
@property(readonly, nonatomic) NSImage *addAccountXmppIcon;
@property(readonly, nonatomic) NSImage *addAccountTopCellActive;
@property(readonly, nonatomic) NSImage *addAccountTopCell;
@property(readonly, nonatomic) NSImage *addAccountMiddleCellActive;
@property(readonly, nonatomic) NSImage *addAccountMiddleCell;
@property(readonly, nonatomic) NSImage *addAccountGoogleIcon;
@property(readonly, nonatomic) NSImage *addAccountFacebookIcon;
@property(readonly, nonatomic) NSImage *addAccountBottomCellActive;
@property(readonly, nonatomic) NSImage *addAccountBottomCell;
@property(readonly, nonatomic) NSImage *addAccountArrow;
@property(readonly, nonatomic) NSImage *activeCellTyping;
@property(readonly, nonatomic) NSImage *activeCell;
@property(readonly, nonatomic) NSImage *aboutFlamingoText;
@property(readonly, nonatomic) NSImage *aboutFlamingoIcon;
@property(readonly, nonatomic) NSImage *aboutEasterIcon;
- (id)init;

@end

@interface RGenImagesRootAppiconappiconset : NSObject
{
}

@property(readonly, nonatomic) NSImage *icon512x512;
@property(readonly, nonatomic) NSImage *icon32x32;
@property(readonly, nonatomic) NSImage *icon256x256;
@property(readonly, nonatomic) NSImage *icon16x16;
@property(readonly, nonatomic) NSImage *icon128x128;

@end

@interface RGenImagesRootAppiconbetaappiconset : NSObject
{
}

@property(readonly, nonatomic) NSImage *_64;
@property(readonly, nonatomic) NSImage *_5121;
@property(readonly, nonatomic) NSImage *_512;
@property(readonly, nonatomic) NSImage *_321;
@property(readonly, nonatomic) NSImage *_32;
@property(readonly, nonatomic) NSImage *_2561;
@property(readonly, nonatomic) NSImage *_256;
@property(readonly, nonatomic) NSImage *_16;
@property(readonly, nonatomic) NSImage *_128;
@property(readonly, nonatomic) NSImage *_1024;

@end

@interface RGenImagesRootMediaxcassets : NSObject
{
    RGenImagesRootAppiconappiconset *appIconAppiconset;
    RGenImagesRootAppiconbetaappiconset *appIconBetaAppiconset;
}

@property(readonly, nonatomic) RGenImagesRootAppiconbetaappiconset *appIconBetaAppiconset; // @synthesize appIconBetaAppiconset;
@property(readonly, nonatomic) RGenImagesRootAppiconappiconset *appIconAppiconset; // @synthesize appIconAppiconset;
- (id)init;

@end

@class RGenPathsRootMediaxcassets;

@interface RGenPathsRoot : DescriptionString
{
    RGenPathsRootMediaxcassets *mediaXcassets;
}

+ (void)load;
@property(readonly, nonatomic) RGenPathsRootMediaxcassets *mediaXcassets; // @synthesize mediaXcassets;
@property(readonly, nonatomic) NSString *youtubeIconPng;
@property(readonly, nonatomic) NSString *youtubeIconActivePng;
@property(readonly, nonatomic) NSString *youtubeIconActive2xPng;
@property(readonly, nonatomic) NSString *youtubeIcon2xPng;
@property(readonly, nonatomic) NSString *xmppHeaderIconPng;
@property(readonly, nonatomic) NSString *xmppHeaderIcon2xPng;
@property(readonly, nonatomic) NSString *xmppColoredIconPng;
@property(readonly, nonatomic) NSString *xmppColoredIcon2xPng;
@property(readonly, nonatomic) NSString *windowHandlePng;
@property(readonly, nonatomic) NSString *windowHandle2xPng;
@property(readonly, nonatomic) NSString *welcomeMainBtnPng;
@property(readonly, nonatomic) NSString *welcomeMainBtnActivePng;
@property(readonly, nonatomic) NSString *welcomeMainBtnActive2xPng;
@property(readonly, nonatomic) NSString *welcomeMainBtn2xPng;
@property(readonly, nonatomic) NSString *welcomeCard4Png;
@property(readonly, nonatomic) NSString *welcomeCard42xPng;
@property(readonly, nonatomic) NSString *welcomeCard3Png;
@property(readonly, nonatomic) NSString *welcomeCard32xPng;
@property(readonly, nonatomic) NSString *welcomeCard2Png;
@property(readonly, nonatomic) NSString *welcomeCard22xPng;
@property(readonly, nonatomic) NSString *welcomeCard1Png;
@property(readonly, nonatomic) NSString *welcomeCard12xPng;
@property(readonly, nonatomic) NSString *welcomeBgPng;
@property(readonly, nonatomic) NSString *welcomeBgDisabledPng;
@property(readonly, nonatomic) NSString *welcomeBgDisabled2xPng;
@property(readonly, nonatomic) NSString *welcomeBg2xPng;
@property(readonly, nonatomic) NSString *videoPlayBtnWhitePng;
@property(readonly, nonatomic) NSString *videoPlayBtnWhiteActivePng;
@property(readonly, nonatomic) NSString *videoPlayBtnWhiteActive2xPng;
@property(readonly, nonatomic) NSString *videoPlayBtnWhite2xPng;
@property(readonly, nonatomic) NSString *videoPlayBtnBluePng;
@property(readonly, nonatomic) NSString *videoPlayBtnBlueActivePng;
@property(readonly, nonatomic) NSString *videoPlayBtnBlueActive2xPng;
@property(readonly, nonatomic) NSString *videoPlayBtnBlue2xPng;
@property(readonly, nonatomic) NSString *unreadBubblePng;
@property(readonly, nonatomic) NSString *unreadBubbleActivePng;
@property(readonly, nonatomic) NSString *unreadBubbleActive2xPng;
@property(readonly, nonatomic) NSString *unreadBubble2xPng;
@property(readonly, nonatomic) NSString *unreadBadgePng;
@property(readonly, nonatomic) NSString *unreadBadge2xPng;
@property(readonly, nonatomic) NSString *twitterWhiteSeparatorPng;
@property(readonly, nonatomic) NSString *twitterWhiteSeparator2xPng;
@property(readonly, nonatomic) NSString *twitterIconWhitePng;
@property(readonly, nonatomic) NSString *twitterIconWhiteActivePng;
@property(readonly, nonatomic) NSString *twitterIconWhiteActive2xPng;
@property(readonly, nonatomic) NSString *twitterIconWhite2xPng;
@property(readonly, nonatomic) NSString *twitterIconBluePng;
@property(readonly, nonatomic) NSString *twitterIconBlueActivePng;
@property(readonly, nonatomic) NSString *twitterIconBlueActive2xPng;
@property(readonly, nonatomic) NSString *twitterIconBlue2xPng;
@property(readonly, nonatomic) NSString *twitterBlueSeparatorPng;
@property(readonly, nonatomic) NSString *twitterBlueSeparator2xPng;
@property(readonly, nonatomic) NSString *titleBarSearchBtnPng;
@property(readonly, nonatomic) NSString *titleBarSearchBtnActivePng;
@property(readonly, nonatomic) NSString *titleBarSearchBtnActive2xPng;
@property(readonly, nonatomic) NSString *titleBarSearchBtn2xPng;
@property(readonly, nonatomic) NSString *titleBarAvatarMaskPng;
@property(readonly, nonatomic) NSString *titleBarAvatarMaskActivePng;
@property(readonly, nonatomic) NSString *titleBarAvatarMaskActive2xPng;
@property(readonly, nonatomic) NSString *titleBarAvatarMask2xPng;
@property(readonly, nonatomic) NSString *timestampIconPng;
@property(readonly, nonatomic) NSString *timestampIcon2xPng;
@property(readonly, nonatomic) NSString *timelineAccountHeaderPng;
@property(readonly, nonatomic) NSString *timelineAccountHeader2xPng;
@property(readonly, nonatomic) NSString *tabFloatStatusTempIconPng;
@property(readonly, nonatomic) NSString *tabFloatStatusTempIcon2xPng;
@property(readonly, nonatomic) NSString *tabFloatRightPng;
@property(readonly, nonatomic) NSString *tabFloatRightActivePng;
@property(readonly, nonatomic) NSString *tabFloatRightActive2xPng;
@property(readonly, nonatomic) NSString *tabFloatRight2xPng;
@property(readonly, nonatomic) NSString *tabFloatLeftPng;
@property(readonly, nonatomic) NSString *tabFloatLeftActivePng;
@property(readonly, nonatomic) NSString *tabFloatLeftActive2xPng;
@property(readonly, nonatomic) NSString *tabFloatLeft2xPng;
@property(readonly, nonatomic) NSString *tabFloatCenterPng;
@property(readonly, nonatomic) NSString *tabFloatCenterActivePng;
@property(readonly, nonatomic) NSString *tabFloatCenterActive2xPng;
@property(readonly, nonatomic) NSString *tabFloatCenter2xPng;
@property(readonly, nonatomic) NSString *tabFloatBadgePng;
@property(readonly, nonatomic) NSString *tabFloatBadge2xPng;
@property(readonly, nonatomic) NSString *switchAccountXmppPng;
@property(readonly, nonatomic) NSString *switchAccountXmpp2xPng;
@property(readonly, nonatomic) NSString *switchAccountGmailPng;
@property(readonly, nonatomic) NSString *switchAccountGmail2xPng;
@property(readonly, nonatomic) NSString *switchAccountFacebookPng;
@property(readonly, nonatomic) NSString *switchAccountFacebook2xPng;
@property(readonly, nonatomic) NSString *statusTfNavbarPng;
@property(readonly, nonatomic) NSString *statusTfNavbar2xPng;
@property(readonly, nonatomic) NSString *statusPillSelectedPng;
@property(readonly, nonatomic) NSString *statusPillSelected2xPng;
@property(readonly, nonatomic) NSString *statusPillPng;
@property(readonly, nonatomic) NSString *statusPill2xPng;
@property(readonly, nonatomic) NSString *statusOfflineNavbarPng;
@property(readonly, nonatomic) NSString *statusOfflineNavbar2xPng;
@property(readonly, nonatomic) NSString *statusIdleNavbarPng;
@property(readonly, nonatomic) NSString *statusIdleNavbar2xPng;
@property(readonly, nonatomic) NSString *statusDropArrowWhitePng;
@property(readonly, nonatomic) NSString *statusDropArrowWhite2xPng;
@property(readonly, nonatomic) NSString *statusDropArrowPng;
@property(readonly, nonatomic) NSString *statusDropArrow2xPng;
@property(readonly, nonatomic) NSString *statusBusyNavbarPng;
@property(readonly, nonatomic) NSString *statusBusyNavbar2xPng;
@property(readonly, nonatomic) NSString *statusAwayNavbarPng;
@property(readonly, nonatomic) NSString *statusAwayNavbar2xPng;
@property(readonly, nonatomic) NSString *statusAvailableNavbarPng;
@property(readonly, nonatomic) NSString *statusAvailableNavbar2xPng;
@property(readonly, nonatomic) NSString *searchToolBarPng;
@property(readonly, nonatomic) NSString *searchToolBar2xPng;
@property(readonly, nonatomic) NSString *searchHeaderBgPng;
@property(readonly, nonatomic) NSString *searchHeaderBg2xPng;
@property(readonly, nonatomic) NSString *searchHeaderArrowPng;
@property(readonly, nonatomic) NSString *searchHeaderArrow2xPng;
@property(readonly, nonatomic) NSString *searchFieldPng;
@property(readonly, nonatomic) NSString *searchField2xPng;
@property(readonly, nonatomic) NSString *searchBuddyConvoCountPng;
@property(readonly, nonatomic) NSString *searchBuddyConvoCount2xPng;
@property(readonly, nonatomic) NSString *searchAvatarMaskPng;
@property(readonly, nonatomic) NSString *searchAvatarMask2xPng;
@property(readonly, nonatomic) NSString *searchActiveDateCellPng;
@property(readonly, nonatomic) NSString *searchActiveDateCell2xPng;
@property(readonly, nonatomic) NSString *searchActiveCellPng;
@property(readonly, nonatomic) NSString *searchActiveCell2xPng;
@property(readonly, nonatomic) NSString *rosterFooterPng;
@property(readonly, nonatomic) NSString *rosterFooter2xPng;
@property(readonly, nonatomic) NSString *requestDeclineBtnPng;
@property(readonly, nonatomic) NSString *requestDeclineBtnActivePng;
@property(readonly, nonatomic) NSString *requestDeclineBtnActive2xPng;
@property(readonly, nonatomic) NSString *requestDeclineBtn2xPng;
@property(readonly, nonatomic) NSString *requestAcceptBtnPng;
@property(readonly, nonatomic) NSString *requestAcceptBtnActivePng;
@property(readonly, nonatomic) NSString *requestAcceptBtnActive2xPng;
@property(readonly, nonatomic) NSString *requestAcceptBtn2xPng;
@property(readonly, nonatomic) NSString *quicklookIconPng;
@property(readonly, nonatomic) NSString *quicklookIconActivePng;
@property(readonly, nonatomic) NSString *quicklookIconActive2xPng;
@property(readonly, nonatomic) NSString *quicklookIcon2xPng;
@property(readonly, nonatomic) NSString *quicklookBtnWhiteActive2xPng;
@property(readonly, nonatomic) NSString *quicklookBtnWhite2xPng;
@property(readonly, nonatomic) NSString *quicklookBtnBlueActive2xPng;
@property(readonly, nonatomic) NSString *quicklookBtnBlue2xPng;
@property(readonly, nonatomic) NSString *prefsXmppIconPng;
@property(readonly, nonatomic) NSString *prefsXmppIcon2xPng;
@property(readonly, nonatomic) NSString *prefsSwitchKnobPng;
@property(readonly, nonatomic) NSString *prefsSwitchKnob2xPng;
@property(readonly, nonatomic) NSString *prefsSwitchFramePng;
@property(readonly, nonatomic) NSString *prefsSwitchFrame2xPng;
@property(readonly, nonatomic) NSString *prefsSecuritySslIconPng;
@property(readonly, nonatomic) NSString *prefsSecuritySslIcon2xPng;
@property(readonly, nonatomic) NSString *prefsSecurityBtnPng;
@property(readonly, nonatomic) NSString *prefsSecurityBtn2xPng;
@property(readonly, nonatomic) NSString *prefsPhotosBtnPng;
@property(readonly, nonatomic) NSString *prefsPhotosBtn2xPng;
@property(readonly, nonatomic) NSString *prefsHangoutsIconPng;
@property(readonly, nonatomic) NSString *prefsHangoutsIcon2xPng;
@property(readonly, nonatomic) NSString *prefsGeneralUsageIconPng;
@property(readonly, nonatomic) NSString *prefsGeneralUsageIcon2xPng;
@property(readonly, nonatomic) NSString *prefsGeneralTextIconPng;
@property(readonly, nonatomic) NSString *prefsGeneralTextIcon2xPng;
@property(readonly, nonatomic) NSString *prefsGeneralSoundIconPng;
@property(readonly, nonatomic) NSString *prefsGeneralSoundIcon2xPng;
@property(readonly, nonatomic) NSString *prefsGeneralIncomingIconPng;
@property(readonly, nonatomic) NSString *prefsGeneralIncomingIcon2xPng;
@property(readonly, nonatomic) NSString *prefsGeneralBtnPng;
@property(readonly, nonatomic) NSString *prefsGeneralBtn2xPng;
@property(readonly, nonatomic) NSString *prefsFtRadioPng;
@property(readonly, nonatomic) NSString *prefsFtRadioHighlightedPng;
@property(readonly, nonatomic) NSString *prefsFtRadioHighlighted2xPng;
@property(readonly, nonatomic) NSString *prefsFtRadioActivePng;
@property(readonly, nonatomic) NSString *prefsFtRadioActiveHighlightedPng;
@property(readonly, nonatomic) NSString *prefsFtRadioActiveHighlighted2xPng;
@property(readonly, nonatomic) NSString *prefsFtRadioActive2xPng;
@property(readonly, nonatomic) NSString *prefsFtRadio2xPng;
@property(readonly, nonatomic) NSString *prefsFtNativeTransferIconPng;
@property(readonly, nonatomic) NSString *prefsFtNativeTransferIconActivePng;
@property(readonly, nonatomic) NSString *prefsFtNativeTransferIconActive2xPng;
@property(readonly, nonatomic) NSString *prefsFtNativeTransferIcon2xPng;
@property(readonly, nonatomic) NSString *prefsFtDroplrIconPng;
@property(readonly, nonatomic) NSString *prefsFtDroplrIconActivePng;
@property(readonly, nonatomic) NSString *prefsFtDroplrIconActive2xPng;
@property(readonly, nonatomic) NSString *prefsFtDroplrIcon2xPng;
@property(readonly, nonatomic) NSString *prefsFtCloudappIconPng;
@property(readonly, nonatomic) NSString *prefsFtCloudappIconActivePng;
@property(readonly, nonatomic) NSString *prefsFtCloudappIconActive2xPng;
@property(readonly, nonatomic) NSString *prefsFtCloudappIcon2xPng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxPng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxHighlightedPng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxHighlighted2xPng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxActivePng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxActiveHighlightedPng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxActiveHighlighted2xPng;
@property(readonly, nonatomic) NSString *prefsFtCheckboxActive2xPng;
@property(readonly, nonatomic) NSString *prefsFtCheckbox2xPng;
@property(readonly, nonatomic) NSString *prefsFbIconPng;
@property(readonly, nonatomic) NSString *prefsFbIcon2xPng;
@property(readonly, nonatomic) NSString *prefsDeleteAccountBtnPng;
@property(readonly, nonatomic) NSString *prefsDeleteAccountBtnActivePng;
@property(readonly, nonatomic) NSString *prefsDeleteAccountBtnActive2xPng;
@property(readonly, nonatomic) NSString *prefsDeleteAccountBtn2xPng;
@property(readonly, nonatomic) NSString *prefsAddAccountXmppIconPng;
@property(readonly, nonatomic) NSString *prefsAddAccountXmppIcon2xPng;
@property(readonly, nonatomic) NSString *prefsAddAccountSepPng;
@property(readonly, nonatomic) NSString *prefsAddAccountSep2xPng;
@property(readonly, nonatomic) NSString *prefsAddAccountHangoutsIconPng;
@property(readonly, nonatomic) NSString *prefsAddAccountHangoutsIcon2xPng;
@property(readonly, nonatomic) NSString *prefsAddAccountFbIconPng;
@property(readonly, nonatomic) NSString *prefsAddAccountFbIcon2xPng;
@property(readonly, nonatomic) NSString *prefsAddAccountCellHighlightedPng;
@property(readonly, nonatomic) NSString *prefsAddAccountCellHighlighted2xPng;
@property(readonly, nonatomic) NSString *prefsAddAccountCellActivePng;
@property(readonly, nonatomic) NSString *prefsAddAccountCellActive2xPng;
@property(readonly, nonatomic) NSString *prefsAccountsBtnPng;
@property(readonly, nonatomic) NSString *prefsAccountsBtn2xPng;
@property(readonly, nonatomic) NSString *photoBubbleOverlayPng;
@property(readonly, nonatomic) NSString *photoBubbleOverlay2xPng;
@property(readonly, nonatomic) NSString *phoneFormatsDat;
@property(readonly, nonatomic) NSString *onlineStatusLightPng;
@property(readonly, nonatomic) NSString *onlineStatusLight2xPng;
@property(readonly, nonatomic) NSString *offlineStatusLightPng;
@property(readonly, nonatomic) NSString *offlineStatusLight2xPng;
@property(readonly, nonatomic) NSString *oddCellPng;
@property(readonly, nonatomic) NSString *oddCell2xPng;
@property(readonly, nonatomic) NSString *notifyAif;
@property(readonly, nonatomic) NSString *navbarSeparatorPng;
@property(readonly, nonatomic) NSString *navbarSeparator2xPng;
@property(readonly, nonatomic) NSString *minimizeMainPng;
@property(readonly, nonatomic) NSString *minimizeMain2xPng;
@property(readonly, nonatomic) NSString *minimizeHoverMainPng;
@property(readonly, nonatomic) NSString *minimizeHoverMain2xPng;
@property(readonly, nonatomic) NSString *minimizeActiveMainPng;
@property(readonly, nonatomic) NSString *minimizeActiveMain2xPng;
@property(readonly, nonatomic) NSString *menuStatusOnlinePng;
@property(readonly, nonatomic) NSString *menuStatusOnline2xPng;
@property(readonly, nonatomic) NSString *menuStatusOfflinePng;
@property(readonly, nonatomic) NSString *menuStatusOffline2xPng;
@property(readonly, nonatomic) NSString *menuStatusIdlePng;
@property(readonly, nonatomic) NSString *menuStatusIdle2xPng;
@property(readonly, nonatomic) NSString *menuStatusAwayPng;
@property(readonly, nonatomic) NSString *menuStatusAway2xPng;
@property(readonly, nonatomic) NSString *menuChatConvoPng;
@property(readonly, nonatomic) NSString *menuChatConvoActivePng;
@property(readonly, nonatomic) NSString *menuChatConvoActive2xPng;
@property(readonly, nonatomic) NSString *menuChatConvo2xPng;
@property(readonly, nonatomic) NSString *menuBgPng;
@property(readonly, nonatomic) NSString *menuBg2xPng;
@property(readonly, nonatomic) NSString *menuActiveCellPng;
@property(readonly, nonatomic) NSString *menuActiveCell2xPng;
@property(readonly, nonatomic) NSString *mediaBubbleFramePng;
@property(readonly, nonatomic) NSString *mediaBubbleFrameClearPng;
@property(readonly, nonatomic) NSString *mediaBubbleFrameClear2xPng;
@property(readonly, nonatomic) NSString *mediaBubbleFrame2xPng;
@property(readonly, nonatomic) NSString *mediaBubbleAvatarFramePng;
@property(readonly, nonatomic) NSString *mediaBubbleAvatarFrame2xPng;
@property(readonly, nonatomic) NSString *maximizeMainPng;
@property(readonly, nonatomic) NSString *maximizeMain2xPng;
@property(readonly, nonatomic) NSString *maximizeHoverMainPng;
@property(readonly, nonatomic) NSString *maximizeHoverMain2xPng;
@property(readonly, nonatomic) NSString *maximizeActiveMainPng;
@property(readonly, nonatomic) NSString *maximizeActiveMain2xPng;
@property(readonly, nonatomic) NSString *mASPreferencesWindowXib;
@property(readonly, nonatomic) NSString *instagramWhiteSeparatorPng;
@property(readonly, nonatomic) NSString *instagramWhiteSeparator2xPng;
@property(readonly, nonatomic) NSString *instagramUserAvatarPng;
@property(readonly, nonatomic) NSString *instagramUserAvatar2xPng;
@property(readonly, nonatomic) NSString *instagramIconPng;
@property(readonly, nonatomic) NSString *instagramIconActivePng;
@property(readonly, nonatomic) NSString *instagramIconActive2xPng;
@property(readonly, nonatomic) NSString *instagramIcon2xPng;
@property(readonly, nonatomic) NSString *instagramBlueSeparatorPng;
@property(readonly, nonatomic) NSString *instagramBlueSeparator2xPng;
@property(readonly, nonatomic) NSString *incomingUnreadBadgePng;
@property(readonly, nonatomic) NSString *incomingUnreadBadge2xPng;
@property(readonly, nonatomic) NSString *incomingStatusIconTypingPng;
@property(readonly, nonatomic) NSString *incomingStatusIconTypingBluePng;
@property(readonly, nonatomic) NSString *incomingStatusIconTypingBlue2xPng;
@property(readonly, nonatomic) NSString *incomingStatusIconTypingActivePng;
@property(readonly, nonatomic) NSString *incomingStatusIconTypingActive2xPng;
@property(readonly, nonatomic) NSString *incomingStatusIconTyping2xPng;
@property(readonly, nonatomic) NSString *incomingStatusIconPng;
@property(readonly, nonatomic) NSString *incomingStatusIconBluePng;
@property(readonly, nonatomic) NSString *incomingStatusIconBlue2xPng;
@property(readonly, nonatomic) NSString *incomingStatusIconActivePng;
@property(readonly, nonatomic) NSString *incomingStatusIconActive2xPng;
@property(readonly, nonatomic) NSString *incomingStatusIcon2xPng;
@property(readonly, nonatomic) NSString *incomingSettingsBtnPng;
@property(readonly, nonatomic) NSString *incomingSettingsBtnActivePng;
@property(readonly, nonatomic) NSString *incomingSettingsBtnActive2xPng;
@property(readonly, nonatomic) NSString *incomingSettingsBtn2xPng;
@property(readonly, nonatomic) NSString *incomingOnlineStatusPng;
@property(readonly, nonatomic) NSString *incomingOnlineStatus2xPng;
@property(readonly, nonatomic) NSString *incomingOfflineStatusPng;
@property(readonly, nonatomic) NSString *incomingOfflineStatus2xPng;
@property(readonly, nonatomic) NSString *incomingIdleStatusPng;
@property(readonly, nonatomic) NSString *incomingIdleStatus2xPng;
@property(readonly, nonatomic) NSString *incomingCloseSingleNotificationPng;
@property(readonly, nonatomic) NSString *incomingCloseSingleNotificationActivePng;
@property(readonly, nonatomic) NSString *incomingCloseSingleNotificationActive2xPng;
@property(readonly, nonatomic) NSString *incomingCloseSingleNotification2xPng;
@property(readonly, nonatomic) NSString *incomingClearNotificationsBtnPng;
@property(readonly, nonatomic) NSString *incomingClearNotificationsBtnActivePng;
@property(readonly, nonatomic) NSString *incomingClearNotificationsBtnActive2xPng;
@property(readonly, nonatomic) NSString *incomingClearNotificationsBtn2xPng;
@property(readonly, nonatomic) NSString *incomingBuddyTypingPng;
@property(readonly, nonatomic) NSString *incomingBuddyTyping2xPng;
@property(readonly, nonatomic) NSString *incomingBgPng;
@property(readonly, nonatomic) NSString *incomingBg2xPng;
@property(readonly, nonatomic) NSString *incomingAwayStatusPng;
@property(readonly, nonatomic) NSString *incomingAwayStatus2xPng;
@property(readonly, nonatomic) NSString *incomingAvatarFramePng;
@property(readonly, nonatomic) NSString *incomingAvatarFrame2xPng;
@property(readonly, nonatomic) NSString *inactiveCellTypingPng;
@property(readonly, nonatomic) NSString *inactiveCellTyping2xPng;
@property(readonly, nonatomic) NSString *idleStatusLightPng;
@property(readonly, nonatomic) NSString *idleStatusLight2xPng;
@property(readonly, nonatomic) NSString *hangoutsIconPng;
@property(readonly, nonatomic) NSString *hangoutsIcon2xPng;
@property(readonly, nonatomic) NSString *hangoutsColoredIconPng;
@property(readonly, nonatomic) NSString *hangoutsColoredIcon2xPng;
@property(readonly, nonatomic) NSString *groupedIconPng;
@property(readonly, nonatomic) NSString *groupedIcon2xPng;
@property(readonly, nonatomic) NSString *gmailHeaderIconPng;
@property(readonly, nonatomic) NSString *gmailHeaderIcon2xPng;
@property(readonly, nonatomic) NSString *flamingoDefaultsPlist;
@property(readonly, nonatomic) NSString *favoritesIconPng;
@property(readonly, nonatomic) NSString *favoritesIcon2xPng;
@property(readonly, nonatomic) NSString *facetimeIconPng;
@property(readonly, nonatomic) NSString *facetimeIcon2xPng;
@property(readonly, nonatomic) NSString *facebookIconPng;
@property(readonly, nonatomic) NSString *facebookIcon2xPng;
@property(readonly, nonatomic) NSString *facebookHeaderIconPng;
@property(readonly, nonatomic) NSString *facebookHeaderIcon2xPng;
@property(readonly, nonatomic) NSString *facebookColoredIconPng;
@property(readonly, nonatomic) NSString *facebookColoredIcon2xPng;
@property(readonly, nonatomic) NSString *fGOXMPPLoginRegisterWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOXMPPEditPriorityWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOWelcomeWindowControllerXib;
@property(readonly, nonatomic) NSString *fGORosterViewControllerXib;
@property(readonly, nonatomic) NSString *fGORequestsViewControllerXib;
@property(readonly, nonatomic) NSString *fGOPrimaryViewControllerXib;
@property(readonly, nonatomic) NSString *fGOPreferencesViewControllerXib;
@property(readonly, nonatomic) NSString *fGOOAuth2WebWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOOAuth2BasicWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOMessagesTableViewXib;
@property(readonly, nonatomic) NSString *fGOMenuViewControllerXib;
@property(readonly, nonatomic) NSString *fGOIntroViewControllerXib;
@property(readonly, nonatomic) NSString *fGOIncomingWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOHistoryWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOHistoryMessagesViewControllerXib;
@property(readonly, nonatomic) NSString *fGOHistoryHandlesViewControllerXib;
@property(readonly, nonatomic) NSString *fGOHistoryConversationsViewControllerXib;
@property(readonly, nonatomic) NSString *fGOFileTransferPrefViewControllerXib;
@property(readonly, nonatomic) NSString *fGOFileTransferPrefEditWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOFileTransferPrefAuthWindowControllerXib;
@property(readonly, nonatomic) NSString *fGOEmojiViewControllerXib;
@property(readonly, nonatomic) NSString *fGOEmojiPrototypeViewControllerXib;
@property(readonly, nonatomic) NSString *fGOConnectionsViewControllerXib;
@property(readonly, nonatomic) NSString *fGOComposeViewControllerXib;
@property(readonly, nonatomic) NSString *fGOChatViewControllerXib;
@property(readonly, nonatomic) NSString *fGOChatListViewControllerXib;
@property(readonly, nonatomic) NSString *fGOCardViewControllerXib;
@property(readonly, nonatomic) NSString *fGOAddPopoverViewControllerXib;
@property(readonly, nonatomic) NSString *fGOAddBuddyViewControllerXib;
@property(readonly, nonatomic) NSString *fGOAddAccountCardViewControllerXib;
@property(readonly, nonatomic) NSString *fGOAccountsPrefViewControllerXib;
@property(readonly, nonatomic) NSString *fGOAboutWindowControllerXib;
@property(readonly, nonatomic) NSString *evenCellPng;
@property(readonly, nonatomic) NSString *evenCell2xPng;
@property(readonly, nonatomic) NSString *errorBubbleRightNoNibPng;
@property(readonly, nonatomic) NSString *errorBubbleRightNoNib2xPng;
@property(readonly, nonatomic) NSString *errorBubbleRightNibPng;
@property(readonly, nonatomic) NSString *errorBubbleRightNib2xPng;
@property(readonly, nonatomic) NSString *errorBubbleRetryBtnPng;
@property(readonly, nonatomic) NSString *errorBubbleRetryBtnActivePng;
@property(readonly, nonatomic) NSString *errorBubbleRetryBtnActive2xPng;
@property(readonly, nonatomic) NSString *errorBubbleRetryBtn2xPng;
@property(readonly, nonatomic) NSString *errorBubbleCancelBtnPng;
@property(readonly, nonatomic) NSString *errorBubbleCancelBtnActivePng;
@property(readonly, nonatomic) NSString *errorBubbleCancelBtnActive2xPng;
@property(readonly, nonatomic) NSString *errorBubbleCancelBtn2xPng;
@property(readonly, nonatomic) NSString *endChatFooterPng;
@property(readonly, nonatomic) NSString *endChatFooter2xPng;
@property(readonly, nonatomic) NSString *emojiVerticalSepPng;
@property(readonly, nonatomic) NSString *emojiVerticalSep2xPng;
@property(readonly, nonatomic) NSString *emojiSmileBtnPng;
@property(readonly, nonatomic) NSString *emojiSmileBtnHighlightedPng;
@property(readonly, nonatomic) NSString *emojiSmileBtnHighlighted2xPng;
@property(readonly, nonatomic) NSString *emojiSmileBtnActivePng;
@property(readonly, nonatomic) NSString *emojiSmileBtnActive2xPng;
@property(readonly, nonatomic) NSString *emojiSmileBtn2xPng;
@property(readonly, nonatomic) NSString *emojiRecentBtnPng;
@property(readonly, nonatomic) NSString *emojiRecentBtnHighlightedPng;
@property(readonly, nonatomic) NSString *emojiRecentBtnHighlighted2xPng;
@property(readonly, nonatomic) NSString *emojiRecentBtnActivePng;
@property(readonly, nonatomic) NSString *emojiRecentBtnActive2xPng;
@property(readonly, nonatomic) NSString *emojiRecentBtn2xPng;
@property(readonly, nonatomic) NSString *emojiNumbersBtnPng;
@property(readonly, nonatomic) NSString *emojiNumbersBtnHighlightedPng;
@property(readonly, nonatomic) NSString *emojiNumbersBtnHighlighted2xPng;
@property(readonly, nonatomic) NSString *emojiNumbersBtnActivePng;
@property(readonly, nonatomic) NSString *emojiNumbersBtnActive2xPng;
@property(readonly, nonatomic) NSString *emojiNumbersBtn2xPng;
@property(readonly, nonatomic) NSString *emojiIconPng;
@property(readonly, nonatomic) NSString *emojiIconActivePng;
@property(readonly, nonatomic) NSString *emojiIconActive2xPng;
@property(readonly, nonatomic) NSString *emojiIcon2xPng;
@property(readonly, nonatomic) NSString *emojiHorizontalSepPng;
@property(readonly, nonatomic) NSString *emojiHorizontalSep2xPng;
@property(readonly, nonatomic) NSString *emojiFlowerBtnPng;
@property(readonly, nonatomic) NSString *emojiFlowerBtnHighlightedPng;
@property(readonly, nonatomic) NSString *emojiFlowerBtnHighlighted2xPng;
@property(readonly, nonatomic) NSString *emojiFlowerBtnActivePng;
@property(readonly, nonatomic) NSString *emojiFlowerBtnActive2xPng;
@property(readonly, nonatomic) NSString *emojiFlowerBtn2xPng;
@property(readonly, nonatomic) NSString *emojiDb;
@property(readonly, nonatomic) NSString *emojiCarBtnPng;
@property(readonly, nonatomic) NSString *emojiCarBtnHighlightedPng;
@property(readonly, nonatomic) NSString *emojiCarBtnHighlighted2xPng;
@property(readonly, nonatomic) NSString *emojiCarBtnActivePng;
@property(readonly, nonatomic) NSString *emojiCarBtnActive2xPng;
@property(readonly, nonatomic) NSString *emojiCarBtn2xPng;
@property(readonly, nonatomic) NSString *emojiBellBtnPng;
@property(readonly, nonatomic) NSString *emojiBellBtnHighlightedPng;
@property(readonly, nonatomic) NSString *emojiBellBtnHighlighted2xPng;
@property(readonly, nonatomic) NSString *emojiBellBtnActivePng;
@property(readonly, nonatomic) NSString *emojiBellBtnActive2xPng;
@property(readonly, nonatomic) NSString *emojiBellBtn2xPng;
@property(readonly, nonatomic) NSString *droplrIconPng;
@property(readonly, nonatomic) NSString *droplrIconActivePng;
@property(readonly, nonatomic) NSString *droplrIconActive2xPng;
@property(readonly, nonatomic) NSString *droplrIcon2xPng;
@property(readonly, nonatomic) NSString *dropboxIconPng;
@property(readonly, nonatomic) NSString *dropboxIconActivePng;
@property(readonly, nonatomic) NSString *dropboxIconActive2xPng;
@property(readonly, nonatomic) NSString *dropboxIcon2xPng;
@property(readonly, nonatomic) NSString *dropDownArrow90Png;
@property(readonly, nonatomic) NSString *dropDownArrow902xPng;
@property(readonly, nonatomic) NSString *dropDownArrow0Png;
@property(readonly, nonatomic) NSString *dropDownArrow02xPng;
@property(readonly, nonatomic) NSString *docQuicklookBtnWhitePng;
@property(readonly, nonatomic) NSString *docQuicklookBtnWhiteActivePng;
@property(readonly, nonatomic) NSString *docQuicklookBtnWhiteActive2xPng;
@property(readonly, nonatomic) NSString *docQuicklookBtnWhite2xPng;
@property(readonly, nonatomic) NSString *docQuicklookBtnBluePng;
@property(readonly, nonatomic) NSString *docQuicklookBtnBlueActivePng;
@property(readonly, nonatomic) NSString *docQuicklookBtnBlueActive2xPng;
@property(readonly, nonatomic) NSString *docQuicklookBtnBlue2xPng;
@property(readonly, nonatomic) NSString *docDownloadBtnWhitePng;
@property(readonly, nonatomic) NSString *docDownloadBtnWhiteActivePng;
@property(readonly, nonatomic) NSString *docDownloadBtnWhiteActive2xPng;
@property(readonly, nonatomic) NSString *docDownloadBtnWhite2xPng;
@property(readonly, nonatomic) NSString *docDownloadBtnBluePng;
@property(readonly, nonatomic) NSString *docDownloadBtnBlueActivePng;
@property(readonly, nonatomic) NSString *docDownloadBtnBlueActive2xPng;
@property(readonly, nonatomic) NSString *docDownloadBtnBlue2xPng;
@property(readonly, nonatomic) NSString *disabledMainPng;
@property(readonly, nonatomic) NSString *disabledMain2xPng;
@property(readonly, nonatomic) NSString *connectionTableBgPng;
@property(readonly, nonatomic) NSString *connectionTableBg2xPng;
@property(readonly, nonatomic) NSString *connectionSuccessIconPng;
@property(readonly, nonatomic) NSString *connectionSuccessIcon2xPng;
@property(readonly, nonatomic) NSString *connectionRetryIconPng;
@property(readonly, nonatomic) NSString *connectionRetryIcon2xPng;
@property(readonly, nonatomic) NSString *connectionFailedIconPng;
@property(readonly, nonatomic) NSString *connectionFailedIcon2xPng;
@property(readonly, nonatomic) NSString *connectionBtnPng;
@property(readonly, nonatomic) NSString *connectionBtnActivePng;
@property(readonly, nonatomic) NSString *connectionBtnActive2xPng;
@property(readonly, nonatomic) NSString *connectionBtn2xPng;
@property(readonly, nonatomic) NSString *composeNewMessageBtnPng;
@property(readonly, nonatomic) NSString *composeNewMessageBtnActivePng;
@property(readonly, nonatomic) NSString *composeNewMessageBtnActive2xPng;
@property(readonly, nonatomic) NSString *composeNewMessageBtn2xPng;
@property(readonly, nonatomic) NSString *composeBuddyFieldBgPng;
@property(readonly, nonatomic) NSString *composeBuddyFieldBg2xPng;
@property(readonly, nonatomic) NSString *composeBlankAvatarPng;
@property(readonly, nonatomic) NSString *composeBlankAvatar2xPng;
@property(readonly, nonatomic) NSString *cloudIconPng;
@property(readonly, nonatomic) NSString *cloudIconActivePng;
@property(readonly, nonatomic) NSString *cloudIconActive2xPng;
@property(readonly, nonatomic) NSString *cloudIcon2xPng;
@property(readonly, nonatomic) NSString *closeMainPng;
@property(readonly, nonatomic) NSString *closeMain2xPng;
@property(readonly, nonatomic) NSString *closeHoverMainPng;
@property(readonly, nonatomic) NSString *closeHoverMain2xPng;
@property(readonly, nonatomic) NSString *closeHighlightedConvoBtnPng;
@property(readonly, nonatomic) NSString *closeHighlightedConvoBtnActivePng;
@property(readonly, nonatomic) NSString *closeHighlightedConvoBtnActive2xPng;
@property(readonly, nonatomic) NSString *closeHighlightedConvoBtn2xPng;
@property(readonly, nonatomic) NSString *closeConvoBtnPng;
@property(readonly, nonatomic) NSString *closeConvoBtnActivePng;
@property(readonly, nonatomic) NSString *closeConvoBtnActive2xPng;
@property(readonly, nonatomic) NSString *closeConvoBtn2xPng;
@property(readonly, nonatomic) NSString *closeChatViewBtnPng;
@property(readonly, nonatomic) NSString *closeChatViewBtnActivePng;
@property(readonly, nonatomic) NSString *closeChatViewBtnActive2xPng;
@property(readonly, nonatomic) NSString *closeChatViewBtn2xPng;
@property(readonly, nonatomic) NSString *closeBuddyIconPng;
@property(readonly, nonatomic) NSString *closeBuddyIcon2xPng;
@property(readonly, nonatomic) NSString *closeActiveMainPng;
@property(readonly, nonatomic) NSString *closeActiveMain2xPng;
@property(readonly, nonatomic) NSString *clearSearchFieldBtnPng;
@property(readonly, nonatomic) NSString *clearSearchFieldBtnActivePng;
@property(readonly, nonatomic) NSString *clearSearchFieldBtnActive2xPng;
@property(readonly, nonatomic) NSString *clearSearchFieldBtn2xPng;
@property(readonly, nonatomic) NSString *chatTimestampIconPng;
@property(readonly, nonatomic) NSString *chatTimestampIcon2xPng;
@property(readonly, nonatomic) NSString *chatTimelinePng;
@property(readonly, nonatomic) NSString *chatTimeline2xPng;
@property(readonly, nonatomic) NSString *chatOfflineStatusIconPng;
@property(readonly, nonatomic) NSString *chatOfflineStatusIcon2xPng;
@property(readonly, nonatomic) NSString *chatLoadingPng;
@property(readonly, nonatomic) NSString *chatLoadingBgWhitePng;
@property(readonly, nonatomic) NSString *chatLoadingBgWhite2xPng;
@property(readonly, nonatomic) NSString *chatLoadingBgRedPng;
@property(readonly, nonatomic) NSString *chatLoadingBgRed2xPng;
@property(readonly, nonatomic) NSString *chatLoadingBgBluePng;
@property(readonly, nonatomic) NSString *chatLoadingBgBlue2xPng;
@property(readonly, nonatomic) NSString *chatLoading2xPng;
@property(readonly, nonatomic) NSString *chatIdleStatusIconPng;
@property(readonly, nonatomic) NSString *chatIdleStatusIcon2xPng;
@property(readonly, nonatomic) NSString *chatHeadPng;
@property(readonly, nonatomic) NSString *chatHead2xPng;
@property(readonly, nonatomic) NSString *chatFieldPng;
@property(readonly, nonatomic) NSString *chatField2xPng;
@property(readonly, nonatomic) NSString *chatAwayStatusIconPng;
@property(readonly, nonatomic) NSString *chatAwayStatusIcon2xPng;
@property(readonly, nonatomic) NSString *chatAvatarFramePng;
@property(readonly, nonatomic) NSString *chatAvatarFrame2xPng;
@property(readonly, nonatomic) NSString *chatAvailableStatusIconPng;
@property(readonly, nonatomic) NSString *chatAvailableStatusIcon2xPng;
@property(readonly, nonatomic) NSString *cardIndicatorPng;
@property(readonly, nonatomic) NSString *cardIndicatorActivePng;
@property(readonly, nonatomic) NSString *cardIndicatorActive2xPng;
@property(readonly, nonatomic) NSString *cardIndicator2xPng;
@property(readonly, nonatomic) NSString *buddyHeaderPng;
@property(readonly, nonatomic) NSString *buddyHeader2xPng;
@property(readonly, nonatomic) NSString *bubbleTypingNoNibPng;
@property(readonly, nonatomic) NSString *bubbleTypingNoNib2xPng;
@property(readonly, nonatomic) NSString *bubbleTypingNibPng;
@property(readonly, nonatomic) NSString *bubbleTypingNib2xPng;
@property(readonly, nonatomic) NSString *bubbleRightNoNibPng;
@property(readonly, nonatomic) NSString *bubbleRightNoNib2xPng;
@property(readonly, nonatomic) NSString *bubbleRightNibPng;
@property(readonly, nonatomic) NSString *bubbleRightNib2xPng;
@property(readonly, nonatomic) NSString *bubbleLeftNoNibPng;
@property(readonly, nonatomic) NSString *bubbleLeftNoNib2xPng;
@property(readonly, nonatomic) NSString *bubbleLeftNibPng;
@property(readonly, nonatomic) NSString *bubbleLeftNib2xPng;
@property(readonly, nonatomic) NSString *awayStatusLightPng;
@property(readonly, nonatomic) NSString *awayStatusLight2xPng;
@property(readonly, nonatomic) NSString *avatarMaskPng;
@property(readonly, nonatomic) NSString *avatarMask2xPng;
@property(readonly, nonatomic) NSString *avatarChatPng;
@property(readonly, nonatomic) NSString *avatarChat2xPng;
@property(readonly, nonatomic) NSString *appIconIcns;
@property(readonly, nonatomic) NSString *addRequestsTabsBgPng;
@property(readonly, nonatomic) NSString *addRequestsTabsBg2xPng;
@property(readonly, nonatomic) NSString *addRequestsRightTabHighlightedPng;
@property(readonly, nonatomic) NSString *addRequestsRightTabHighlighted2xPng;
@property(readonly, nonatomic) NSString *addRequestsRightTabActivePng;
@property(readonly, nonatomic) NSString *addRequestsRightTabActive2xPng;
@property(readonly, nonatomic) NSString *addRequestsLeftTabHighlightedPng;
@property(readonly, nonatomic) NSString *addRequestsLeftTabHighlighted2xPng;
@property(readonly, nonatomic) NSString *addRequestsLeftTabActivePng;
@property(readonly, nonatomic) NSString *addRequestsLeftTabActive2xPng;
@property(readonly, nonatomic) NSString *addRequestsClearBtnPng;
@property(readonly, nonatomic) NSString *addRequestsClearBtnDisabledPng;
@property(readonly, nonatomic) NSString *addRequestsClearBtnDisabled2xPng;
@property(readonly, nonatomic) NSString *addRequestsClearBtnActivePng;
@property(readonly, nonatomic) NSString *addRequestsClearBtnActive2xPng;
@property(readonly, nonatomic) NSString *addRequestsClearBtn2xPng;
@property(readonly, nonatomic) NSString *addRequestsBtnPng;
@property(readonly, nonatomic) NSString *addRequestsBtnActivePng;
@property(readonly, nonatomic) NSString *addRequestsBtnActive2xPng;
@property(readonly, nonatomic) NSString *addRequestsBtn2xPng;
@property(readonly, nonatomic) NSString *addRequestsAddBtnPng;
@property(readonly, nonatomic) NSString *addRequestsAddBtnDisabledPng;
@property(readonly, nonatomic) NSString *addRequestsAddBtnDisabled2xPng;
@property(readonly, nonatomic) NSString *addRequestsAddBtnActivePng;
@property(readonly, nonatomic) NSString *addRequestsAddBtnActive2xPng;
@property(readonly, nonatomic) NSString *addRequestsAddBtn2xPng;
@property(readonly, nonatomic) NSString *addRequestServiceSelectorPng;
@property(readonly, nonatomic) NSString *addRequestServiceSelector2xPng;
@property(readonly, nonatomic) NSString *addContactServerIconPng;
@property(readonly, nonatomic) NSString *addContactServerIcon2xPng;
@property(readonly, nonatomic) NSString *addContactGmailIconPng;
@property(readonly, nonatomic) NSString *addContactGmailIcon2xPng;
@property(readonly, nonatomic) NSString *addContactFacebookIconPng;
@property(readonly, nonatomic) NSString *addContactFacebookIcon2xPng;
@property(readonly, nonatomic) NSString *addAccountXmppIconPng;
@property(readonly, nonatomic) NSString *addAccountXmppIcon2xPng;
@property(readonly, nonatomic) NSString *addAccountTopCellPng;
@property(readonly, nonatomic) NSString *addAccountTopCellActivePng;
@property(readonly, nonatomic) NSString *addAccountTopCellActive2xPng;
@property(readonly, nonatomic) NSString *addAccountTopCell2xPng;
@property(readonly, nonatomic) NSString *addAccountMiddleCellPng;
@property(readonly, nonatomic) NSString *addAccountMiddleCellActivePng;
@property(readonly, nonatomic) NSString *addAccountMiddleCellActive2xPng;
@property(readonly, nonatomic) NSString *addAccountMiddleCell2xPng;
@property(readonly, nonatomic) NSString *addAccountGoogleIconPng;
@property(readonly, nonatomic) NSString *addAccountGoogleIcon2xPng;
@property(readonly, nonatomic) NSString *addAccountFacebookIconPng;
@property(readonly, nonatomic) NSString *addAccountFacebookIcon2xPng;
@property(readonly, nonatomic) NSString *addAccountBottomCellPng;
@property(readonly, nonatomic) NSString *addAccountBottomCellActivePng;
@property(readonly, nonatomic) NSString *addAccountBottomCellActive2xPng;
@property(readonly, nonatomic) NSString *addAccountBottomCell2xPng;
@property(readonly, nonatomic) NSString *addAccountArrowPng;
@property(readonly, nonatomic) NSString *addAccountArrow2xPng;
@property(readonly, nonatomic) NSString *activeCellTypingPng;
@property(readonly, nonatomic) NSString *activeCellTyping2xPng;
@property(readonly, nonatomic) NSString *activeCellPng;
@property(readonly, nonatomic) NSString *activeCell2xPng;
@property(readonly, nonatomic) NSString *aboutFlamingoTextPng;
@property(readonly, nonatomic) NSString *aboutFlamingoText2xPng;
@property(readonly, nonatomic) NSString *aboutFlamingoIconPng;
@property(readonly, nonatomic) NSString *aboutFlamingoIcon2xPng;
@property(readonly, nonatomic) NSString *aboutEasterIconPng;
@property(readonly, nonatomic) NSString *aboutEasterIcon2xPng;
- (id)description;
- (id)init;

@end

@interface RGenPathsRootAppiconappiconset : DescriptionString
{
}

@property(readonly, nonatomic) NSString *icon512x512Png;
@property(readonly, nonatomic) NSString *icon512x5122xPng;
@property(readonly, nonatomic) NSString *icon32x32Png;
@property(readonly, nonatomic) NSString *icon32x322xPng;
@property(readonly, nonatomic) NSString *icon256x256Png;
@property(readonly, nonatomic) NSString *icon256x2562xPng;
@property(readonly, nonatomic) NSString *icon16x16Png;
@property(readonly, nonatomic) NSString *icon16x162xPng;
@property(readonly, nonatomic) NSString *icon128x128Png;
@property(readonly, nonatomic) NSString *icon128x1282xPng;
@property(readonly, nonatomic) NSString *contentsJson;
- (id)description;

@end

@interface RGenPathsRootAppiconbetaappiconset : DescriptionString
{
}

@property(readonly, nonatomic) NSString *contentsJson;
@property(readonly, nonatomic) NSString *_64Png;
@property(readonly, nonatomic) NSString *_512Png;
@property(readonly, nonatomic) NSString *_5121Png;
@property(readonly, nonatomic) NSString *_32Png;
@property(readonly, nonatomic) NSString *_321Png;
@property(readonly, nonatomic) NSString *_256Png;
@property(readonly, nonatomic) NSString *_2561Png;
@property(readonly, nonatomic) NSString *_16Png;
@property(readonly, nonatomic) NSString *_128Png;
@property(readonly, nonatomic) NSString *_1024Png;
- (id)description;

@end

@interface RGenPathsRootMediaxcassets : DescriptionString
{
    RGenPathsRootAppiconappiconset *appIconAppiconset;
    RGenPathsRootAppiconbetaappiconset *appIconBetaAppiconset;
}

@property(readonly, nonatomic) RGenPathsRootAppiconbetaappiconset *appIconBetaAppiconset; // @synthesize appIconBetaAppiconset;
@property(readonly, nonatomic) RGenPathsRootAppiconappiconset *appIconAppiconset; // @synthesize appIconAppiconset;
- (id)description;
- (id)init;

@end

@interface RGenStringKeysRoot : NSObject
{
    NSString *aboutVersionFormat;
    NSString *accountChatMessageText;
    NSString *accountDoesntExistError;
    NSString *accountNotConnectedError;
    NSString *add;
    NSString *addBuddyName;
    NSString *addBuddyTitle;
    NSString *addToFavorites;
    NSString *analyticsAlternateButton;
    NSString *analyticsDefaultButton;
    NSString *analyticsInformativeText;
    NSString *analyticsMessage;
    NSString *attachToWindow;
    NSString *attachmentFileFormat;
    NSString *attachmentImage;
    NSString *attachmentVideo;
    NSString *away;
    NSString *busy;
    NSString *cancel;
    NSString *card1Description;
    NSString *card1Title;
    NSString *card2Description;
    NSString *card2Title;
    NSString *card3Description;
    NSString *card3Title;
    NSString *card4Description;
    NSString *card4Title;
    NSString *clear;
    NSString *cloudappAuthErrorDescription;
    NSString *connectionStatusConnected;
    NSString *connectionStatusConnecting;
    NSString *connectionStatusDisconnected;
    NSString *deleteAllConversations;
    NSString *deleteAllConversationsInformativeText;
    NSString *deleteAllConversationsMessage;
    NSString *deleteConversation;
    NSString *deleteConversationInformativeText;
    NSString *deleteConversationMessage;
    NSString *delete_;
    NSString *directConnection;
    NSString *editPresencePriority;
    NSString *emojiNature;
    NSString *emojiObjects;
    NSString *emojiPeople;
    NSString *emojiPlaces;
    NSString *emojiRecent;
    NSString *emojiSymbols;
    NSString *favorites;
    NSString *fieldError;
    NSString *fileTransferAuthTitle;
    NSString *fileTransferEditFormat;
    NSString *fileTransferError;
    NSString *fileTransferUnsupportedDefaultButton;
    NSString *fileTransferUnsupportedInformativeText1;
    NSString *fileTransferUnsupportedInformativeText2;
    NSString *fileTransferUnsupportedMessage;
    NSString *idle;
    NSString *logIn;
    NSString *menuEnterFullscreen;
    NSString *menuExitFullscreen;
    NSString *messageFailedToSend;
    NSString *messageSendError;
    NSString *next;
    NSString *no;
    NSString *noBuddies;
    NSString *noBuddyRequests;
    NSString *noConversations;
    NSString *noMessages;
    NSString *noUsernamePlaceholder;
    NSString *oauthReauthenticate;
    NSString *oauthTokenErrorDescription;
    NSString *oauthTokenErrorReason;
    NSString *offline;
    NSString *ok;
    NSString *oneNewMessage;
    NSString *online;
    NSString *openFile;
    NSString *openImage;
    NSString *openInNewColumn;
    NSString *openInNewWindow;
    NSString *openUrl;
    NSString *pendingAuthorization;
    NSString *playVideo;
    NSString *prefsAccounts;
    NSString *prefsAccountsHeader;
    NSString *prefsAnalytics;
    NSString *prefsBackgroundSound;
    NSString *prefsFileTransfer;
    NSString *prefsForegroundSound;
    NSString *prefsGeneral;
    NSString *prefsIcon;
    NSString *prefsIconDock;
    NSString *prefsIconDockMenu;
    NSString *prefsIconMenubar;
    NSString *prefsNotificationSound;
    NSString *prefsSecurity;
    NSString *prefsSecurityAllowSelfSsl;
    NSString *prefsTextSize;
    NSString *prefsTextSizeLarge;
    NSString *prefsTextSizeMedium;
    NSString *prefsTextSizeSmall;
    NSString *quickLook;
    NSString *reauthorizeAfterRemoval;
    NSString *remove;
    NSString *removeAccount;
    NSString *removeAccountInformativeText;
    NSString *removeAccountMessage;
    NSString *removeBuddy;
    NSString *removeBuddyConfirmation;
    NSString *removeConversation;
    NSString *removeFromFavorites;
    NSString *requestCellTooltip;
    NSString *requestReceivedText;
    NSString *requestReceivedTitle;
    NSString *requestsTitle;
    NSString *saveFile;
    NSString *showContactCard;
    NSString *signIn;
    NSString *statusChatMessageOnlineText;
    NSString *statusChatMessageText;
    NSString *tooltipAddBuddy;
    NSString *tooltipBuddyRequests;
    NSString *tooltipChangeAvatar;
    NSString *tooltipCloseConversation;
    NSString *tooltipCompose;
    NSString *tooltipConnectionStatus;
    NSString *tooltipSearch;
    NSString *tooltipSwitchAccount;
    NSString *unified;
    NSString *xCopyImage;
    NSString *xCopyUrl;
    NSString *xNewMessage;
    NSString *xNewMessages;
    NSString *xmppRegisterErrorConflict;
    NSString *xmppRegisterErrorGeneric;
    NSString *xmppRegisterErrorNotAcceptable;
    NSString *xmppRegisterInformativeText;
    NSString *xmppRegisterMessage;
    NSString *xmppSslInformativeText;
    NSString *xmppSslMessage;
    NSString *xpcInterruptionErrorDescription;
    NSString *xpcInterruptionErrorReason;
    NSString *yes;
}

+ (void)load;
@property(readonly, nonatomic) NSString *yes; // @synthesize yes;
@property(readonly, nonatomic) NSString *xpcInterruptionErrorReason; // @synthesize xpcInterruptionErrorReason;
@property(readonly, nonatomic) NSString *xpcInterruptionErrorDescription; // @synthesize xpcInterruptionErrorDescription;
@property(readonly, nonatomic) NSString *xmppSslMessage; // @synthesize xmppSslMessage;
@property(readonly, nonatomic) NSString *xmppSslInformativeText; // @synthesize xmppSslInformativeText;
@property(readonly, nonatomic) NSString *xmppRegisterMessage; // @synthesize xmppRegisterMessage;
@property(readonly, nonatomic) NSString *xmppRegisterInformativeText; // @synthesize xmppRegisterInformativeText;
@property(readonly, nonatomic) NSString *xmppRegisterErrorNotAcceptable; // @synthesize xmppRegisterErrorNotAcceptable;
@property(readonly, nonatomic) NSString *xmppRegisterErrorGeneric; // @synthesize xmppRegisterErrorGeneric;
@property(readonly, nonatomic) NSString *xmppRegisterErrorConflict; // @synthesize xmppRegisterErrorConflict;
@property(readonly, nonatomic) NSString *xNewMessages; // @synthesize xNewMessages;
@property(readonly, nonatomic) NSString *xNewMessage; // @synthesize xNewMessage;
@property(readonly, nonatomic) NSString *xCopyUrl; // @synthesize xCopyUrl;
@property(readonly, nonatomic) NSString *xCopyImage; // @synthesize xCopyImage;
@property(readonly, nonatomic) NSString *unified; // @synthesize unified;
@property(readonly, nonatomic) NSString *tooltipSwitchAccount; // @synthesize tooltipSwitchAccount;
@property(readonly, nonatomic) NSString *tooltipSearch; // @synthesize tooltipSearch;
@property(readonly, nonatomic) NSString *tooltipConnectionStatus; // @synthesize tooltipConnectionStatus;
@property(readonly, nonatomic) NSString *tooltipCompose; // @synthesize tooltipCompose;
@property(readonly, nonatomic) NSString *tooltipCloseConversation; // @synthesize tooltipCloseConversation;
@property(readonly, nonatomic) NSString *tooltipChangeAvatar; // @synthesize tooltipChangeAvatar;
@property(readonly, nonatomic) NSString *tooltipBuddyRequests; // @synthesize tooltipBuddyRequests;
@property(readonly, nonatomic) NSString *tooltipAddBuddy; // @synthesize tooltipAddBuddy;
@property(readonly, nonatomic) NSString *statusChatMessageText; // @synthesize statusChatMessageText;
@property(readonly, nonatomic) NSString *statusChatMessageOnlineText; // @synthesize statusChatMessageOnlineText;
@property(readonly, nonatomic) NSString *signIn; // @synthesize signIn;
@property(readonly, nonatomic) NSString *showContactCard; // @synthesize showContactCard;
@property(readonly, nonatomic) NSString *saveFile; // @synthesize saveFile;
@property(readonly, nonatomic) NSString *requestsTitle; // @synthesize requestsTitle;
@property(readonly, nonatomic) NSString *requestReceivedTitle; // @synthesize requestReceivedTitle;
@property(readonly, nonatomic) NSString *requestReceivedText; // @synthesize requestReceivedText;
@property(readonly, nonatomic) NSString *requestCellTooltip; // @synthesize requestCellTooltip;
@property(readonly, nonatomic) NSString *removeFromFavorites; // @synthesize removeFromFavorites;
@property(readonly, nonatomic) NSString *removeConversation; // @synthesize removeConversation;
@property(readonly, nonatomic) NSString *removeBuddyConfirmation; // @synthesize removeBuddyConfirmation;
@property(readonly, nonatomic) NSString *removeBuddy; // @synthesize removeBuddy;
@property(readonly, nonatomic) NSString *removeAccountMessage; // @synthesize removeAccountMessage;
@property(readonly, nonatomic) NSString *removeAccountInformativeText; // @synthesize removeAccountInformativeText;
@property(readonly, nonatomic) NSString *removeAccount; // @synthesize removeAccount;
@property(readonly, nonatomic) NSString *remove; // @synthesize remove;
@property(readonly, nonatomic) NSString *reauthorizeAfterRemoval; // @synthesize reauthorizeAfterRemoval;
@property(readonly, nonatomic) NSString *quickLook; // @synthesize quickLook;
@property(readonly, nonatomic) NSString *prefsTextSizeSmall; // @synthesize prefsTextSizeSmall;
@property(readonly, nonatomic) NSString *prefsTextSizeMedium; // @synthesize prefsTextSizeMedium;
@property(readonly, nonatomic) NSString *prefsTextSizeLarge; // @synthesize prefsTextSizeLarge;
@property(readonly, nonatomic) NSString *prefsTextSize; // @synthesize prefsTextSize;
@property(readonly, nonatomic) NSString *prefsSecurityAllowSelfSsl; // @synthesize prefsSecurityAllowSelfSsl;
@property(readonly, nonatomic) NSString *prefsSecurity; // @synthesize prefsSecurity;
@property(readonly, nonatomic) NSString *prefsNotificationSound; // @synthesize prefsNotificationSound;
@property(readonly, nonatomic) NSString *prefsIconMenubar; // @synthesize prefsIconMenubar;
@property(readonly, nonatomic) NSString *prefsIconDockMenu; // @synthesize prefsIconDockMenu;
@property(readonly, nonatomic) NSString *prefsIconDock; // @synthesize prefsIconDock;
@property(readonly, nonatomic) NSString *prefsIcon; // @synthesize prefsIcon;
@property(readonly, nonatomic) NSString *prefsGeneral; // @synthesize prefsGeneral;
@property(readonly, nonatomic) NSString *prefsForegroundSound; // @synthesize prefsForegroundSound;
@property(readonly, nonatomic) NSString *prefsFileTransfer; // @synthesize prefsFileTransfer;
@property(readonly, nonatomic) NSString *prefsBackgroundSound; // @synthesize prefsBackgroundSound;
@property(readonly, nonatomic) NSString *prefsAnalytics; // @synthesize prefsAnalytics;
@property(readonly, nonatomic) NSString *prefsAccountsHeader; // @synthesize prefsAccountsHeader;
@property(readonly, nonatomic) NSString *prefsAccounts; // @synthesize prefsAccounts;
@property(readonly, nonatomic) NSString *playVideo; // @synthesize playVideo;
@property(readonly, nonatomic) NSString *pendingAuthorization; // @synthesize pendingAuthorization;
@property(readonly, nonatomic) NSString *openUrl; // @synthesize openUrl;
@property(readonly, nonatomic) NSString *openInNewWindow; // @synthesize openInNewWindow;
@property(readonly, nonatomic) NSString *openInNewColumn; // @synthesize openInNewColumn;
@property(readonly, nonatomic) NSString *openImage; // @synthesize openImage;
@property(readonly, nonatomic) NSString *openFile; // @synthesize openFile;
@property(readonly, nonatomic) NSString *online; // @synthesize online;
@property(readonly, nonatomic) NSString *oneNewMessage; // @synthesize oneNewMessage;
@property(readonly, nonatomic) NSString *ok; // @synthesize ok;
@property(readonly, nonatomic) NSString *offline; // @synthesize offline;
@property(readonly, nonatomic) NSString *oauthTokenErrorReason; // @synthesize oauthTokenErrorReason;
@property(readonly, nonatomic) NSString *oauthTokenErrorDescription; // @synthesize oauthTokenErrorDescription;
@property(readonly, nonatomic) NSString *oauthReauthenticate; // @synthesize oauthReauthenticate;
@property(readonly, nonatomic) NSString *noUsernamePlaceholder; // @synthesize noUsernamePlaceholder;
@property(readonly, nonatomic) NSString *noMessages; // @synthesize noMessages;
@property(readonly, nonatomic) NSString *noConversations; // @synthesize noConversations;
@property(readonly, nonatomic) NSString *noBuddyRequests; // @synthesize noBuddyRequests;
@property(readonly, nonatomic) NSString *noBuddies; // @synthesize noBuddies;
@property(readonly, nonatomic) NSString *no; // @synthesize no;
@property(readonly, nonatomic) NSString *next; // @synthesize next;
@property(readonly, nonatomic) NSString *messageSendError; // @synthesize messageSendError;
@property(readonly, nonatomic) NSString *messageFailedToSend; // @synthesize messageFailedToSend;
@property(readonly, nonatomic) NSString *menuExitFullscreen; // @synthesize menuExitFullscreen;
@property(readonly, nonatomic) NSString *menuEnterFullscreen; // @synthesize menuEnterFullscreen;
@property(readonly, nonatomic) NSString *logIn; // @synthesize logIn;
@property(readonly, nonatomic) NSString *idle; // @synthesize idle;
@property(readonly, nonatomic) NSString *fileTransferUnsupportedMessage; // @synthesize fileTransferUnsupportedMessage;
@property(readonly, nonatomic) NSString *fileTransferUnsupportedInformativeText2; // @synthesize fileTransferUnsupportedInformativeText2;
@property(readonly, nonatomic) NSString *fileTransferUnsupportedInformativeText1; // @synthesize fileTransferUnsupportedInformativeText1;
@property(readonly, nonatomic) NSString *fileTransferUnsupportedDefaultButton; // @synthesize fileTransferUnsupportedDefaultButton;
@property(readonly, nonatomic) NSString *fileTransferError; // @synthesize fileTransferError;
@property(readonly, nonatomic) NSString *fileTransferEditFormat; // @synthesize fileTransferEditFormat;
@property(readonly, nonatomic) NSString *fileTransferAuthTitle; // @synthesize fileTransferAuthTitle;
@property(readonly, nonatomic) NSString *fieldError; // @synthesize fieldError;
@property(readonly, nonatomic) NSString *favorites; // @synthesize favorites;
@property(readonly, nonatomic) NSString *emojiSymbols; // @synthesize emojiSymbols;
@property(readonly, nonatomic) NSString *emojiRecent; // @synthesize emojiRecent;
@property(readonly, nonatomic) NSString *emojiPlaces; // @synthesize emojiPlaces;
@property(readonly, nonatomic) NSString *emojiPeople; // @synthesize emojiPeople;
@property(readonly, nonatomic) NSString *emojiObjects; // @synthesize emojiObjects;
@property(readonly, nonatomic) NSString *emojiNature; // @synthesize emojiNature;
@property(readonly, nonatomic) NSString *editPresencePriority; // @synthesize editPresencePriority;
@property(readonly, nonatomic) NSString *directConnection; // @synthesize directConnection;
@property(readonly, nonatomic) NSString *delete_; // @synthesize delete_;
@property(readonly, nonatomic) NSString *deleteConversationMessage; // @synthesize deleteConversationMessage;
@property(readonly, nonatomic) NSString *deleteConversationInformativeText; // @synthesize deleteConversationInformativeText;
@property(readonly, nonatomic) NSString *deleteConversation; // @synthesize deleteConversation;
@property(readonly, nonatomic) NSString *deleteAllConversationsMessage; // @synthesize deleteAllConversationsMessage;
@property(readonly, nonatomic) NSString *deleteAllConversationsInformativeText; // @synthesize deleteAllConversationsInformativeText;
@property(readonly, nonatomic) NSString *deleteAllConversations; // @synthesize deleteAllConversations;
@property(readonly, nonatomic) NSString *connectionStatusDisconnected; // @synthesize connectionStatusDisconnected;
@property(readonly, nonatomic) NSString *connectionStatusConnecting; // @synthesize connectionStatusConnecting;
@property(readonly, nonatomic) NSString *connectionStatusConnected; // @synthesize connectionStatusConnected;
@property(readonly, nonatomic) NSString *cloudappAuthErrorDescription; // @synthesize cloudappAuthErrorDescription;
@property(readonly, nonatomic) NSString *clear; // @synthesize clear;
@property(readonly, nonatomic) NSString *card4Title; // @synthesize card4Title;
@property(readonly, nonatomic) NSString *card4Description; // @synthesize card4Description;
@property(readonly, nonatomic) NSString *card3Title; // @synthesize card3Title;
@property(readonly, nonatomic) NSString *card3Description; // @synthesize card3Description;
@property(readonly, nonatomic) NSString *card2Title; // @synthesize card2Title;
@property(readonly, nonatomic) NSString *card2Description; // @synthesize card2Description;
@property(readonly, nonatomic) NSString *card1Title; // @synthesize card1Title;
@property(readonly, nonatomic) NSString *card1Description; // @synthesize card1Description;
@property(readonly, nonatomic) NSString *cancel; // @synthesize cancel;
@property(readonly, nonatomic) NSString *busy; // @synthesize busy;
@property(readonly, nonatomic) NSString *away; // @synthesize away;
@property(readonly, nonatomic) NSString *attachmentVideo; // @synthesize attachmentVideo;
@property(readonly, nonatomic) NSString *attachmentImage; // @synthesize attachmentImage;
@property(readonly, nonatomic) NSString *attachmentFileFormat; // @synthesize attachmentFileFormat;
@property(readonly, nonatomic) NSString *attachToWindow; // @synthesize attachToWindow;
@property(readonly, nonatomic) NSString *analyticsMessage; // @synthesize analyticsMessage;
@property(readonly, nonatomic) NSString *analyticsInformativeText; // @synthesize analyticsInformativeText;
@property(readonly, nonatomic) NSString *analyticsDefaultButton; // @synthesize analyticsDefaultButton;
@property(readonly, nonatomic) NSString *analyticsAlternateButton; // @synthesize analyticsAlternateButton;
@property(readonly, nonatomic) NSString *addToFavorites; // @synthesize addToFavorites;
@property(readonly, nonatomic) NSString *addBuddyTitle; // @synthesize addBuddyTitle;
@property(readonly, nonatomic) NSString *addBuddyName; // @synthesize addBuddyName;
@property(readonly, nonatomic) NSString *add; // @synthesize add;
@property(readonly, nonatomic) NSString *accountNotConnectedError; // @synthesize accountNotConnectedError;
@property(readonly, nonatomic) NSString *accountDoesntExistError; // @synthesize accountDoesntExistError;
@property(readonly, nonatomic) NSString *accountChatMessageText; // @synthesize accountChatMessageText;
@property(readonly, nonatomic) NSString *aboutVersionFormat; // @synthesize aboutVersionFormat;
- (id)init;

@end

@interface RMPhoneFormat : NSObject
{
    NSData *_data;
    NSString *_defaultCountry;
    NSString *_defaultCallingCode;
    NSMutableDictionary *_callingCodeOffsets;
    NSMutableDictionary *_callingCodeCountries;
    NSMutableDictionary *_callingCodeData;
    NSMutableDictionary *_countryCallingCode;
}

+ (id)instance;
+ (id)strip:(id)arg1;
+ (void)initialize;
- (void)parseDataHeader;
- (id)callingCodeInfo:(id)arg1;
- (int)value16BE:(unsigned long long)arg1;
- (int)value16:(unsigned long long)arg1;
- (unsigned int)value32:(unsigned long long)arg1;
- (BOOL)isPhoneNumberValid:(id)arg1;
- (id)format:(id)arg1;
- (id)findCallingCodeInfo:(id)arg1;
- (id)countriesForCallingCode:(id)arg1;
- (id)callingCodeForCountryCode:(id)arg1;
- (id)defaultCallingCode;
- (id)initWithDefaultCountry:(id)arg1;
- (id)init;

@end

@interface RuleSet : NSObject
{
    BOOL _hasRuleWithIntlPrefix;
    BOOL _hasRuleWithTrunkPrefix;
    int _matchLen;
    NSMutableArray *_rules;
}

@property(nonatomic) BOOL hasRuleWithTrunkPrefix; // @synthesize hasRuleWithTrunkPrefix=_hasRuleWithTrunkPrefix;
@property(nonatomic) BOOL hasRuleWithIntlPrefix; // @synthesize hasRuleWithIntlPrefix=_hasRuleWithIntlPrefix;
@property(retain, nonatomic) NSMutableArray *rules; // @synthesize rules=_rules;
@property(nonatomic) int matchLen; // @synthesize matchLen=_matchLen;
- (id)description;
- (BOOL)isValid:(id)arg1 intlPrefix:(id)arg2 trunkPrefix:(id)arg3 prefixRequired:(BOOL)arg4;
- (id)format:(id)arg1 intlPrefix:(id)arg2 trunkPrefix:(id)arg3 prefixRequired:(BOOL)arg4;

@end

@interface SLRequest (RACSupport)
- (id)rac_performJSONRequest;
@end

@interface XMPPJID (FGOConvenience)
+ (id)fgo_myJIDWithHandle:(id)arg1;
@end

@interface XMPPStream (FGOConvenience)
+ (id)fgo_XMPPSASLError;
@end

@interface FGOAppDelegate : NSObject <FGOOAuth2KeyStorageDelegate, BITCrashManagerDelegate, NSApplicationDelegate, NSMenuDelegate, NSWindowRestoration>
{
	BOOL _shouldReportInitialAnalytics;
	FGOMainWindowController *_mainWindowController;
	FGOWelcomeWindowController *_welcomeWindowController;
	FGOPreferencesWindowController *_preferencesWindowController;
	FGOAboutWindowController *_aboutWindowController;
	FGOStatusBarController *_statusBarController;
	FGOHistoryWindowController *_historyWindowController;
	BITCrashManager *_crashManager;
	NSWindow *_window;
	NSMenu *_accountsMenu;
	NSMenu *_conversationsMenu;
	NSMenu *_windowMenu;
	NSMenu *_menuBarMenu;
	NSMenu *_menuBarAccountsMenu;
}

+ (id)feedbackVersionString;
+ (id)emailURLWithSubjectPrefix:(id)arg1;
+ (void)restoreWindowWithIdentifier:(id)arg1 state:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
+ (void)load;
@property(nonatomic) __weak NSMenu *menuBarAccountsMenu; // @synthesize menuBarAccountsMenu=_menuBarAccountsMenu;
@property(retain, nonatomic) NSMenu *menuBarMenu; // @synthesize menuBarMenu=_menuBarMenu;
@property(nonatomic) __weak NSMenu *windowMenu; // @synthesize windowMenu=_windowMenu;
@property(nonatomic) __weak NSMenu *conversationsMenu; // @synthesize conversationsMenu=_conversationsMenu;
@property(nonatomic) __weak NSMenu *accountsMenu; // @synthesize accountsMenu=_accountsMenu;
@property NSWindow *window; // @synthesize window=_window;
@property(readonly, nonatomic) BITCrashManager *crashManager; // @synthesize crashManager=_crashManager;
@property(retain, nonatomic) FGOHistoryWindowController *historyWindowController; // @synthesize historyWindowController=_historyWindowController;
@property(retain, nonatomic) FGOStatusBarController *statusBarController; // @synthesize statusBarController=_statusBarController;
@property(retain, nonatomic) FGOAboutWindowController *aboutWindowController; // @synthesize aboutWindowController=_aboutWindowController;
@property(retain, nonatomic) FGOPreferencesWindowController *preferencesWindowController; // @synthesize preferencesWindowController=_preferencesWindowController;
@property(retain, nonatomic) FGOWelcomeWindowController *welcomeWindowController; // @synthesize welcomeWindowController=_welcomeWindowController;
- (id)oAuth2KeyStorage:(id)arg1 parentWindowForIdentifier:(id)arg2;
- (id)oAuth2KeyStorage:(id)arg1 providerInstanceForIdentifier:(id)arg2;
- (BOOL)validateMenuItem:(id)arg1;
- (void)selectedAccountMenuItem:(id)arg1;
- (void)populateAccountsMenu:(id)arg1;
- (void)menuNeedsUpdate:(id)arg1;
- (void)openPrivacyPolicy:(id)arg1;
- (void)openFAQ:(id)arg1;
- (void)openWebsite:(id)arg1;
- (void)reportABug:(id)arg1;
- (void)sendFeedback:(id)arg1;
- (void)toggleFullscreen:(id)arg1;
- (void)closeActiveConversation:(id)arg1;
- (void)activateMainWindow:(id)arg1;
- (void)openFileTransferPreferences:(id)arg1;
- (void)openConversationHistory:(id)arg1;
- (void)openWelcomeWindow:(id)arg1;
- (void)openAbout:(id)arg1;
- (void)openPreferences:(id)arg1;
- (void)aboutWindowClosed:(id)arg1;
- (void)preferencesWindowClosed:(id)arg1;
- (void)historyWindowClosed:(id)arg1;
- (void)welcomeWindowClosed:(id)arg1;
@property(readonly, nonatomic) FGOMainWindowController *mainWindowController; // @synthesize mainWindowController=_mainWindowController;
- (void)showMainApplicationWindow;
- (void)showMainApplicationWindowForCrashManager:(id)arg1;
- (void)configureCrashReporter;
- (void)setIconVisibility:(long long)arg1;
- (BOOL)promptForAnalyticsIfNecessary;
- (unsigned long long)applicationShouldTerminate:(id)arg1;
- (BOOL)applicationShouldHandleReopen:(id)arg1 hasVisibleWindows:(BOOL)arg2;
- (void)applicationDidFinishLaunching:(id)arg1;

@end

// Remaining properties
